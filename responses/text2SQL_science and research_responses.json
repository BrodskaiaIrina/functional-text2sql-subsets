{
    "queries": [
        {
            "question": "Какие 10 исследователей участвуют в проектах с наибольшим объемом финансирования (более 1000000 рублей), опубликовали хотя бы одну статью в журнале с импакт-фактором выше 3.5 за последние 2 года, и работают в университетах, основанных до 1960 года? Отсортируйте результаты по убыванию бюджета проекта.",
            "sql_query": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "gpt-4o_response": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "gpt-4o_response_ru": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "google/gemini-2.0-flash-001_response": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, \n       p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, \n       p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "gigachat_response": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;",
            "gigachat_response_ru": "SELECT DISTINCT r.researcher_id, r.first_name, r.last_name, r.position, p.title AS project_title, p.budget, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON pub.project_id = p.project_id\nWHERE p.budget > 1000000\nAND pub.impact_factor > 3.5\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND i.type = 'Университет'\nAND i.established_year < 1960\nORDER BY p.budget DESC\nLIMIT 10;"
        },
        {
            "question": "Какие 7 учреждений имеют наибольшее количество международных коллабораций (с организациями за пределами России) за последние 3 года? Включите информацию об институтах, о количестве коллабораций, количестве связанных проектов и общем бюджете всех связанных проектов. Учитывайте только учреждения, имеющие отделы с бюджетом более 1000000 рублей.",
            "sql_query": "SELECT i.institution_id, i.name, i.country, i.city,\n       COUNT(DISTINCT c.collaboration_id) AS collaboration_count,\n       COUNT(DISTINCT c.project_id) AS project_count,\n       SUM(p.budget) AS total_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Collaborations c ON p.project_id = c.project_id\nJOIN Institutions i2 ON c.institution_id = i2.institution_id\nWHERE i2.country != 'Россия'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND d.budget > 1000000\nGROUP BY i.institution_id, i.name, i.country, i.city\nORDER BY collaboration_count DESC, total_budget DESC\nLIMIT 7;",
            "gpt-4o_response": "SELECT i.institution_id, i.name AS institution_name, i.country, i.city,\n       COUNT(DISTINCT c.collaboration_id) AS international_collaborations_count,\n       COUNT(DISTINCT p.project_id) AS related_projects_count,\n       SUM(p.budget) AS total_related_projects_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Collaborations c ON p.project_id = c.project_id\nWHERE i.country != 'Россия'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND d.budget > 1000000\nGROUP BY i.institution_id, i.name, i.country, i.city\nORDER BY international_collaborations_count DESC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT i.institution_id, i.name AS institution_name, i.country, i.city,\n       COUNT(DISTINCT c.collaboration_id) AS collaboration_count,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_project_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Collaborations c ON p.project_id = c.project_id\nWHERE i.country != 'Россия'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND d.budget > 1000000\nGROUP BY i.institution_id, i.name, i.country, i.city\nORDER BY collaboration_count DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    i.institution_id,\n    i.name AS institution_name,\n    COUNT(DISTINCT c.collaboration_id) AS collaboration_count,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    SUM(p.budget) AS total_project_budget\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Collaborations c ON i.institution_id = c.institution_id\nJOIN\n    Projects p ON c.project_id = p.project_id\nWHERE\n    i.country != 'Россия'\n    AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND d.budget > 1000000\nGROUP BY\n    i.institution_id, i.name\nORDER BY\n    collaboration_count DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    i.name AS institution_name,\n    COUNT(DISTINCT c.collaboration_id) AS collaboration_count,\n    COUNT(DISTINCT c.project_id) AS project_count,\n    SUM(p.budget) AS total_project_budget\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Collaborations c ON i.institution_id = c.institution_id\nJOIN\n    Projects p ON c.project_id = p.project_id\nWHERE\n    i.country != 'Россия'\n    AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND d.budget > 1000000\nGROUP BY\n    i.institution_id, i.name\nORDER BY\n    collaboration_count DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT i.institution_id, i.name, COUNT(DISTINCT c.collaboration_id) AS collaborations_count,\n       COUNT(DISTINCT p.project_id) AS projects_count, SUM(p.budget) AS total_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Collaborations c ON p.project_id = c.project_id\nWHERE i.country != 'Россия'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND d.budget > 1000000\nGROUP BY i.institution_id, i.name\nORDER BY collaborations_count DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT i.institution_id, i.name, COUNT(DISTINCT c.collaboration_id) AS collaborations_count,\n       COUNT(DISTINCT p.project_id) AS projects_count, SUM(p.budget) AS total_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Collaborations c ON p.project_id = c.project_id\nWHERE i.country!= 'Россия' AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND d.budget > 1000000\nGROUP BY i.institution_id, i.name\nORDER BY collaborations_count DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT i.institution_id, i.name AS institution_name, i.country, i.city,\n       COUNT(DISTINCT c.collaboration_id) AS collaboration_count,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_project_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Collaborations c ON p.project_id = c.project_id\nJOIN Institutions partner ON c.institution_id = partner.institution_id\nWHERE d.budget > 1000000\nAND partner.country != 'Россия'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.country, i.city\nORDER BY collaboration_count DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT i.institution_id, i.name AS institution_name, i.country, i.city,\n       COUNT(DISTINCT c.collaboration_id) AS collaboration_count,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_project_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Collaborations c ON p.project_id = c.project_id\nWHERE d.budget > 1000000\nAND i.country != 'Россия'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.country, i.city\nORDER BY collaboration_count DESC\nLIMIT 7;",
            "gigachat_response": "SELECT \n    i.institution_id, \n    i.name AS institution_name, \n    COUNT(DISTINCT c.collaboration_id) AS international_collaborations_count,\n    COUNT(DISTINCT p.project_id) AS related_projects_count,\n    SUM(p.budget) AS total_related_projects_budget\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Collaborations c ON i.institution_id = c.institution_id\nJOIN \n    Projects p ON c.project_id = p.project_id\nWHERE \n    i.country <> 'Россия' -- International collaborations only\nAND \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) -- Last three years\nAND \n    d.budget > 1000000 -- Only departments with budgets over 1 million rubles\nGROUP BY \n    i.institution_id, i.name\nORDER BY \n    international_collaborations_count DESC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT \n    i.institution_id, \n    i.name AS institution_name, \n    COUNT(DISTINCT c.collaboration_id) AS international_collaborations_count,\n    COUNT(DISTINCT p.project_id) AS related_projects_count,\n    SUM(p.budget) AS total_related_projects_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Collaborations c ON i.institution_id = c.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE i.country <> 'Россия'\nAND d.budget > 1000000\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name\nORDER BY international_collaborations_count DESC\nLIMIT 7;"
        },
        {
            "question": "Какие 6 научных конференций за последние 2 года имели наибольшее количество презентаций, связанных с проектами со статусом 'Активный'? Включите информацию о конференции, о количестве презентаций, среднюю продолжительность презентаций и количество уникальных исследователей, выступавших на каждой конференции. Отсортируйте результаты по количеству презентаций в убывающем порядке.",
            "sql_query": "SELECT c.conference_id, c.name, c.location, c.start_date, c.end_date,\n       COUNT(DISTINCT pres.presentation_id) AS presentation_count,\n       AVG(pres.duration) AS avg_presentation_duration,\n       COUNT(DISTINCT pres.presenter_id) AS unique_presenters\nFROM Conferences c\nJOIN Presentations pres ON c.conference_id = pres.conference_id\nJOIN Projects p ON pres.project_id = p.project_id\nWHERE p.status = 'Активный'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.conference_id, c.name, c.location, c.start_date, c.end_date\nORDER BY presentation_count DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT c.conference_id, c.name AS conference_name, c.start_date, c.end_date, c.location,\n       COUNT(DISTINCT p.presentation_id) AS presentation_count,\n       AVG(p.duration) AS avg_presentation_duration,\n       COUNT(DISTINCT r.researcher_id) AS unique_researchers\nFROM Conferences c\nJOIN Presentations p ON c.conference_id = p.conference_id\nJOIN Projects pr ON p.project_id = pr.project_id\nJOIN Researchers r ON p.presenter_id = r.researcher_id\nWHERE pr.status = 'Активный'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.conference_id, c.name, c.start_date, c.end_date, c.location\nORDER BY presentation_count DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT c.conference_id, c.name AS conference_name, c.start_date, c.end_date, c.location,\n       COUNT(DISTINCT p.presentation_id) AS presentation_count,\n       AVG(p.duration) AS avg_presentation_duration,\n       COUNT(DISTINCT r.researcher_id) AS unique_researchers\nFROM Conferences c\nJOIN Presentations p ON c.conference_id = p.conference_id\nJOIN Projects pr ON p.project_id = pr.project_id\nJOIN Researchers r ON p.presenter_id = r.researcher_id\nWHERE pr.status = 'Активный'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.conference_id, c.name, c.start_date, c.end_date, c.location\nORDER BY presentation_count DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.conference_id,\n    c.name AS conference_name,\n    COUNT(p.presentation_id) AS presentation_count,\n    AVG(p.duration) AS average_presentation_duration,\n    COUNT(DISTINCT p.presenter_id) AS unique_presenter_count\nFROM\n    Conferences c\nJOIN\n    Presentations p ON c.conference_id = p.conference_id\nJOIN\n    Projects proj ON p.project_id = proj.project_id\nWHERE\n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND proj.status = 'Активный'\nGROUP BY\n    c.conference_id, c.name\nORDER BY\n    presentation_count DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    c.name AS conference_name,\n    COUNT(p.presentation_id) AS presentation_count,\n    AVG(p.duration) AS average_presentation_duration,\n    COUNT(DISTINCT p.presenter_id) AS unique_researcher_count\nFROM Conferences c\nJOIN Presentations p ON c.conference_id = p.conference_id\nJOIN Projects proj ON p.project_id = proj.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n  AND proj.status = 'Активный'\nGROUP BY c.conference_id, c.name\nORDER BY presentation_count DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.name, COUNT(DISTINCT pr.presentation_id) AS presentations_count,\n       AVG(pr.duration) AS avg_presentation_duration,\n       COUNT(DISTINCT pr.presenter_id) AS unique_researchers\nFROM Conferences c\nJOIN Presentations pr ON c.conference_id = pr.conference_id\nJOIN Projects p ON pr.project_id = p.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND p.status = 'Активный'\nGROUP BY c.name\nORDER BY presentations_count DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.name, \n    COUNT(DISTINCT pr.presentation_id) AS presentations_count,\n    AVG(pr.duration) AS avg_presentation_duration,\n    COUNT(DISTINCT r.researcher_id) AS unique_researchers,\n    c.start_date, \n    c.end_date, \n    c.location\nFROM \n    Conferences c\nJOIN \n    Presentations pr ON c.conference_id = pr.conference_id\nJOIN \n    Projects p ON pr.project_id = p.project_id\nJOIN \n    Researchers r ON pr.presenter_id = r.researcher_id\nWHERE \n    p.status = 'Активный'\nAND \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    c.name, c.start_date, c.end_date, c.location\nORDER BY \n    presentations_count DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    c.conference_id,\n    c.name AS conference_name,\n    c.start_date,\n    c.end_date,\n    c.location,\n    COUNT(DISTINCT pr.presentation_id) AS presentation_count,\n    AVG(pr.duration) AS avg_duration_minutes,\n    COUNT(DISTINCT pr.presenter_id) AS unique_researchers_count\nFROM \n    Conferences c\nJOIN \n    Presentations pr ON c.conference_id = pr.conference_id\nJOIN \n    Projects p ON pr.project_id = p.project_id\nWHERE \n    p.status = 'Активный'\n    AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    c.conference_id, c.name, c.start_date, c.end_date, c.location\nORDER BY \n    presentation_count DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    c.conference_id,\n    c.name AS conference_name,\n    c.start_date,\n    c.end_date,\n    c.location,\n    COUNT(DISTINCT pr.presentation_id) AS presentation_count,\n    AVG(pr.duration) AS avg_duration_minutes,\n    COUNT(DISTINCT pr.presenter_id) AS unique_researchers_count\nFROM \n    Conferences c\nJOIN \n    Presentations pr ON c.conference_id = pr.conference_id\nJOIN \n    Projects p ON pr.project_id = p.project_id\nWHERE \n    p.status = 'Активный'\n    AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    c.conference_id, c.name, c.start_date, c.end_date, c.location\nORDER BY \n    presentation_count DESC\nLIMIT 6;",
            "gigachat_response": "SELECT \n    c.conference_id, \n    c.name AS conference_name, \n    COUNT(pr.presentation_id) AS presentations_count, \n    AVG(pr.duration) AS average_presentation_duration, \n    COUNT(DISTINCT pr.presenter_id) AS unique_presenters\nFROM \n    Conferences c\nJOIN \n    Presentations pr ON c.conference_id = pr.conference_id\nJOIN \n    Projects p ON pr.project_id = p.project_id\nWHERE \n    p.status = 'Активный'\nAND \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    c.conference_id, c.name\nORDER BY \n    presentations_count DESC\nLIMIT 6;",
            "gigachat_response_ru": "SELECT \n    c.conference_id, \n    c.name AS conference_name, \n    COUNT(pr.presentation_id) AS presentations_count, \n    AVG(TIME_TO_SEC(TIMEDIFF(pr.time + INTERVAL pr.duration SECOND, pr.time))/60) AS average_presentation_duration_minutes,\n    COUNT(DISTINCT pr.presenter_id) AS unique_presenters\nFROM \n    Conferences c\nJOIN \n    Presentations pr ON c.conference_id = pr.conference_id\nJOIN \n    Projects p ON pr.project_id = p.project_id\nWHERE \n    p.status = 'Активный'\nAND \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    c.conference_id, c.name\nORDER BY \n    presentations_count DESC\nLIMIT 6;"
        },
        {
            "question": "Какие 8 отделов имеют наибольший процент одобренных этических заявок для проектов (включить подробную информацию о департаментах), начатых за последние 5 лет? Включите информацию об общем количестве заявок, количестве одобренных заявок, проценте одобрения и общем бюджете проектов с одобренными заявками. Учитывайте только отделы с более чем 3 заявками и где руководитель отдела родился после 1980 года.",
            "sql_query": "SELECT d.department_id, d.name, i.name AS institution_name,\n       COUNT(DISTINCT ea.approval_id) AS total_applications,\n       SUM(CASE WHEN ea.status = 'Одобрено' THEN 1 ELSE 0 END) AS approved_applications,\n       (SUM(CASE WHEN ea.status = 'Одобрено' THEN 1 ELSE 0 END) / COUNT(DISTINCT ea.approval_id)) * 100 AS approval_percentage,\n       SUM(CASE WHEN ea.status = 'Одобрено' THEN p.budget ELSE 0 END) AS total_approved_budget\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN EthicsApprovals ea ON p.project_id = ea.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND r.birth_date > '1980-01-01'\nGROUP BY d.department_id, d.name, i.name\nHAVING COUNT(DISTINCT ea.approval_id) > 3\nORDER BY approval_percentage DESC, total_approved_budget DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT d.department_id, d.name AS department_name, d.phone_number, d.email, d.building, d.floor, d.number_of_staff, d.budget AS department_budget,\n       COUNT(ea.approval_id) AS total_approvals,\n       SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) AS approved_approvals,\n       (SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) * 100.0 / COUNT(ea.approval_id)) AS approval_percentage,\n       SUM(p.budget) AS total_approved_project_budget\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN EthicsApprovals ea ON p.project_id = ea.project_id\nJOIN Researchers r ON d.head_id = r.researcher_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) > 1980\nGROUP BY d.department_id, d.name, d.phone_number, d.email, d.building, d.floor, d.number_of_staff, d.budget\nHAVING COUNT(ea.approval_id) > 3\nORDER BY approval_percentage DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    d.phone_number,\n    d.email,\n    d.building,\n    d.floor,\n    d.number_of_staff,\n    d.budget AS department_budget,\n    r.first_name AS head_first_name,\n    r.last_name AS head_last_name,\n    COUNT(ea.approval_id) AS total_approvals,\n    SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) AS approved_approvals,\n    (SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) * 100.0 / COUNT(ea.approval_id)) AS approval_percentage,\n    SUM(p.budget) AS total_approved_project_budget\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN EthicsApprovals ea ON p.project_id = ea.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) > 1980\nGROUP BY d.department_id, d.name, d.phone_number, d.email, d.building, d.floor, d.number_of_staff, d.budget, r.first_name, r.last_name\nHAVING COUNT(ea.approval_id) > 3\nORDER BY approval_percentage DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    d.department_id,\n    d.name AS department_name,\n    i.name AS institution_name,\n    d.phone_number AS department_phone,\n    d.email AS department_email,\n    COUNT(ea.approval_id) AS total_applications,\n    SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) AS approved_applications,\n    (SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) * 100.0 / COUNT(ea.approval_id)) AS approval_percentage,\n    SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN p.budget ELSE 0 END) AS total_budget_approved_projects\nFROM\n    Departments d\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nJOIN\n    Projects p ON d.department_id = p.department_id\nJOIN\n    EthicsApprovals ea ON p.project_id = ea.project_id\nJOIN\n    Researchers r ON d.head_id = r.researcher_id\nWHERE\n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND r.birth_date > '1980-01-01'\nGROUP BY\n    d.department_id, d.name, i.name, d.phone_number, d.email\nHAVING\n    COUNT(ea.approval_id) > 3\nORDER BY\n    approval_percentage DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    d.department_id,\n    d.name AS department_name,\n    i.name AS institution_name,\n    r.first_name AS head_first_name,\n    r.last_name AS head_last_name,\n    COUNT(ea.approval_id) AS total_applications,\n    SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) AS approved_applications,\n    (SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN 1 ELSE 0 END) * 100.0 / COUNT(ea.approval_id)) AS approval_percentage,\n    SUM(CASE WHEN ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями' THEN p.budget ELSE 0 END) AS total_budget_approved_projects\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN EthicsApprovals ea ON p.project_id = ea.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND r.birth_date > '1980-01-01'\nGROUP BY d.department_id, d.name, i.name, r.first_name, r.last_name\nHAVING COUNT(ea.approval_id) > 3\nORDER BY approval_percentage DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    COUNT(DISTINCT ea.approval_id) AS total_approvals, \n    SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END) AS approved_approvals, \n    (SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT ea.approval_id)) * 100 AS approval_rate, \n    SUM(p.budget) AS total_budget\nFROM \n    Departments d\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND \n    r.birth_date > '1980-01-01'\nAND \n    d.department_id IN (\n        SELECT \n            d.department_id\n        FROM \n            Departments d\n        JOIN \n            Projects p ON d.department_id = p.department_id\n        JOIN \n            EthicsApprovals ea ON p.project_id = ea.project_id\n        GROUP BY \n            d.department_id\n        HAVING \n            COUNT(DISTINCT ea.approval_id) > 3\n    )\nGROUP BY \n    d.department_id, \n    d.name, \n    i.name\nORDER BY \n    approval_rate DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    r.first_name, \n    r.last_name, \n    COUNT(DISTINCT ea.approval_id) AS total_approvals,\n    SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END) AS approved_approvals,\n    (SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT ea.approval_id)) * 100 AS approval_rate,\n    SUM(p.budget) AS total_budget\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nWHERE \n    r.birth_date > '1980-01-01'\n    AND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.department_id, \n    d.name, \n    i.name, \n    r.first_name, \n    r.last_name\nHAVING \n    COUNT(DISTINCT ea.approval_id) > 3\nORDER BY \n    approval_rate DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    d.phone_number,\n    d.email,\n    d.building,\n    d.floor,\n    d.number_of_staff,\n    d.budget AS department_budget,\n    COUNT(ea.approval_id) AS total_applications,\n    SUM(CASE WHEN ea.status = 'Одобрено' THEN 1 ELSE 0 END) AS approved_applications,\n    (SUM(CASE WHEN ea.status = 'Одобрено' THEN 1 ELSE 0 END) * 100.0 / COUNT(ea.approval_id)) AS approval_percentage,\n    SUM(p.budget) AS total_projects_budget\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Projects p ON p.department_id = d.department_id\nJOIN \n    EthicsApprovals ea ON ea.project_id = p.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND r.birth_date > '1980-01-01'\nGROUP BY \n    d.department_id, d.name, d.phone_number, d.email, d.building, d.floor, d.number_of_staff, d.budget\nHAVING \n    COUNT(ea.approval_id) > 3\nORDER BY \n    approval_percentage DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT d.department_id, d.name AS department_name, d.phone_number, d.email, d.building, d.floor, d.number_of_staff, d.budget,\n       CONCAT(r.first_name, ' ', r.last_name) AS head_name, r.birth_date AS head_birth_date,\n       i.name AS institution_name, i.country, i.city,\n       COUNT(DISTINCT ea.approval_id) AS total_approvals,\n       SUM(CASE WHEN ea.status = 'Одобрено' THEN 1 ELSE 0 END) AS approved_approvals,\n       ROUND(SUM(CASE WHEN ea.status = 'Одобрено' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT ea.approval_id), 2) AS approval_percentage,\n       SUM(p.budget) AS total_projects_budget\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN EthicsApprovals ea ON p.project_id = ea.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND r.birth_date > '1980-01-01'\nGROUP BY d.department_id, d.name, d.phone_number, d.email, d.building, d.floor, d.number_of_staff, d.budget, r.first_name, r.last_name, r.birth_date, i.name, i.country, i.city\nHAVING COUNT(DISTINCT ea.approval_id) > 3\nORDER BY approval_percentage DESC\nLIMIT 8;",
            "gigachat_response": "WITH EthicalApprovalStats AS (\n    SELECT \n        d.department_id,\n        COUNT(*) AS total_applications,\n        SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END) AS approved_applications,\n        ROUND(SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END) * 100.0 / COUNT(*), 2) AS approval_percentage,\n        SUM(p.budget) FILTER (WHERE ea.status IN ('Одобрено', 'Одобрено с условиями')) AS total_approved_projects_budget\n    FROM Departments d\n    INNER JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN EthicsApprovals ea ON p.project_id = ea.project_id\n    WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n      AND d.head_id IN (SELECT researcher_id FROM Researchers WHERE birth_date > '1980-01-01')\n    GROUP BY d.department_id\n    HAVING COUNT(*) > 3\n)\nSELECT \n    d.department_id,\n    d.name AS department_name,\n    d.building,\n    d.floor,\n    d.number_of_staff,\n    d.budget AS department_budget,\n    eas.total_applications,\n    eas.approved_applications,\n    eas.approval_percentage,\n    eas.total_approved_projects_budget\nFROM Departments d\nINNER JOIN EthicalApprovalStats eas ON d.department_id = eas.department_id\nORDER BY approval_percentage DESC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    h.first_name || ' ' || h.last_name AS head_fullname, \n    COUNT(ea.project_id) AS total_applications, \n    SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END) AS approved_applications, \n    ROUND(SUM(CASE WHEN ea.status IN ('Одобрено', 'Одобрено с условиями') THEN 1 ELSE 0 END)::DECIMAL / COUNT(ea.project_id) * 100, 2) AS approval_percentage, \n    SUM(p.budget) FILTER (WHERE ea.status IN ('Одобрено', 'Одобрено с условиями')) AS total_approved_projects_budget\nFROM \n    Departments d\nJOIN \n    Researchers h ON d.head_id = h.researcher_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nWHERE \n    h.birth_date >= '1980-01-01'\nAND \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.department_id, d.name, h.first_name, h.last_name\nHAVING \n    COUNT(ea.project_id) > 3\nORDER BY \n    approval_percentage DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 9 исследователей имеют наибольшую продуктивность в публикациях с высоким импакт-фактором (>3.0) за последние 3 года и одновременно являются изобретателями патентов со статусом 'Получен'? Рассчитайте показатель продуктивности как соотношение количества публикаций к количеству лет работы исследователя, и отсортируйте по этому показателю в убывающем порядке.",
            "sql_query": "WITH PublicationCounts AS (\n    SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date,\n           COUNT(DISTINCT pub.publication_id) AS high_impact_publications,\n           YEAR(CURRENT_DATE) - YEAR(r.birth_date) - 22 AS years_of_experience\n    FROM Researchers r\n    JOIN Projects p ON r.researcher_id = p.project_lead_id\n    JOIN Publications pub ON p.project_id = pub.project_id\n    WHERE pub.impact_factor > 3.0\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date\n),\nPatentCounts AS (\n    SELECT r.researcher_id, COUNT(DISTINCT pt.patent_id) AS granted_patents\n    FROM Researchers r\n    JOIN Patents pt ON r.researcher_id = pt.inventor_id\n    WHERE pt.status = 'Получен'\n    GROUP BY r.researcher_id\n)\nSELECT pc.researcher_id, pc.first_name, pc.last_name, pc.position, \n       pc.high_impact_publications, \n       ptc.granted_patents,\n       pc.years_of_experience,\n       (pc.high_impact_publications / pc.years_of_experience) AS productivity_score\nFROM PublicationCounts pc\nJOIN PatentCounts ptc ON pc.researcher_id = ptc.researcher_id\nWHERE pc.years_of_experience > 0\nORDER BY productivity_score DESC, ptc.granted_patents DESC\nLIMIT 9;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS years_of_work,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE)) AS productivity_index\nFROM Researchers r\nJOIN Patents pat ON r.researcher_id = pat.inventor_id\nJOIN Projects proj ON pat.project_id = proj.project_id\nJOIN Publications pub ON proj.project_id = pub.project_id\nWHERE pub.impact_factor > 3.0\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pat.status = 'Получен'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date\nORDER BY productivity_index DESC\nLIMIT 9;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pub.publication_id) / GREATEST(TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE), 1) AS productivity\nFROM Researchers r\nJOIN Patents pat ON r.researcher_id = pat.inventor_id\nJOIN Publications pub ON pub.project_id = pat.project_id\nWHERE pub.impact_factor > 3.0\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pat.status = 'Получен'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY productivity DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    r.position,\n    COUNT(DISTINCT p.publication_id) AS publication_count,\n    (COUNT(DISTINCT p.publication_id) / (YEAR(CURRENT_DATE) - YEAR(r.birth_date))) AS productivity_ratio\nFROM\n    Researchers r\nJOIN\n    Publications p ON r.researcher_id IN (SELECT project_lead_id FROM Projects WHERE project_id = p.project_id)\nJOIN\n    Patents pa ON r.researcher_id = pa.inventor_id\nWHERE\n    p.impact_factor > 3.0\n    AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND pa.status = 'Получен'\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date\nHAVING YEAR(CURRENT_DATE) - YEAR(r.birth_date) > 0\nORDER BY\n    productivity_ratio DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT p.publication_id) AS publication_count,\n    (COUNT(DISTINCT p.publication_id) / (YEAR(CURRENT_TIMESTAMP) - YEAR(r.birth_date))) AS productivity_ratio\nFROM\n    Researchers r\nJOIN\n    Patents pat ON r.researcher_id = pat.inventor_id\nJOIN\n    Projects proj ON pat.project_id = proj.project_id\nJOIN\n    Publications p ON proj.project_id = p.project_id\nWHERE\n    p.impact_factor > 3.0\n    AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND pat.status = 'Получен'\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.birth_date\nORDER BY\n    productivity_ratio DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT r.researcher_id, r.first_name, r.last_name, \n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS years_of_service,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE)) AS productivity,\n       COUNT(DISTINCT p.patent_id) AS patents_count\nFROM Researchers r\nJOIN Publications pub ON r.researcher_id = pub.researcher_id\nJOIN Patents p ON r.researcher_id = p.inventor_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pub.impact_factor > 3.0\nAND p.status = 'Получен'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.birth_date\nORDER BY productivity DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, \n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS years_of_service,\n       COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS productivity,\n       COUNT(DISTINCT p.patent_id) AS patents_count\nFROM Researchers r\nJOIN Publications pub ON r.researcher_id = pub.researcher_id\nJOIN Patents p ON r.researcher_id = p.inventor_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pub.impact_factor > 3.0\nAND p.status = 'Получен'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.birth_date\nORDER BY productivity DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT r.researcher_id, r.first_name, r.last_name, \n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       TIMESTAMPDIFF(YEAR, MIN(p.start_date), CURRENT_DATE) AS years_working,\n       COUNT(DISTINCT pub.publication_id) / NULLIF(TIMESTAMPDIFF(YEAR, MIN(p.start_date), CURRENT_DATE), 0) AS productivity_score\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Publications pub ON p.project_id = pub.project_id\nJOIN Patents pat ON pat.inventor_id = r.researcher_id\nWHERE pub.impact_factor > 3.0\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pat.status = 'Получен'\nGROUP BY r.researcher_id, r.first_name, r.last_name\nORDER BY productivity_score DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    TIMESTAMPDIFF(YEAR, MIN(p.start_date), CURRENT_DATE) AS years_worked,\n    (COUNT(DISTINCT pub.publication_id) / GREATEST(TIMESTAMPDIFF(YEAR, MIN(p.start_date), CURRENT_DATE), 1)) AS productivity_score\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nJOIN \n    Patents pat ON r.researcher_id = pat.inventor_id\nWHERE \n    pub.impact_factor > 3.0\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND pat.status = 'Получен'\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nORDER BY \n    productivity_score DESC\nLIMIT 9;",
            "gigachat_response": "WITH PublicationCount AS (\n    SELECT \n        r.researcher_id,\n        r.first_name,\n        r.last_name,\n        COUNT(*) AS num_publications\n    FROM \n        Researchers r\n    INNER JOIN Publications pub ON r.researcher_id = pub.project_id AND pub.impact_factor > 3.0\n    WHERE \n        pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY \n        r.researcher_id, r.first_name, r.last_name\n),\nPatentInventors AS (\n    SELECT \n        r.researcher_id,\n        r.first_name,\n        r.last_name\n    FROM \n        Researchers r\n    INNER JOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.status = 'Получен'\n),\nResearcherProductivity AS (\n    SELECT \n        pc.researcher_id,\n        pc.first_name,\n        pc.last_name,\n        pc.num_publications,\n        TIMESTAMPDIFF(YEAR, MIN(r.birth_date), CURRENT_DATE) AS years_worked,\n        ROUND(pc.num_publications / TIMESTAMPDIFF(YEAR, MIN(r.birth_date), CURRENT_DATE), 2) AS productivity_ratio\n    FROM \n        PublicationCount pc\n    INNER JOIN PatentInventors pi ON pc.researcher_id = pi.researcher_id\n    INNER JOIN Researchers r ON pc.researcher_id = r.researcher_id\n    GROUP BY \n        pc.researcher_id, pc.first_name, pc.last_name, pc.num_publications\n)\nSELECT *\nFROM ResearcherProductivity\nORDER BY productivity_ratio DESC\nLIMIT 9;",
            "gigachat_response_ru": "WITH PatentHolders AS (\n    SELECT DISTINCT inventor_id\n    FROM Patents\n    WHERE status = 'Получен'\n),\nPublicationCount AS (\n    SELECT researcher_id, COUNT(*) as pub_count\n    FROM Publications pub\n    JOIN Projects prj ON pub.project_id = prj.project_id\n    WHERE pub.impact_factor > 3.0 AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n      AND EXISTS (SELECT 1 FROM PatentHolders ph WHERE pub.project_lead_id = ph.inventor_id)\n    GROUP BY researcher_id\n),\nResearcherInfo AS (\n    SELECT r.researcher_id, r.first_name, r.last_name,\n           TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS years_working\n    FROM Researchers r\n    WHERE EXISTS (SELECT 1 FROM PublicationCount pc WHERE r.researcher_id = pc.researcher_id)\n),\nProductivity AS (\n    SELECT ri.researcher_id, ri.first_name, ri.last_name,\n           ROUND(pc.pub_count / ri.years_working, 2) AS productivity_ratio\n    FROM ResearcherInfo ri\n    JOIN PublicationCount pc ON ri.researcher_id = pc.researcher_id\n)\nSELECT *\nFROM Productivity\nORDER BY productivity_ratio DESC\nLIMIT 9;"
        },
        {
            "question": "Какие 12 проектов демонстрируют наиболее эффективное использование грантовых средств за последние 4 года, учитывая количество публикаций, патентов и проведенных экспериментов? Рассчитайте коэффициент эффективности как отношение суммы (количество публикаций * 5 + количество патентов * 10 + количество экспериментов * 2) к объему финансирования (в миллионах рублей), и отсортируйте результаты по этому коэффициенту в убывающем порядке.",
            "sql_query": "WITH ProjectMetrics AS (\n    SELECT p.project_id, p.title, p.budget, g.amount AS grant_amount,\n           p.start_date, p.end_date, p.status,\n           (SELECT COUNT(*) FROM Publications pub WHERE pub.project_id = p.project_id) AS publication_count,\n           (SELECT COUNT(*) FROM Patents pat WHERE pat.project_id = p.project_id) AS patent_count,\n           (SELECT COUNT(*) FROM Experiments exp WHERE exp.project_id = p.project_id) AS experiment_count\n    FROM Projects p\n    LEFT JOIN Grants g ON p.project_id = g.project_id\n    WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\n    AND (g.amount > 0 OR p.budget > 0)\n)\nSELECT pm.project_id, pm.title, pm.start_date, pm.end_date, pm.status,\n       pm.publication_count, pm.patent_count, pm.experiment_count,\n       COALESCE(pm.grant_amount, pm.budget) AS total_funding,\n       ((pm.publication_count * 5) + (pm.patent_count * 10) + (pm.experiment_count * 2)) AS weighted_output,\n       ((pm.publication_count * 5) + (pm.patent_count * 10) + (pm.experiment_count * 2)) / (COALESCE(pm.grant_amount, pm.budget) / 1000000) AS efficiency_ratio\nFROM ProjectMetrics pm\nWHERE pm.publication_count + pm.patent_count + pm.experiment_count > 0\nORDER BY efficiency_ratio DESC\nLIMIT 12;",
            "gpt-4o_response": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    p.budget AS project_budget, \n    COUNT(DISTINCT pub.publication_id) AS publication_count, \n    COUNT(DISTINCT pat.patent_id) AS patent_count, \n    COUNT(DISTINCT exp.experiment_id) AS experiment_count,\n    (COUNT(DISTINCT pub.publication_id) * 5 + \n     COUNT(DISTINCT pat.patent_id) * 10 + \n     COUNT(DISTINCT exp.experiment_id) * 2) / (p.budget / 1000000) AS efficiency_ratio\nFROM \n    Projects p\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nLEFT JOIN \n    Experiments exp ON p.project_id = exp.project_id\nJOIN \n    Grants g ON p.project_id = g.project_id\nWHERE \n    g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    p.project_id, p.title, p.budget\nORDER BY \n    efficiency_ratio DESC\nLIMIT 12;",
            "gpt-4o_response_ru": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    p.budget, \n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT pat.patent_id) AS patent_count,\n    COUNT(DISTINCT exp.experiment_id) AS experiment_count,\n    (COUNT(DISTINCT pub.publication_id) * 5 + \n     COUNT(DISTINCT pat.patent_id) * 10 + \n     COUNT(DISTINCT exp.experiment_id) * 2) / (p.budget / 1000000) AS efficiency_coefficient\nFROM \n    Projects p\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nLEFT JOIN Experiments exp ON p.project_id = exp.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    p.project_id, p.title, p.budget\nORDER BY \n    efficiency_coefficient DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    (SUM(CASE WHEN pub.publication_id IS NOT NULL THEN 1 ELSE 0 END) * 5 +\n     SUM(CASE WHEN pat.patent_id IS NOT NULL THEN 1 ELSE 0 END) * 10 +\n     SUM(CASE WHEN exp.experiment_id IS NOT NULL THEN 1 ELSE 0 END) * 2) AS total_score,\n    p.budget / 1000000 AS budget_in_millions,\n    (SUM(CASE WHEN pub.publication_id IS NOT NULL THEN 1 ELSE 0 END) * 5 +\n     SUM(CASE WHEN pat.patent_id IS NOT NULL THEN 1 ELSE 0 END) * 10 +\n     SUM(CASE WHEN exp.experiment_id IS NOT NULL THEN 1 ELSE 0 END) * 2) / (p.budget / 1000000) AS efficiency_ratio,\n    SUM(CASE WHEN pub.publication_id IS NOT NULL THEN 1 ELSE 0 END) AS publication_count,\n    SUM(CASE WHEN pat.patent_id IS NOT NULL THEN 1 ELSE 0 END) AS patent_count,\n    SUM(CASE WHEN exp.experiment_id IS NOT NULL THEN 1 ELSE 0 END) AS experiment_count\nFROM\n    Projects p\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    Patents pat ON p.project_id = pat.project_id\nLEFT JOIN\n    Experiments exp ON p.project_id = exp.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY\n    p.project_id, p.title, p.budget\nORDER BY\n    efficiency_ratio DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    (SUM(CASE WHEN pub.publication_id IS NOT NULL THEN 1 ELSE 0 END) * 5 +\n     SUM(CASE WHEN pat.patent_id IS NOT NULL THEN 1 ELSE 0 END) * 10 +\n     SUM(CASE WHEN exp.experiment_id IS NOT NULL THEN 1 ELSE 0 END) * 2) / (p.budget / 1000000) AS efficiency_coefficient,\n    SUM(CASE WHEN pub.publication_id IS NOT NULL THEN 1 ELSE 0 END) AS publication_count,\n    SUM(CASE WHEN pat.patent_id IS NOT NULL THEN 1 ELSE 0 END) AS patent_count,\n    SUM(CASE WHEN exp.experiment_id IS NOT NULL THEN 1 ELSE 0 END) AS experiment_count,\n    p.budget AS project_budget\nFROM\n    Projects p\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    Patents pat ON p.project_id = pat.project_id\nLEFT JOIN\n    Experiments exp ON p.project_id = exp.project_id\nWHERE\n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY\n    p.project_id, p.title, p.budget\nORDER BY\n    efficiency_coefficient DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    p.project_id, \n    p.title, \n    p.budget, \n    COUNT(DISTINCT pub.publication_id) * 5 + COUNT(DISTINCT pat.patent_id) * 10 + COUNT(DISTINCT e.experiment_id) * 2 AS efficiency_score,\n    (COUNT(DISTINCT pub.publication_id) * 5 + COUNT(DISTINCT pat.patent_id) * 10 + COUNT(DISTINCT e.experiment_id) * 2) / (p.budget / 1000000) AS efficiency_coefficient\nFROM \n    Projects p\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nLEFT JOIN \n    Experiments e ON p.project_id = e.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    p.project_id, p.title, p.budget\nORDER BY \n    efficiency_coefficient DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.project_id, \n    p.title, \n    p.budget, \n    COUNT(DISTINCT pub.publication_id) AS publications_count, \n    COUNT(DISTINCT pat.patent_id) AS patents_count, \n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    (COUNT(DISTINCT pub.publication_id) * 5 + COUNT(DISTINCT pat.patent_id) * 10 + COUNT(DISTINCT e.experiment_id) * 2) / (p.budget / 1000000) AS efficiency_coefficient\nFROM \n    Projects p\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nLEFT JOIN \n    Experiments e ON p.project_id = e.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    p.project_id, p.title, p.budget\nORDER BY \n    efficiency_coefficient DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.project_id, p.title, p.budget/1000000 AS budget_million_rub,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       COUNT(DISTINCT pat.patent_id) AS patents_count,\n       COUNT(DISTINCT exp.experiment_id) AS experiments_count,\n       (COUNT(DISTINCT pub.publication_id)*5 + COUNT(DISTINCT pat.patent_id)*10 + COUNT(DISTINCT exp.experiment_id)*2)/(p.budget/1000000) AS efficiency_ratio\nFROM Projects p\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nLEFT JOIN Experiments exp ON p.project_id = exp.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY p.project_id, p.title, p.budget\nORDER BY efficiency_ratio DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.project_id, p.title, p.budget,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       COUNT(DISTINCT pat.patent_id) AS patents_count,\n       COUNT(DISTINCT exp.experiment_id) AS experiments_count,\n       (COUNT(DISTINCT pub.publication_id) * 5 + COUNT(DISTINCT pat.patent_id) * 10 + COUNT(DISTINCT exp.experiment_id) * 2) / (p.budget / 1000000) AS efficiency_ratio\nFROM Projects p\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nLEFT JOIN Experiments exp ON p.project_id = exp.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY p.project_id, p.title, p.budget\nORDER BY efficiency_ratio DESC\nLIMIT 12;",
            "gigachat_response": "WITH ProjectMetrics AS (\n    SELECT \n        p.project_id,\n        p.title,\n        p.budget,\n        COUNT(DISTINCT pub.publication_id) AS num_publications,\n        COUNT(DISTINCT pat.patent_id) AS num_patents,\n        COUNT(DISTINCT exp.experiment_id) AS num_experiments\n    FROM Projects p\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    LEFT JOIN Patents pat ON p.project_id = pat.project_id\n    LEFT JOIN Experiments exp ON p.project_id = exp.project_id\n    WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\n    GROUP BY p.project_id, p.title, p.budget\n),\nProjectEffectiveness AS (\n    SELECT \n        pm.project_id,\n        pm.title,\n        pm.num_publications,\n        pm.num_patents,\n        pm.num_experiments,\n        pm.budget,\n        ((pm.num_publications * 5) + (pm.num_patents * 10) + (pm.num_experiments * 2)) / (pm.budget / 1000000) AS effectiveness_ratio\n    FROM ProjectMetrics pm\n)\nSELECT *\nFROM ProjectEffectiveness pe\nORDER BY effectiveness_ratio DESC\nLIMIT 12;",
            "gigachat_response_ru": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    p.budget,\n    COUNT(DISTINCT pu.publication_id) AS num_publications,\n    COUNT(DISTINCT pa.patent_id) AS num_patents,\n    COUNT(DISTINCT ex.experiment_id) AS num_experiments,\n    ((COUNT(DISTINCT pu.publication_id) * 5 +\n      COUNT(DISTINCT pa.patent_id) * 10 +\n      COUNT(DISTINCT ex.experiment_id) * 2) /\n     (p.budget / 1000000)) AS efficiency_coefficient\nFROM Projects p\nLEFT JOIN Publications pu ON p.project_id = pu.project_id\nLEFT JOIN Patents pa ON p.project_id = pa.project_id\nLEFT JOIN Experiments ex ON p.project_id = ex.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY p.project_id, p.title, p.budget\nORDER BY efficiency_coefficient DESC\nLIMIT 12;"
        },
        {
            "question": "Какие 7 исследовательских коллабораций между учреждениями привели к наибольшему количеству совместных публикаций и патентов за последние 5 лет? Включите информацию об учреждениях-партнерах, типе коллаборации, общем количестве исследователей, вовлеченных в проекты, и средний импакт-фактор публикаций. Отсортируйте результаты по сумме публикаций и патентов в убывающем порядке.",
            "sql_query": "WITH CollaborationProjects AS (\n    SELECT c.collaboration_id, c.type, c.start_date, c.end_date,\n           i1.name AS host_institution, i1.country AS host_country,\n           i2.name AS partner_institution, i2.country AS partner_country,\n           c.project_id\n    FROM Collaborations c\n    JOIN Institutions i1 ON c.institution_id = i1.institution_id\n    JOIN Projects p ON c.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i2 ON d.institution_id = i2.institution_id\n    WHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND i1.institution_id != i2.institution_id\n),\nCollaborationMetrics AS (\n    SELECT cp.collaboration_id, cp.host_institution, cp.host_country,\n           cp.partner_institution, cp.partner_country, cp.type,\n           COUNT(DISTINCT p.publication_id) AS publication_count,\n           AVG(p.impact_factor) AS avg_impact_factor,\n           COUNT(DISTINCT pt.patent_id) AS patent_count,\n           COUNT(DISTINCT r.researcher_id) AS researcher_count\n    FROM CollaborationProjects cp\n    LEFT JOIN Publications p ON cp.project_id = p.project_id\n    LEFT JOIN Patents pt ON cp.project_id = pt.project_id\n    LEFT JOIN Experiments e ON cp.project_id = e.project_id\n    LEFT JOIN Researchers r ON e.lead_researcher_id = r.researcher_id\n    GROUP BY cp.collaboration_id, cp.host_institution, cp.host_country, cp.partner_institution, cp.partner_country, cp.type\n)\nSELECT cm.collaboration_id, cm.host_institution, cm.host_country,\n       cm.partner_institution, cm.partner_country, cm.type,\n       cm.publication_count, cm.patent_count,\n       (cm.publication_count + cm.patent_count) AS total_output,\n       cm.researcher_count, cm.avg_impact_factor\nFROM CollaborationMetrics cm\nWHERE cm.publication_count + cm.patent_count > 0\nORDER BY total_output DESC, cm.avg_impact_factor DESC\nLIMIT 7;",
            "gpt-4o_response": "SELECT c.collaboration_id, i1.name AS institution_name, i2.name AS partner_institution_name,\n       c.type AS collaboration_type, COUNT(DISTINCT r.researcher_id) AS total_researchers,\n       COUNT(DISTINCT pub.publication_id) AS total_publications,\n       COUNT(DISTINCT pat.patent_id) AS total_patents,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_publications_and_patents\nFROM Collaborations c\nJOIN Institutions i1 ON c.institution_id = i1.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i2 ON d.institution_id = i2.institution_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY c.collaboration_id, i1.name, i2.name, c.type\nORDER BY total_publications_and_patents DESC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT c.collaboration_id, i1.name AS institution_name_1, i2.name AS institution_name_2,\n       c.type, COUNT(DISTINCT pub.publication_id) AS total_publications,\n       COUNT(DISTINCT pat.patent_id) AS total_patents,\n       COUNT(DISTINCT r.researcher_id) AS total_researchers,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Collaborations c\nJOIN Institutions i1 ON c.institution_id = i1.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i2 ON d.institution_id = i2.institution_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nWHERE (pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR))\nGROUP BY c.collaboration_id, i1.name, i2.name, c.type\nORDER BY (total_publications + total_patents) DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.collaboration_id,\n    i.name AS institution1_name,\n    i2.name AS institution2_name,\n    c.type AS collaboration_type,\n    COUNT(DISTINCT pub.publication_id) AS num_publications,\n    COUNT(DISTINCT pat.patent_id) AS num_patents,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_publications_patents\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i2 ON d.institution_id = i2.institution_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN Patents pat ON p.project_id = pat.project_id AND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY\n    c.collaboration_id,\n    i.name,\n    i2.name,\n    c.type\nORDER BY\n    total_publications_patents DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    c.collaboration_id,\n    i1.name AS institution1_name,\n    i2.name AS institution2_name,\n    c.type AS collaboration_type,\n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_publications_patents,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM Collaborations c\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Institutions i1 ON c.institution_id = i1.institution_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i2 ON d.institution_id = i2.institution_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN Patents pat ON p.project_id = pat.project_id AND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY c.collaboration_id, i1.name, i2.name, c.type\nORDER BY total_publications_patents DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    c.collaboration_id, \n    c.type, \n    i.name AS institution_name, \n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_publications_and_patents,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers_involved,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Collaborations c\nJOIN \n    Institutions i ON c.institution_id = i.institution_id\nJOIN \n    Projects p ON c.project_id = p.project_id\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    c.collaboration_id, \n    c.type, \n    i.name\nORDER BY \n    total_publications_and_patents DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n  c.collaboration_id, \n  c.type, \n  i1.name AS institution1_name, \n  i2.name AS institution2_name, \n  COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_publications_patents,\n  COUNT(DISTINCT r.researcher_id) AS total_researchers,\n  AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n  Collaborations c\n  JOIN Institutions i1 ON c.institution_id = i1.institution_id\n  JOIN Projects p ON c.project_id = p.project_id\n  JOIN Institutions i2 ON p.department_id IN (SELECT department_id FROM Departments WHERE institution_id = i1.institution_id)\n  LEFT JOIN Publications pub ON p.project_id = pub.project_id\n  LEFT JOIN Patents pat ON p.project_id = pat.project_id\n  LEFT JOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE \n  c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n  c.collaboration_id, \n  c.type, \n  i1.name, \n  i2.name\nORDER BY \n  total_publications_patents DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    c.collaboration_id,\n    i1.name AS institution1_name,\n    i2.name AS institution2_name,\n    c.type AS collaboration_type,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_output,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Collaborations c\nJOIN \n    Institutions i1 ON c.institution_id = i1.institution_id\nJOIN \n    Projects p ON c.project_id = p.project_id\nJOIN \n    Institutions i2 ON p.department_id IN (SELECT department_id FROM Departments WHERE institution_id = i2.institution_id)\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id AND (pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR))\nWHERE \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    c.collaboration_id, i1.name, i2.name, c.type\nORDER BY \n    total_output DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    c.collaboration_id,\n    c.type AS collaboration_type,\n    i1.name AS institution1_name,\n    i2.name AS institution2_name,\n    COUNT(DISTINCT p.project_id) AS projects_count,\n    COUNT(DISTINCT r.researcher_id) AS researchers_involved,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_output\nFROM \n    Collaborations c\nJOIN \n    Institutions i1 ON c.institution_id = i1.institution_id\nJOIN \n    Projects p ON c.project_id = p.project_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i2 ON d.institution_id = i2.institution_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id AND (pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR))\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nWHERE \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    c.collaboration_id, c.type, i1.name, i2.name\nORDER BY \n    total_output DESC\nLIMIT 7;",
            "gigachat_response": "SELECT \n    c.collaboration_id,\n    i1.name AS institution_1,\n    i2.name AS institution_2,\n    c.type AS collaboration_type,\n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_publications_and_patents,\n    COUNT(DISTINCT r.researcher_id) AS involved_researchers,\n    AVG(pub.impact_factor) AS average_impact_factor\nFROM Collaborations c\nJOIN Institutions i1 ON c.institution_id = i1.institution_id -- Institution participating in collaboration\nJOIN Institutions i2 ON c.project_id IN (SELECT project_id FROM Projects WHERE department_id IN (SELECT department_id FROM Departments WHERE institution_id <> i1.institution_id))\n-- Join projects associated with collaborations\nJOIN Projects p ON c.project_id = p.project_id\n-- Get related publications\nLEFT JOIN Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n-- Get related patents\nLEFT JOIN Patents pat ON p.project_id = pat.project_id AND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n-- Count unique researchers working on those projects\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nGROUP BY c.collaboration_id, i1.name, i2.name, c.type\nORDER BY total_publications_and_patents DESC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT \n    c.collaboration_id,\n    i1.name AS institution_1,\n    i2.name AS institution_2,\n    c.type AS collaboration_type,\n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_publications_and_patents,\n    COUNT(DISTINCT r.researcher_id) AS involved_researchers,\n    AVG(pub.impact_factor) AS average_impact_factor\nFROM Collaborations c\nJOIN Institutions i1 ON c.institution_id = i1.institution_id -- Institution of the collaborating entity\nJOIN Institutions i2 ON c.project_id IN (SELECT project_id FROM Projects WHERE department_id IN (SELECT department_id FROM Departments WHERE institution_id <> i1.institution_id))\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Publications pub ON p.project_id = pub.project_id\nJOIN Patents pat ON p.project_id = pat.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY c.collaboration_id, i1.name, i2.name, c.type\nORDER BY total_publications_and_patents DESC\nLIMIT 7;"
        },
        {
            "question": "Какие 11 экспериментов демонстрируют наиболее интересные результаты с точки зрения количества собранных образцов различных типов и созданных наборов данных за последние 2 года? Включите информацию о проекте, ведущем исследователе, локации, состоянии эксперимента и общем количестве разнообразных типов собранных образцов. Отсортируйте результаты по количеству образцов и размеру наборов данных в убывающем порядке.",
            "sql_query": "WITH ExperimentDetails AS (\n    SELECT e.experiment_id, e.title AS experiment_title, e.start_date, e.end_date, e.status,\n           p.project_id, p.title AS project_title,\n           r.researcher_id, r.first_name, r.last_name,\n           e.location,\n           COUNT(DISTINCT s.sample_id) AS sample_count,\n           COUNT(DISTINCT s.type) AS sample_type_diversity,\n           SUM(s.quantity) AS total_sample_quantity\n    FROM Experiments e\n    JOIN Projects p ON e.project_id = p.project_id\n    JOIN Researchers r ON e.lead_researcher_id = r.researcher_id\n    LEFT JOIN Samples s ON e.experiment_id = s.experiment_id\n    WHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    GROUP BY e.experiment_id, e.title, e.start_date, e.end_date, e.status,\n             p.project_id, p.title, r.researcher_id, r.first_name, r.last_name, e.location\n),\nDatasetDetails AS (\n    SELECT ds.project_id, COUNT(ds.dataset_id) AS dataset_count, SUM(ds.size) AS total_dataset_size\n    FROM DataSets ds\n    WHERE ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    GROUP BY ds.project_id\n)\nSELECT ed.experiment_id, ed.experiment_title, ed.status, ed.location,\n       ed.project_title, ed.first_name, ed.last_name, ed.sample_count,\n       ed.sample_type_diversity, ed.total_sample_quantity,\n       COALESCE(dd.dataset_count, 0) AS dataset_count,\n       COALESCE(dd.total_dataset_size, 0) AS total_dataset_size\nFROM ExperimentDetails ed\nLEFT JOIN DatasetDetails dd ON ed.project_id = dd.project_id\nWHERE ed.sample_count > 0 OR COALESCE(dd.dataset_count, 0) > 0\nORDER BY sample_count DESC, total_dataset_size DESC\nLIMIT 11;",
            "gpt-4o_response": "SELECT e.experiment_id, e.title AS experiment_title, \n       p.title AS project_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher_name, \n       e.location, e.status AS experiment_status, \n       COUNT(DISTINCT s.type) AS unique_sample_types_count, \n       SUM(s.quantity) AS total_samples_quantity, \n       COUNT(DISTINCT d.dataset_id) AS datasets_count, \n       SUM(d.size) AS total_datasets_size\nFROM Experiments e\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN DataSets d ON e.project_id = d.project_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY e.experiment_id, e.title, p.title, r.first_name, r.last_name, e.location, e.status\nORDER BY unique_sample_types_count DESC, total_datasets_size DESC\nLIMIT 11;",
            "gpt-4o_response_ru": "SELECT e.experiment_id, e.title AS experiment_title, \n       p.title AS project_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n       e.location, e.status AS experiment_status,\n       COUNT(DISTINCT s.type) AS sample_types_count,\n       COUNT(DISTINCT ds.dataset_id) AS datasets_count\nFROM Experiments e\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN DataSets ds ON e.project_id = ds.project_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY e.experiment_id, e.title, p.title, r.first_name, r.last_name, e.location, e.status\nORDER BY sample_types_count DESC, SUM(ds.size) DESC\nLIMIT 11;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    e.experiment_id,\n    e.title AS experiment_title,\n    p.title AS project_title,\n    r.first_name,\n    r.last_name,\n    e.location,\n    e.status,\n    COUNT(DISTINCT s.type) AS distinct_sample_types,\n    COUNT(s.sample_id) AS total_samples,\n    SUM(ds.size) AS total_dataset_size\nFROM\n    Experiments e\nJOIN\n    Projects p ON e.project_id = p.project_id\nJOIN\n    Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN\n    Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id\nWHERE\n    e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    e.experiment_id,\n    e.title,\n    p.title,\n    r.first_name,\n    r.last_name,\n    e.location,\n    e.status\nORDER BY\n    COUNT(s.sample_id) DESC,\n    SUM(ds.size) DESC\nLIMIT 11;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    e.experiment_id,\n    e.title AS experiment_title,\n    p.title AS project_title,\n    r.first_name,\n    r.last_name,\n    e.location,\n    e.status AS experiment_status,\n    COUNT(DISTINCT s.type) AS distinct_sample_types,\n    SUM(d.size) AS total_dataset_size\nFROM\n    Experiments e\nJOIN\n    Projects p ON e.project_id = p.project_id\nJOIN\n    Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN\n    Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN\n    DataSets d ON p.project_id = d.project_id\nWHERE\n    e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    e.experiment_id,\n    e.title,\n    p.title,\n    r.first_name,\n    r.last_name,\n    e.location,\n    e.status\nORDER BY\n    COUNT(DISTINCT s.type) DESC,\n    SUM(d.size) DESC\nLIMIT 11;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT e.experiment_id, p.title AS project_title, r.first_name, r.last_name, e.location, e.status, \n       COUNT(DISTINCT s.sample_id) AS total_samples, COUNT(DISTINCT d.dataset_id) AS total_datasets\nFROM Experiments e\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN DataSets d ON p.project_id = d.project_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY e.experiment_id, p.title, r.first_name, r.last_name, e.location, e.status\nORDER BY total_samples DESC, total_datasets DESC\nLIMIT 11;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    e.experiment_id, \n    p.title AS project_title, \n    r.first_name, \n    r.last_name, \n    e.location, \n    e.status, \n    COUNT(DISTINCT s.type) AS sample_types_count, \n    COUNT(DISTINCT d.dataset_id) AS datasets_count\nFROM \n    Experiments e\nJOIN \n    Projects p ON e.project_id = p.project_id\nJOIN \n    Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN \n    Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN \n    DataSets d ON p.project_id = d.project_id\nWHERE \n    e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    e.experiment_id, p.title, r.first_name, r.last_name, e.location, e.status\nORDER BY \n    sample_types_count DESC, datasets_count DESC\nLIMIT 11;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT e.experiment_id, e.title AS experiment_title, p.title AS project_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher, \n       e.location, e.status, \n       COUNT(DISTINCT s.sample_id) AS total_samples,\n       COUNT(DISTINCT s.type) AS unique_sample_types,\n       COUNT(DISTINCT ds.dataset_id) AS total_datasets,\n       SUM(ds.size) AS total_dataset_size\nFROM Experiments e\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN DataSets ds ON p.project_id = ds.project_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY e.experiment_id, e.title, p.title, r.first_name, r.last_name, e.location, e.status\nORDER BY total_samples DESC, total_dataset_size DESC\nLIMIT 11;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT e.experiment_id, e.title AS experiment_title, p.title AS project_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher, \n       e.location, e.status, \n       COUNT(DISTINCT s.type) AS unique_sample_types_count,\n       COUNT(s.sample_id) AS total_samples_count,\n       SUM(ds.size) AS total_dataset_size\nFROM Experiments e\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN DataSets ds ON p.project_id = ds.project_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY e.experiment_id, e.title, p.title, r.first_name, r.last_name, e.location, e.status\nORDER BY total_samples_count DESC, total_dataset_size DESC\nLIMIT 11;",
            "gigachat_response": "SELECT \n    ex.experiment_id,\n    pr.title AS project_title,\n    re.first_name || ' ' || re.last_name AS lead_researcher,\n    ex.location,\n    ex.`status`,\n    COUNT(DISTINCT sa.sample_id) AS samples_count,\n    ds.size AS datasets_size\nFROM Experiments ex\nJOIN Projects pr ON ex.project_id = pr.project_id\nJOIN Researchers re ON ex.lead_researcher_id = re.researcher_id\nLEFT JOIN Samples sa ON ex.experiment_id = sa.experiment_id\nLEFT JOIN DataSets ds ON ex.experiment_id = ds.project_id\nWHERE ex.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY ex.experiment_id, pr.title, re.first_name, re.last_name, ex.location, ex.`status`, ds.size\nORDER BY samples_count DESC, datasets_size DESC\nLIMIT 11;",
            "gigachat_response_ru": "SELECT \n    ex.experiment_id,\n    pr.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n    ex.location,\n    ex.`status`,\n    COUNT(DISTINCT s.sample_id) AS samples_count,\n    ds.dataset_id,\n    ds.size AS dataset_size\nFROM Experiments ex\nJOIN Projects pr ON ex.project_id = pr.project_id\nJOIN Researchers r ON ex.lead_researcher_id = r.researcher_id\nLEFT JOIN Samples s ON ex.experiment_id = s.experiment_id\nLEFT JOIN DataSets ds ON ex.experiment_id = ds.project_id\nWHERE ex.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY ex.experiment_id, pr.title, r.first_name, r.last_name, ex.location, ex.`status`, ds.dataset_id, ds.size\nORDER BY samples_count DESC, dataset_size DESC\nLIMIT 11;"
        },
        {
            "question": "Какие 6 научных областей (определенных по тематике отделов) показывают наиболее динамичное развитие за последние 3 года с точки зрения количества активных проектов, общего финансирования, количества экспериментов и разнообразия исследовательских коллабораций? Рассчитайте индекс динамики как сумму нормализованных метрик (количество проектов / макс. количество, объем финансирования / макс. объем и т.д.) и отсортируйте по этому индексу в убывающем порядке.",
            "sql_query": "WITH DepartmentMetrics AS (\n    SELECT d.department_id, d.name, i.name AS institution_name,\n           COUNT(DISTINCT p.project_id) AS project_count,\n           SUM(p.budget) AS total_budget,\n           COUNT(DISTINCT e.experiment_id) AS experiment_count,\n           COUNT(DISTINCT c.collaboration_id) AS collaboration_count,\n           COUNT(DISTINCT c.type) AS collaboration_diversity,\n           COUNT(DISTINCT pub.publication_id) AS publication_count,\n           AVG(pub.impact_factor) AS avg_impact_factor\n    FROM Departments d\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n                        AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n                        AND p.status IN ('Активный', 'Планируется')\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Collaborations c ON p.project_id = c.project_id\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n                              AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY d.department_id, d.name, i.name\n),\nMaxValues AS (\n    SELECT MAX(project_count) AS max_projects,\n           MAX(total_budget) AS max_budget,\n           MAX(experiment_count) AS max_experiments,\n           MAX(collaboration_count) AS max_collaborations,\n           MAX(publication_count) AS max_publications,\n           MAX(avg_impact_factor) AS max_impact_factor\n    FROM DepartmentMetrics\n)\nSELECT dm.department_id, dm.name AS department_name, dm.institution_name,\n       dm.project_count, dm.total_budget, dm.experiment_count,\n       dm.collaboration_count, dm.collaboration_diversity,\n       dm.publication_count, dm.avg_impact_factor,\n       (dm.project_count / mv.max_projects + \n        dm.total_budget / mv.max_budget + \n        dm.experiment_count / mv.max_experiments + \n        dm.collaboration_count / mv.max_collaborations + \n        dm.publication_count / mv.max_publications + \n        dm.avg_impact_factor / mv.max_impact_factor) AS development_index\nFROM DepartmentMetrics dm, MaxValues mv\nWHERE dm.project_count > 0\nORDER BY development_index DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT d.name AS department_name,\n       COUNT(DISTINCT p.project_id) / MAX(project_count) AS normalized_project_count,\n       SUM(p.budget) / MAX(total_budget) AS normalized_budget,\n       COUNT(DISTINCT e.experiment_id) / MAX(experiment_count) AS normalized_experiment_count,\n       COUNT(DISTINCT c.collaboration_id) / MAX(collaboration_count) AS normalized_collaboration_count,\n       (COUNT(DISTINCT p.project_id) / MAX(project_count) +\n        SUM(p.budget) / MAX(total_budget) +\n        COUNT(DISTINCT e.experiment_id) / MAX(experiment_count) +\n        COUNT(DISTINCT c.collaboration_id) / MAX(collaboration_count)) AS dynamic_index\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nLEFT JOIN Experiments e ON p.project_id = e.project_id\nLEFT JOIN Collaborations c ON p.project_id = c.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND p.status = 'Активный'\nGROUP BY d.department_id, d.name\nORDER BY dynamic_index DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "WITH ActiveProjects AS (\n    SELECT d.department_id, d.name AS department_name, COUNT(p.project_id) AS project_count, SUM(p.budget) AS total_budget\n    FROM Departments d\n    JOIN Projects p ON d.department_id = p.department_id\n    WHERE p.status = 'Активный' AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY d.department_id, d.name\n),\nExperimentsCount AS (\n    SELECT d.department_id, COUNT(e.experiment_id) AS experiment_count\n    FROM Departments d\n    JOIN Projects p ON d.department_id = p.department_id\n    JOIN Experiments e ON p.project_id = e.project_id\n    WHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY d.department_id\n),\nCollaborationsCount AS (\n    SELECT d.department_id, COUNT(c.collaboration_id) AS collaboration_count\n    FROM Departments d\n    JOIN Projects p ON d.department_id = p.department_id\n    JOIN Collaborations c ON p.project_id = c.project_id\n    WHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY d.department_id\n),\nMaxValues AS (\n    SELECT \n        MAX(ap.project_count) AS max_project_count,\n        MAX(ap.total_budget) AS max_total_budget,\n        MAX(ec.experiment_count) AS max_experiment_count,\n        MAX(cc.collaboration_count) AS max_collaboration_count\n    FROM ActiveProjects ap\n    LEFT JOIN ExperimentsCount ec ON ap.department_id = ec.department_id\n    LEFT JOIN CollaborationsCount cc ON ap.department_id = cc.department_id\n)\nSELECT \n    ap.department_name,\n    (ap.project_count / mv.max_project_count) +\n    (ap.total_budget / mv.max_total_budget) +\n    (COALESCE(ec.experiment_count, 0) / mv.max_experiment_count) +\n    (COALESCE(cc.collaboration_count, 0) / mv.max_collaboration_count) AS dynamic_index\nFROM ActiveProjects ap\nLEFT JOIN ExperimentsCount ec ON ap.department_id = ec.department_id\nLEFT JOIN CollaborationsCount cc ON ap.department_id = cc.department_id\nJOIN MaxValues mv ON 1=1\nORDER BY dynamic_index DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "WITH DepartmentMetrics AS (\n    SELECT\n        d.department_id,\n        d.name AS department_name,\n        COUNT(DISTINCT CASE WHEN p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN p.project_id END) AS project_count,\n        SUM(CASE WHEN p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN p.budget ELSE 0 END) AS total_budget,\n        COUNT(DISTINCT CASE WHEN e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN e.experiment_id END) AS experiment_count,\n        COUNT(DISTINCT CASE WHEN c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN c.collaboration_id END) AS collaboration_count\n    FROM Departments d\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Collaborations c ON p.project_id = c.project_id\n    GROUP BY d.department_id, d.name\n),\nMaxValues AS (\n    SELECT\n        MAX(project_count) AS max_project_count,\n        MAX(total_budget) AS max_total_budget,\n        MAX(experiment_count) AS max_experiment_count,\n        MAX(collaboration_count) AS max_collaboration_count\n    FROM DepartmentMetrics\n)\nSELECT\n    dm.department_name,\n    dm.project_count,\n    dm.total_budget,\n    dm.experiment_count,\n    dm.collaboration_count,\n    (\n        (dm.project_count / mv.max_project_count) +\n        (dm.total_budget / mv.max_total_budget) +\n        (dm.experiment_count / mv.max_experiment_count) +\n        (dm.collaboration_count / mv.max_collaboration_count)\n    ) AS dynamism_index\nFROM DepartmentMetrics dm, MaxValues mv\nORDER BY dynamism_index DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "WITH DepartmentMetrics AS (\n    SELECT\n        d.department_id,\n        d.name AS department_name,\n        COUNT(DISTINCT CASE WHEN p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN p.project_id ELSE NULL END) AS active_projects_count,\n        SUM(CASE WHEN p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN p.budget ELSE 0 END) AS total_funding,\n        COUNT(DISTINCT CASE WHEN e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN e.experiment_id ELSE NULL END) AS experiment_count,\n        COUNT(DISTINCT CASE WHEN c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN c.collaboration_id ELSE NULL END) AS collaboration_count\n    FROM Departments d\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Collaborations c ON p.project_id = c.project_id\n    GROUP BY d.department_id, d.name\n),\nMaxMetrics AS (\n    SELECT\n        MAX(active_projects_count) AS max_projects,\n        MAX(total_funding) AS max_funding,\n        MAX(experiment_count) AS max_experiments,\n        MAX(collaboration_count) AS max_collaborations\n    FROM DepartmentMetrics\n),\nNormalizedMetrics AS (\n    SELECT\n        dm.department_id,\n        dm.department_name,\n        dm.active_projects_count,\n        dm.total_funding,\n        dm.experiment_count,\n        dm.collaboration_count,\n        (dm.active_projects_count * 1.0 / mm.max_projects) AS normalized_projects,\n        (dm.total_funding * 1.0 / mm.max_funding) AS normalized_funding,\n        (dm.experiment_count * 1.0 / mm.max_experiments) AS normalized_experiments,\n        (dm.collaboration_count * 1.0 / mm.max_collaborations) AS normalized_collaborations\n    FROM DepartmentMetrics dm, MaxMetrics mm\n),\nDynamicIndex AS (\n    SELECT\n        nm.department_id,\n        nm.department_name,\n        (nm.normalized_projects + nm.normalized_funding + nm.normalized_experiments + nm.normalized_collaborations) AS dynamic_index\n    FROM NormalizedMetrics nm\n)\nSELECT\n    di.department_name,\n    di.dynamic_index\nFROM DynamicIndex di\nORDER BY di.dynamic_index DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    d.name AS department_name,\n    COUNT(DISTINCT p.project_id) AS active_projects_count,\n    SUM(p.budget) AS total_budget,\n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    COUNT(DISTINCT c.collaboration_id) AS collaborations_count,\n    (COUNT(DISTINCT p.project_id) * 1.0 / (SELECT MAX(COUNT(DISTINCT project_id)) FROM Projects WHERE start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) GROUP BY department_id)) +\n    (SUM(p.budget) * 1.0 / (SELECT MAX(SUM(budget)) FROM Projects WHERE start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) GROUP BY department_id)) +\n    (COUNT(DISTINCT e.experiment_id) * 1.0 / (SELECT MAX(COUNT(DISTINCT experiment_id)) FROM Experiments WHERE start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) GROUP BY department_id)) +\n    (COUNT(DISTINCT c.collaboration_id) * 1.0 / (SELECT MAX(COUNT(DISTINCT collaboration_id)) FROM Collaborations WHERE start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) GROUP BY department_id)) AS dynamics_index\nFROM \n    Departments d\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Experiments e ON p.project_id = e.project_id\nJOIN \n    Collaborations c ON p.project_id = c.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    d.name\nORDER BY \n    dynamics_index DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.name AS department_name,\n    COUNT(DISTINCT p.project_id) AS active_projects_count,\n    SUM(p.budget) AS total_budget,\n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    COUNT(DISTINCT c.collaboration_id) AS collaborations_count,\n    (COUNT(DISTINCT p.project_id) * 1.0 / (SELECT MAX(active_projects) FROM (\n        SELECT COUNT(DISTINCT p.project_id) AS active_projects\n        FROM Projects p\n        JOIN Departments d ON p.department_id = d.department_id\n        WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n        GROUP BY d.name\n    ) AS subquery)) +\n    (SUM(p.budget) * 1.0 / (SELECT MAX(total_budget) FROM (\n        SELECT SUM(p.budget) AS total_budget\n        FROM Projects p\n        JOIN Departments d ON p.department_id = d.department_id\n        WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n        GROUP BY d.name\n    ) AS subquery)) +\n    (COUNT(DISTINCT e.experiment_id) * 1.0 / (SELECT MAX(experiments) FROM (\n        SELECT COUNT(DISTINCT e.experiment_id) AS experiments\n        FROM Experiments e\n        JOIN Equipment eq ON e.equipment_id = eq.equipment_id\n        JOIN Departments d ON eq.department_id = d.department_id\n        WHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n        GROUP BY d.name\n    ) AS subquery)) +\n    (COUNT(DISTINCT c.collaboration_id) * 1.0 / (SELECT MAX(collaborations) FROM (\n        SELECT COUNT(DISTINCT c.collaboration_id) AS collaborations\n        FROM Collaborations c\n        JOIN Projects p ON c.project_id = p.project_id\n        JOIN Departments d ON p.department_id = d.department_id\n        WHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n        GROUP BY d.name\n    ) AS subquery)) AS dynamics_index\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Experiments e ON p.project_id = e.project_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Collaborations c ON p.project_id = c.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY d.name\nORDER BY dynamics_index DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "WITH department_metrics AS (\n    SELECT \n        d.department_id,\n        d.name AS department_name,\n        COUNT(DISTINCT p.project_id) AS project_count,\n        SUM(p.budget) AS total_budget,\n        COUNT(DISTINCT e.experiment_id) AS experiment_count,\n        COUNT(DISTINCT c.collaboration_id) AS collaboration_count\n    FROM Departments d\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Collaborations c ON p.project_id = c.project_id\n    WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND p.status = 'Активный'\n    GROUP BY d.department_id, d.name\n),\nnormalized_metrics AS (\n    SELECT \n        dm.department_id,\n        dm.department_name,\n        dm.project_count / MAX(dm.project_count) OVER () AS normalized_projects,\n        dm.total_budget / MAX(dm.total_budget) OVER () AS normalized_budget,\n        dm.experiment_count / MAX(dm.experiment_count) OVER () AS normalized_experiments,\n        dm.collaboration_count / MAX(dm.collaboration_count) OVER () AS normalized_collaborations,\n        (dm.project_count / MAX(dm.project_count) OVER ()) + \n        (dm.total_budget / MAX(dm.total_budget) OVER ()) + \n        (dm.experiment_count / MAX(dm.experiment_count) OVER ()) + \n        (dm.collaboration_count / MAX(dm.collaboration_count) OVER ()) AS dynamic_index\n    FROM department_metrics dm\n)\nSELECT \n    department_id,\n    department_name,\n    ROUND(normalized_projects, 3) AS normalized_projects,\n    ROUND(normalized_budget, 3) AS normalized_budget,\n    ROUND(normalized_experiments, 3) AS normalized_experiments,\n    ROUND(normalized_collaborations, 3) AS normalized_collaborations,\n    ROUND(dynamic_index, 3) AS dynamic_index\nFROM normalized_metrics\nORDER BY dynamic_index DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "WITH department_metrics AS (\n    SELECT \n        d.department_id,\n        d.name AS department_name,\n        COUNT(DISTINCT p.project_id) AS project_count,\n        SUM(p.budget) AS total_budget,\n        COUNT(DISTINCT e.experiment_id) AS experiment_count,\n        COUNT(DISTINCT c.collaboration_id) AS collaboration_count\n    FROM Departments d\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Collaborations c ON p.project_id = c.project_id\n    WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY d.department_id, d.name\n),\nnormalized_metrics AS (\n    SELECT \n        dm.department_id,\n        dm.department_name,\n        dm.project_count / MAX(dm.project_count) OVER () AS normalized_projects,\n        dm.total_budget / MAX(dm.total_budget) OVER () AS normalized_budget,\n        dm.experiment_count / MAX(dm.experiment_count) OVER () AS normalized_experiments,\n        dm.collaboration_count / MAX(dm.collaboration_count) OVER () AS normalized_collaborations\n    FROM department_metrics dm\n)\nSELECT \n    department_id,\n    department_name,\n    project_count,\n    total_budget,\n    experiment_count,\n    collaboration_count,\n    (normalized_projects + normalized_budget + normalized_experiments + normalized_collaborations) AS dynamic_index\nFROM normalized_metrics\nJOIN department_metrics USING (department_id)\nORDER BY dynamic_index DESC\nLIMIT 6;",
            "gigachat_response": "WITH ActiveProjects AS (\n    SELECT dp.department_id, COUNT(*) AS active_projects\n    FROM Projects pr\n    JOIN Departments dp ON pr.department_id = dp.department_id\n    WHERE pr.status IN ('Активный', 'Планируется') AND pr.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY dp.department_id\n),\nTotalFunding AS (\n    SELECT dp.department_id, SUM(pr.budget) AS total_funding\n    FROM Projects pr\n    JOIN Departments dp ON pr.department_id = dp.department_id\n    WHERE pr.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY dp.department_id\n),\nExperimentsCount AS (\n    SELECT dp.department_id, COUNT(*) AS experiments_count\n    FROM Experiments ex\n    JOIN Projects pr ON ex.project_id = pr.project_id\n    JOIN Departments dp ON pr.department_id = dp.department_id\n    WHERE ex.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY dp.department_id\n),\nCollaborationsCount AS (\n    SELECT dp.department_id, COUNT(*) AS collaborations_count\n    FROM Collaborations cl\n    JOIN Projects pr ON cl.project_id = pr.project_id\n    JOIN Departments dp ON pr.department_id = dp.department_id\n    WHERE cl.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY dp.department_id\n),\nMaxMetrics AS (\n    SELECT MAX(active_projects) AS max_active_projects,\n           MAX(total_funding) AS max_total_funding,\n           MAX(experiments_count) AS max_experiments_count,\n           MAX(collaborations_count) AS max_collaborations_count\n    FROM ActiveProjects ap\n    JOIN TotalFunding tf USING (department_id)\n    JOIN ExperimentsCount ec USING (department_id)\n    JOIN CollaborationsCount cc USING (department_id)\n),\nNormalizedData AS (\n    SELECT dp.department_id, dp.name AS scientific_field,\n           ap.active_projects / mm.max_active_projects AS norm_active_projects,\n           tf.total_funding / mm.max_total_funding AS norm_total_funding,\n           ec.experiments_count / mm.max_experiments_count AS norm_experiments_count,\n           cc.collaborations_count / mm.max_collaborations_count AS norm_collaborations_count,\n           (ap.active_projects / mm.max_active_projects + tf.total_funding / mm.max_total_funding +\n            ec.experiments_count / mm.max_experiments_count + cc.collaborations_count / mm.max_collaborations_count) AS dynamic_index\n    FROM Departments dp\n    LEFT JOIN ActiveProjects ap ON dp.department_id = ap.department_id\n    LEFT JOIN TotalFunding tf ON dp.department_id = tf.department_id\n    LEFT JOIN ExperimentsCount ec ON dp.department_id = ec.department_id\n    LEFT JOIN CollaborationsCount cc ON dp.department_id = cc.department_id,\n         MaxMetrics mm\n)\nSELECT *\nFROM NormalizedData nd\nORDER BY dynamic_index DESC\nLIMIT 6;",
            "gigachat_response_ru": "WITH DepartmentMetrics AS (\n    SELECT \n        d.department_id,\n        d.name AS department_name,\n        -- Количество активных проектов\n        COUNT(CASE WHEN p.status IN ('Активный') THEN p.project_id END) AS active_projects_count,\n        -- Общий бюджет активных проектов\n        SUM(CASE WHEN p.status IN ('Активный') THEN p.budget ELSE 0 END) AS total_active_budget,\n        -- Количество проведенных экспериментов\n        COUNT(e.experiment_id) AS experiments_count,\n        -- Количество уникальных коллабораций\n        COUNT(DISTINCT col.collaboration_id) AS collaborations_count\n    FROM Departments d\n    LEFT JOIN Projects p ON d.department_id = p.department_id AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Collaborations col ON p.project_id = col.project_id\n    GROUP BY d.department_id, d.name\n),\nMaxValues AS (\n    SELECT \n        MAX(active_projects_count) AS max_active_projects,\n        MAX(total_active_budget) AS max_total_active_budget,\n        MAX(experiments_count) AS max_experiments,\n        MAX(collaborations_count) AS max_collaborations\n    FROM DepartmentMetrics\n),\nNormalizedDepartmentMetrics AS (\n    SELECT \n        dm.department_id,\n        dm.department_name,\n        -- Нормализованные значения\n        CASE WHEN mv.max_active_projects > 0 THEN dm.active_projects_count * 1.0 / mv.max_active_projects ELSE 0 END AS normalized_active_projects,\n        CASE WHEN mv.max_total_active_budget > 0 THEN dm.total_active_budget * 1.0 / mv.max_total_active_budget ELSE 0 END AS normalized_total_active_budget,\n        CASE WHEN mv.max_experiments > 0 THEN dm.experiments_count * 1.0 / mv.max_experiments ELSE 0 END AS normalized_experiments,\n        CASE WHEN mv.max_collaborations > 0 THEN dm.collaborations_count * 1.0 / mv.max_collaborations ELSE 0 END AS normalized_collaborations,\n        -- Индекс динамики\n        (CASE WHEN mv.max_active_projects > 0 THEN dm.active_projects_count * 1.0 / mv.max_active_projects ELSE 0 END +\n         CASE WHEN mv.max_total_active_budget > 0 THEN dm.total_active_budget * 1.0 / mv.max_total_active_budget ELSE 0 END +\n         CASE WHEN mv.max_experiments > 0 THEN dm.experiments_count * 1.0 / mv.max_experiments ELSE 0 END +\n         CASE WHEN mv.max_collaborations > 0 THEN dm.collaborations_count * 1.0 / mv.max_collaborations ELSE 0 END) AS dynamics_index\n    FROM DepartmentMetrics dm\n    CROSS JOIN MaxValues mv\n)\nSELECT *\nFROM NormalizedDepartmentMetrics\nORDER BY dynamics_index DESC\nLIMIT 6;"
        },
        {
            "question": "Какие 8 учреждений демонстрируют наиболее сбалансированное гендерное распределение среди исследователей за последние 4 года, а также имеют высокую продуктивность публикаций на одного исследователя? Рассчитайте индекс гендерного баланса как отношение количества женщин-исследователей к общему числу исследователей (значение ближе к 0.5 считается более сбалансированным) и отсортируйте по этому показателю и продуктивности публикаций.",
            "sql_query": "WITH InstitutionResearchers AS (\n    SELECT i.institution_id, i.name, i.country, i.city, i.type,\n           COUNT(DISTINCT r.researcher_id) AS total_researchers,\n           SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) AS female_researchers,\n           SUM(CASE WHEN r.gender = 'Мужской' THEN 1 ELSE 0 END) AS male_researchers,\n           COUNT(DISTINCT pub.publication_id) AS total_publications\n    FROM Institutions i\n    JOIN Departments d ON i.institution_id = d.institution_id\n    JOIN Projects p ON d.department_id = p.department_id\n    JOIN Researchers r ON p.project_lead_id = r.researcher_id\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\n    GROUP BY i.institution_id, i.name, i.country, i.city, i.type\n    HAVING COUNT(DISTINCT r.researcher_id) >= 5\n)\nSELECT ir.institution_id, ir.name, ir.country, ir.city, ir.type,\n       ir.total_researchers, ir.female_researchers, ir.male_researchers,\n       (ir.female_researchers / ir.total_researchers) AS female_ratio,\n       ABS(0.5 - (ir.female_researchers / ir.total_researchers)) AS gender_balance_index,\n       (ir.total_publications / ir.total_researchers) AS publications_per_researcher\nFROM InstitutionResearchers ir\nWHERE ir.total_publications > 0\nORDER BY gender_balance_index, publications_per_researcher DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT i.institution_id, i.name AS institution_name, \n       COUNT(DISTINCT r.researcher_id) AS total_researchers,\n       SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) AS female_researchers,\n       (SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS gender_balance_index,\n       COUNT(DISTINCT pub.publication_id) AS total_publications,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS publications_per_researcher\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY i.institution_id, i.name\nORDER BY gender_balance_index ASC, publications_per_researcher DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT i.institution_id, i.name AS institution_name, \n       COUNT(DISTINCT r.researcher_id) AS total_researchers,\n       SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) AS female_researchers,\n       (SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS gender_balance_index,\n       COUNT(DISTINCT pub.publication_id) AS total_publications,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS publications_per_researcher\nFROM Researchers r\nJOIN Departments d ON r.researcher_id = d.head_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY i.institution_id, i.name\nORDER BY gender_balance_index ASC, publications_per_researcher DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    i.institution_id,\n    i.name AS institution_name,\n    COUNT(CASE WHEN r.gender = 'Женский' THEN 1 END) * 1.0 / COUNT(r.researcher_id) AS gender_balance_index,\n    COUNT(pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id) AS publications_per_researcher\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE r.birth_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY i.institution_id, i.name\nHAVING COUNT(r.researcher_id) > 0\nORDER BY ABS(gender_balance_index - 0.5) ASC, publications_per_researcher DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    i.institution_id,\n    i.name AS institution_name,\n    COUNT(CASE WHEN r.gender = 'Женский' THEN 1 END) * 1.0 / COUNT(r.researcher_id) AS gender_balance_index,\n    COUNT(DISTINCT p.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id) AS publications_per_researcher\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Projects proj ON d.department_id = proj.department_id\nJOIN\n    Researchers r ON proj.project_lead_id = r.researcher_id\nLEFT JOIN\n    Publications p ON proj.project_id = p.project_id\nWHERE\n    proj.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY\n    i.institution_id, i.name\nHAVING\n    COUNT(DISTINCT r.researcher_id) > 0\nORDER BY\n    ABS(COUNT(CASE WHEN r.gender = 'Женский' THEN 1 END) * 1.0 / COUNT(r.researcher_id) - 0.5) ASC,\n    publications_per_researcher DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT i.institution_id, i.name, \n       COUNT(CASE WHEN r.gender = 'Женский' THEN r.researcher_id END) AS female_researchers,\n       COUNT(r.researcher_id) AS total_researchers,\n       COUNT(DISTINCT pub.publication_id) AS total_publications,\n       COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(r.researcher_id) AS publication_per_researcher,\n       COUNT(CASE WHEN r.gender = 'Женский' THEN r.researcher_id END) * 1.0 / COUNT(r.researcher_id) AS gender_balance_index\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Researchers r ON d.department_id = r.department_id\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY i.institution_id, i.name\nORDER BY ABS(0.5 - (COUNT(CASE WHEN r.gender = 'Женский' THEN r.researcher_id END) * 1.0 / COUNT(r.researcher_id))) ASC, \n         COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(r.researcher_id) DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    i.institution_id, \n    i.name AS institution_name, \n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    SUM(IF(r.gender = 'Женский', 1, 0)) AS female_researchers,\n    SUM(IF(r.gender = 'Мужской', 1, 0)) AS male_researchers,\n    (SUM(IF(r.gender = 'Женский', 1, 0)) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS gender_balance_index,\n    COUNT(DISTINCT p.project_id) AS projects_count,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS productivity_per_researcher\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Researchers r ON d.department_id = (SELECT department_id FROM Projects WHERE project_lead_id = r.researcher_id)\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    i.institution_id, i.name\nORDER BY \n    ABS(0.5 - (SUM(IF(r.gender = 'Женский', 1, 0)) * 1.0 / COUNT(DISTINCT r.researcher_id))),\n    (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    i.institution_id,\n    i.name AS institution_name,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) AS female_researchers,\n    SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT r.researcher_id) AS gender_balance_index,\n    COUNT(DISTINCT pub.publication_id) AS total_publications,\n    COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id) AS publications_per_researcher\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Researchers r ON d.department_id = r.researcher_id\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nWHERE \n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    i.institution_id, i.name\nORDER BY \n    ABS(0.5 - gender_balance_index) ASC,\n    publications_per_researcher DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    i.institution_id,\n    i.name AS institution_name,\n    i.country,\n    i.city,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) AS female_researchers,\n    SUM(CASE WHEN r.gender = 'Женский' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT r.researcher_id) AS gender_balance_index,\n    COUNT(DISTINCT pub.publication_id) AS total_publications,\n    COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id) AS productivity_per_researcher\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Researchers r ON d.department_id = r.researcher_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nWHERE \n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    i.institution_id, i.name, i.country, i.city\nHAVING \n    COUNT(DISTINCT r.researcher_id) > 0\nORDER BY \n    ABS(0.5 - gender_balance_index) ASC,\n    productivity_per_researcher DESC\nLIMIT 8;",
            "gigachat_response": "WITH GenderBalanceAndProductivity AS (\n    SELECT \n        i.institution_id,\n        i.name AS institution_name,\n        COUNT(CASE WHEN r.gender = 'Женский' THEN 1 END) AS female_count,\n        COUNT(*) AS total_researchers,\n        ROUND((COUNT(CASE WHEN r.gender = 'Женский' THEN 1 END) + 0.0) / COUNT(*), 4) AS gender_balance_index,\n        SUM(pub.publication_id IS NOT NULL) AS total_publications,\n        ROUND(SUM(pub.publication_id IS NOT NULL) / COUNT(*), 4) AS publications_per_researcher\n    FROM Institutions i\n    LEFT JOIN Departments d ON i.institution_id = d.institution_id\n    LEFT JOIN Researchers r ON d.department_id = ANY(SELECT department_id FROM Researchers WHERE researcher_id = r.researcher_id)\n    LEFT JOIN Projects p ON d.department_id = p.department_id AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    GROUP BY i.institution_id, i.name\n)\nSELECT *\nFROM GenderBalanceAndProductivity\nORDER BY ABS(gender_balance_index - 0.5), publications_per_researcher DESC\nLIMIT 8;",
            "gigachat_response_ru": "WITH GenderBalance AS (\n    SELECT \n        d.institution_id,\n        COUNT(CASE WHEN r.gender = 'Женский' THEN 1 END) AS female_count,\n        COUNT(*) AS total_researchers,\n        CAST(COUNT(CASE WHEN r.gender = 'Женский' THEN 1 END) AS FLOAT) / COUNT(*) AS gender_balance_index\n    FROM Researchers r\n    JOIN Departments d ON r.researcher_id = d.head_id\n    WHERE r.birth_date <= ADDDATE(NOW(), INTERVAL -4 YEAR)\n    GROUP BY d.institution_id\n),\nPublicationProductivity AS (\n    SELECT \n        d.institution_id,\n        COUNT(DISTINCT pub.publication_id) / COUNT(DISTINCT r.researcher_id) AS pub_per_researcher\n    FROM Researchers r\n    JOIN Departments d ON r.researcher_id = d.head_id\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    WHERE pub.publication_date BETWEEN ADDDATE(NOW(), INTERVAL -4 YEAR) AND NOW()\n    GROUP BY d.institution_id\n)\nSELECT \n    i.institution_id, \n    i.name AS institution_name, \n    gb.gender_balance_index, \n    pp.pub_per_researcher\nFROM Institutions i\nJOIN GenderBalance gb ON i.institution_id = gb.institution_id\nJOIN PublicationProductivity pp ON i.institution_id = pp.institution_id\nORDER BY ABS(gb.gender_balance_index - 0.5), pp.pub_per_researcher DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 14 образцов из различных экспериментов демонстрируют наиболее интересные характеристики с точки зрения типа, количества и времени хранения? Рассмотрите образцы с различными условиями хранения, собранные за последние 3 года, и вычислите индекс уникальности каждого образца на основе редкости его типа и условия хранения. Отсортируйте результаты по индексу уникальности в убывающем порядке.",
            "sql_query": "WITH SampleTypeCounts AS (\n    SELECT type, COUNT(*) AS type_count,\n           MIN(collection_date) AS first_collected,\n           MAX(collection_date) AS last_collected\n    FROM Samples\n    GROUP BY type\n),\nSampleConditionCounts AS (\n    SELECT `condition`, COUNT(*) AS condition_count\n    FROM Samples\n    GROUP BY `condition`\n),\nExperimentInfos AS (\n    SELECT e.experiment_id, e.title, p.title AS project_title,\n           CONCAT(r.first_name, ' ', r.last_name) AS researcher_name,\n           e.location, e.status\n    FROM Experiments e\n    JOIN Projects p ON e.project_id = p.project_id\n    JOIN Researchers r ON e.lead_researcher_id = r.researcher_id\n)\nSELECT s.sample_id, s.type, s.quantity, s.unit, s.`condition`, s.collection_date, s.storage_location,\n       DATEDIFF(CURRENT_DATE, s.collection_date) AS days_in_storage,\n       ei.title AS experiment_title, ei.project_title, ei.researcher_name, ei.location,\n       (1 / stc.type_count) * (1 / scc.condition_count) * s.quantity * 100 AS uniqueness_index\nFROM Samples s\nJOIN SampleTypeCounts stc ON s.type = stc.type\nJOIN SampleConditionCounts scc ON s.`condition` = scc.`condition`\nJOIN ExperimentInfos ei ON s.experiment_id = ei.experiment_id\nWHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND s.status NOT IN ('Архивирован')\nORDER BY uniqueness_index DESC, days_in_storage ASC\nLIMIT 14;",
            "gpt-4o_response": "SELECT s.sample_id, s.type, s.quantity, s.unit, s.condition, s.collection_date, \n       s.storage_location, s.description, s.status, \n       (1.0 / COUNT(DISTINCT s.type) + 1.0 / COUNT(DISTINCT s.condition)) AS uniqueness_index\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY s.sample_id, s.type, s.quantity, s.unit, s.condition, s.collection_date, \n         s.storage_location, s.description, s.status\nORDER BY uniqueness_index DESC\nLIMIT 14;",
            "gpt-4o_response_ru": "SELECT s.sample_id, s.type, s.quantity, s.unit, s.collection_date, s.storage_location, s.condition, s.description, s.status,\n       (1.0 / COUNT(DISTINCT s.type) + 1.0 / COUNT(DISTINCT s.condition)) AS uniqueness_index\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY s.sample_id, s.type, s.quantity, s.unit, s.collection_date, s.storage_location, s.condition, s.description, s.status\nORDER BY uniqueness_index DESC\nLIMIT 14;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    s.sample_id,\n    s.type,\n    s.quantity,\n    s.unit,\n    s.`condition`,\n    s.collection_date,\n    s.storage_location,\n    e.title AS experiment_title,\n    e.experiment_id,\n    (\n        SELECT COUNT(*)\n        FROM Samples AS s2\n        WHERE s2.type = s.type\n    ) AS type_count,\n    (\n        SELECT COUNT(*)\n        FROM Samples AS s3\n        WHERE s3.`condition` = s.`condition`\n    ) AS condition_count,\n    (1.0 / (\n        SELECT COUNT(*)\n        FROM Samples AS s2\n        WHERE s2.type = s.type\n    )) + (1.0 / (\n        SELECT COUNT(*)\n        FROM Samples AS s3\n        WHERE s3.`condition` = s.`condition`\n    )) AS uniqueness_index\nFROM\n    Samples AS s\nJOIN\n    Experiments AS e ON s.experiment_id = e.experiment_id\nWHERE\n    s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY\n    uniqueness_index DESC\nLIMIT 14;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    s.sample_id,\n    e.experiment_id,\n    e.title AS experiment_title,\n    s.type AS sample_type,\n    s.quantity,\n    s.unit,\n    s.`condition` AS sample_condition,\n    s.collection_date,\n    s.storage_location,\n    (\n        SELECT COUNT(*)\n        FROM Samples AS s2\n        WHERE s2.type = s.type\n    ) AS type_count,\n    (\n        SELECT COUNT(*)\n        FROM Samples AS s3\n        WHERE s3.`condition` = s.`condition`\n    ) AS condition_count,\n    (1.0 / (SELECT COUNT(*) FROM Samples AS s2 WHERE s2.type = s.type)) + (1.0 / (SELECT COUNT(*) FROM Samples AS s3 WHERE s3.`condition` = s.`condition`)) AS uniqueness_index\nFROM\n    Samples AS s\nJOIN\n    Experiments AS e ON s.experiment_id = e.experiment_id\nWHERE\n    s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY\n    uniqueness_index DESC\nLIMIT 14;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT s.sample_id, s.type, s.quantity, s.unit, s.condition, s.description, \n       e.title AS experiment_title, e.start_date, e.end_date, \n       TIMESTAMPDIFF(DAY, s.collection_date, COALESCE(e.end_date, CURRENT_DATE)) AS storage_days,\n       COUNT(DISTINCT s.sample_id) OVER (PARTITION BY s.type, s.condition) AS type_condition_count,\n       (1.0 / COUNT(DISTINCT s.sample_id) OVER (PARTITION BY s.type, s.condition)) AS uniqueness_index\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY uniqueness_index DESC\nLIMIT 14;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT s.sample_id, s.type, s.quantity, s.unit, s.condition, \n       DATEDIFF(COALESCE(s.collection_date, '2020-01-01'), '2020-01-01') AS collection_days_ago,\n       COUNT(DISTINCT s.type) OVER () AS total_types,\n       COUNT(s.sample_id) OVER (PARTITION BY s.type) AS type_count,\n       1.0 / (COUNT(s.sample_id) OVER (PARTITION BY s.type) * 1.0 / COUNT(DISTINCT s.type) OVER ()) AS uniqueness_index\nFROM Samples s\nWHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY uniqueness_index DESC\nLIMIT 14;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT s.sample_id, s.type, s.quantity, s.unit, s.condition, s.collection_date, \n       e.title AS experiment_title, e.start_date AS experiment_start_date,\n       (SELECT COUNT(*) FROM Samples WHERE type = s.type) AS type_count,\n       (SELECT COUNT(*) FROM Samples WHERE `condition` = s.condition) AS condition_count,\n       (1.0 / (SELECT COUNT(*) FROM Samples WHERE type = s.type)) + \n       (1.0 / (SELECT COUNT(*) FROM Samples WHERE `condition` = s.condition)) AS uniqueness_index\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY uniqueness_index DESC\nLIMIT 14;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    s.sample_id,\n    e.title AS experiment_title,\n    s.type AS sample_type,\n    s.quantity,\n    s.unit,\n    s.condition AS storage_condition,\n    s.collection_date,\n    DATEDIFF(CURRENT_DATE(), s.collection_date) AS storage_days,\n    (1.0 / (SELECT COUNT(*) FROM Samples WHERE type = s.type) + \n     1.0 / (SELECT COUNT(*) FROM Samples WHERE condition = s.condition)) AS uniqueness_index\nFROM \n    Samples s\nJOIN \n    Experiments e ON s.experiment_id = e.experiment_id\nWHERE \n    s.collection_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 YEAR)\nORDER BY \n    uniqueness_index DESC, s.collection_date DESC\nLIMIT 14;",
            "gigachat_response": "WITH SampleRarity AS (\n    SELECT s.sample_id,\n           s.`type`,\n           s.collection_date,\n           s.storage_location,\n           s.quantity,\n           s.unit,\n           s.condition,\n           s.description,\n           s.status,\n           ROW_NUMBER() OVER(PARTITION BY s.`type`, s.condition ORDER BY s.collection_date DESC) AS uniqueness_index\n    FROM Samples s\n    WHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n)\nSELECT sr.sample_id,\n       sr.`type`,\n       sr.collection_date,\n       sr.storage_location,\n       sr.quantity,\n       sr.unit,\n       sr.condition,\n       sr.description,\n       sr.status,\n       sr.uniqueness_index\nFROM SampleRarity sr\nORDER BY sr.uniqueness_index ASC\nLIMIT 14;",
            "gigachat_response_ru": "WITH SampleRarity AS (\n    SELECT s.sample_id,\n           s.type,\n           s.`condition`,\n           COUNT(*) OVER(PARTITION BY s.type) AS type_frequency,\n           COUNT(*) OVER(PARTITION BY s.`condition`) AS condition_frequency\n    FROM Samples s\n    WHERE s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n),\nSampleUniqueness AS (\n    SELECT sr.sample_id,\n           sr.type,\n           sr.`condition`,\n           1/(sr.type_frequency + sr.condition_frequency) AS uniqueness_index\n    FROM SampleRarity sr\n)\nSELECT su.sample_id,\n       s.type,\n       s.quantity,\n       s.unit,\n       s.storage_location,\n       s.`condition`,\n       su.uniqueness_index\nFROM SampleUniqueness su\nJOIN Samples s ON su.sample_id = s.sample_id\nORDER BY su.uniqueness_index DESC\nLIMIT 14;"
        },
        {
            "question": "Какие 13 проектов имеют наиболее короткий цикл от подачи заявки на этическое одобрение до получения одобрения за последние 2 года, и как это влияет на общую производительность проекта? Проанализируйте время рассмотрения этических заявок, количество условий в одобрениях, статус проектов и их общие результаты в виде публикаций и патентов. Отсортируйте по времени рассмотрения заявки (в днях) в возрастающем порядке.",
            "sql_query": "WITH EthicsApprovalTimes AS (\n    SELECT ea.project_id, \n           ea.application_date, ea.approval_date, \n           ea.status AS approval_status,\n           DATEDIFF(ea.approval_date, ea.application_date) AS days_to_approval,\n           LENGTH(ea.conditions) - LENGTH(REPLACE(ea.conditions, ' ', '')) + 1 AS condition_word_count,\n           CASE WHEN ea.conditions LIKE '%необходим%' THEN 1 ELSE 0 END AS has_requirements\n    FROM EthicsApprovals ea\n    WHERE ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND ea.approval_date IS NOT NULL\n),\nProjectOutputs AS (\n    SELECT p.project_id, p.title, p.status AS project_status, \n           p.start_date, p.end_date, p.budget,\n           COUNT(DISTINCT pub.publication_id) AS publication_count,\n           COUNT(DISTINCT pt.patent_id) AS patent_count,\n           COUNT(DISTINCT e.experiment_id) AS experiment_count\n    FROM Projects p\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    LEFT JOIN Patents pt ON p.project_id = pt.project_id\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    GROUP BY p.project_id, p.title, p.status, p.start_date, p.end_date, p.budget\n),\nDepartmentInfo AS (\n    SELECT d.department_id, d.name AS department_name, i.name AS institution_name\n    FROM Departments d\n    JOIN Institutions i ON d.institution_id = i.institution_id\n)\nSELECT eat.project_id, po.title AS project_title, di.department_name, di.institution_name,\n       eat.application_date, eat.approval_date, eat.days_to_approval,\n       eat.approval_status, eat.condition_word_count, eat.has_requirements,\n       po.project_status, po.publication_count, po.patent_count, po.experiment_count,\n       (po.publication_count + po.patent_count + po.experiment_count) AS total_outputs,\n       (po.publication_count + po.patent_count + po.experiment_count) / (CASE WHEN eat.days_to_approval = 0 THEN 1 ELSE eat.days_to_approval END) AS productivity_per_approval_day\nFROM EthicsApprovalTimes eat\nJOIN ProjectOutputs po ON eat.project_id = po.project_id\nJOIN Projects p ON po.project_id = p.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN DepartmentInfo di ON d.department_id = di.department_id\nWHERE eat.days_to_approval > 0\nORDER BY eat.days_to_approval ASC, productivity_per_approval_day DESC\nLIMIT 13;",
            "gpt-4o_response": "SELECT \n    ea.project_id,\n    p.title AS project_title,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    ea.conditions,\n    p.status AS project_status,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT pat.patent_id) AS patent_count\nFROM \n    EthicsApprovals ea\nJOIN \n    Projects p ON ea.project_id = p.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY \n    approval_days ASC\nLIMIT 13;",
            "gpt-4o_response_ru": "SELECT \n    ea.project_id,\n    p.title AS project_title,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    CASE \n        WHEN ea.conditions IS NULL OR ea.conditions = '' THEN 0\n        ELSE LENGTH(ea.conditions) - LENGTH(REPLACE(ea.conditions, ',', '')) + 1\n    END AS conditions_count,\n    p.status AS project_status,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count\nFROM \n    EthicsApprovals ea\nJOIN \n    Projects p ON ea.project_id = p.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY \n    approval_days ASC\nLIMIT 13;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    ea.application_date,\n    ea.approval_date,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_time_days,\n    ea.status AS ethics_approval_status,\n    ea.committee_name,\n    ea.conditions AS ethics_approval_conditions,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT pat.patent_id) AS patent_count\nFROM\n    Projects p\nJOIN\n    EthicsApprovals ea ON p.project_id = ea.project_id\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    Patents pat ON p.project_id = pat.project_id\nWHERE\n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY\n    approval_time_days ASC\nLIMIT 13;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    ea.approval_id,\n    p.title AS project_title,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    ea.conditions,\n    ea.status AS ethics_approval_status,\n    p.status AS project_status,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT pat.patent_id) AS patent_count\nFROM\n    EthicsApprovals ea\nJOIN\n    Projects p ON ea.project_id = p.project_id\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    Patents pat ON p.project_id = pat.project_id\nWHERE\n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY\n    approval_days ASC\nLIMIT 13;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    p.project_id, \n    p.title, \n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    ea.status, \n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    p.status AS project_status\nFROM \n    Projects p\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, ea.status, ea.approval_date, ea.application_date, p.status\nORDER BY \n    approval_days ASC\nLIMIT 13;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.project_id, \n    p.title, \n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    ea.status, \n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    p.status AS project_status\nFROM \n    Projects p\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, ea.approval_date, ea.application_date, ea.status, p.status\nORDER BY \n    approval_days ASC\nLIMIT 13;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    p.status AS project_status,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    ea.status AS approval_status,\n    ea.committee_name,\n    ea.conditions,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    AVG(pub.impact_factor) AS avg_publication_impact,\n    p.budget AS project_budget,\n    DATEDIFF(p.end_date, p.start_date) AS project_duration_days\nFROM \n    Projects p\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, p.status, ea.approval_date, ea.application_date, \n    ea.status, ea.committee_name, ea.conditions, p.budget, p.start_date, p.end_date\nORDER BY \n    approval_days ASC\nLIMIT 13;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    p.status AS project_status,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    ea.status AS ethics_status,\n    ea.conditions,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    GROUP_CONCAT(DISTINCT CONCAT(r.first_name, ' ', r.last_name) SEPARATOR ', ') AS researchers_involved,\n    p.budget AS project_budget,\n    d.name AS department_name,\n    i.name AS institution_name\nFROM \n    Projects p\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, p.status, approval_days, ea.status, ea.conditions, p.budget, d.name, i.name\nORDER BY \n    approval_days ASC\nLIMIT 13;",
            "gigachat_response": "WITH EthicalApprovalDetails AS (\n    SELECT \n        ea.project_id,\n        ea.application_date,\n        ea.approval_date,\n        ea.status,\n        ea.committee_name,\n        ea.contact_person,\n        ea.contact_email,\n        ea.contact_phone,\n        ea.conditions,\n        DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\n    FROM EthicsApprovals ea\n    WHERE ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n      AND ea.status IN ('Одобрено', 'Одобрено с условиями')\n),\nProjectPublications AS (\n    SELECT \n        p.project_id,\n        COUNT(*) AS num_publications\n    FROM Projects p\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    GROUP BY p.project_id\n),\nProjectPatents AS (\n    SELECT \n        p.project_id,\n        COUNT(*) AS num_patents\n    FROM Projects p\n    LEFT JOIN Patents pat ON p.project_id = pat.project_id\n    GROUP BY p.project_id\n)\nSELECT \n    p.project_id,\n    p.title AS project_title,\n    p.start_date,\n    p.end_date,\n    p.status AS project_status,\n    p.budget,\n    ea.application_date,\n    ea.approval_date,\n    ea.status AS ethical_approval_status,\n    ea.committee_name,\n    ea.contact_person,\n    ea.contact_email,\n    ea.contact_phone,\n    ea.conditions,\n    ea.approval_days,\n    pp.num_publications,\n    pt.num_patents\nFROM Projects p\nINNER JOIN EthicalApprovalDetails ea ON p.project_id = ea.project_id\nLEFT JOIN ProjectPublications pp ON p.project_id = pp.project_id\nLEFT JOIN ProjectPatents pt ON p.project_id = pt.project_id\nORDER BY ea.approval_days ASC\nLIMIT 13;",
            "gigachat_response_ru": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    p.status AS project_status, \n    p.budget AS project_budget, \n    ea.approval_id, \n    ea.status AS ethics_approval_status, \n    ea.committee_name, \n    ea.contact_person, \n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT pat.patent_id) AS patent_count\nFROM \n    Projects p\nJOIN \n    EthicsApprovals ea ON p.project_id = ea.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, p.status, p.budget, ea.approval_id, ea.status, ea.committee_name, ea.contact_person, approval_days\nORDER BY \n    approval_days ASC\nLIMIT 13;"
        },
        {
            "question": "Какие 15 регионов России демонстрируют наибольшую научную активность в области экологических исследований за последние 5 лет? Проанализируйте количество институтов, проектов, публикаций, и экспериментов, связанных с экологическими исследованиями (определяемых по ключевым словам в названии) для каждого региона, и рассчитайте региональный индекс научной активности в этой области. Индекс рассчитывается как взвешенная сумма нормализованных показателей: количество институтов (10%), количество проектов (20%), объем финансирования проектов (10%), количество публикаций (30%), средний импакт-фактор публикаций (10%), количество экспериментов (10%) и количество образцов (10%).",
            "sql_query": "WITH RegionalInstitutions AS (\n    SELECT i.city AS region, \n           COUNT(DISTINCT i.institution_id) AS institution_count\n    FROM Institutions i\n    WHERE i.country = 'Россия'\n    GROUP BY i.city\n),\nEcoProjects AS (\n    SELECT i.city AS region, \n           COUNT(DISTINCT p.project_id) AS eco_project_count,\n           SUM(p.budget) AS total_eco_budget\n    FROM Projects p\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (p.title LIKE '%эколог%' OR p.title LIKE '%климат%' OR \n           p.title LIKE '%окружающ%' OR p.title LIKE '%устойчив%' OR \n           p.title LIKE '%биоразнообраз%' OR p.title LIKE '%экосистем%')\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND i.country = 'Россия'\n    GROUP BY i.city\n),\nEcoPublications AS (\n    SELECT i.city AS region, \n           COUNT(DISTINCT pub.publication_id) AS eco_publication_count,\n           AVG(pub.impact_factor) AS avg_impact_factor\n    FROM Publications pub\n    JOIN Projects p ON pub.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (pub.title LIKE '%эколог%' OR pub.title LIKE '%климат%' OR \n           pub.title LIKE '%окружающ%' OR pub.title LIKE '%устойчив%' OR \n           pub.title LIKE '%биоразнообраз%' OR pub.title LIKE '%экосистем%')\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND i.country = 'Россия'\n    GROUP BY i.city\n),\nEcoExperiments AS (\n    SELECT i.city AS region, \n           COUNT(DISTINCT e.experiment_id) AS eco_experiment_count,\n           COUNT(DISTINCT s.sample_id) AS eco_sample_count\n    FROM Experiments e\n    JOIN Projects p ON e.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    LEFT JOIN Samples s ON e.experiment_id = s.experiment_id\n    WHERE (e.title LIKE '%эколог%' OR e.title LIKE '%климат%' OR \n           e.title LIKE '%окружающ%' OR e.title LIKE '%устойчив%' OR \n           e.title LIKE '%биоразнообраз%' OR e.title LIKE '%экосистем%')\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND i.country = 'Россия'\n    GROUP BY i.city\n),\nMaxValues AS (\n    SELECT MAX(ri.institution_count) AS max_institutions,\n           MAX(ep.eco_project_count) AS max_projects,\n           MAX(ep.total_eco_budget) AS max_budget,\n           MAX(epb.eco_publication_count) AS max_publications,\n           MAX(epb.avg_impact_factor) AS max_impact_factor,\n           MAX(ee.eco_experiment_count) AS max_experiments,\n           MAX(ee.eco_sample_count) AS max_samples\n    FROM RegionalInstitutions ri\n    LEFT JOIN EcoProjects ep ON ri.region = ep.region\n    LEFT JOIN EcoPublications epb ON ri.region = epb.region\n    LEFT JOIN EcoExperiments ee ON ri.region = ee.region\n)\nSELECT ri.region,\n       ri.institution_count,\n       COALESCE(ep.eco_project_count, 0) AS eco_project_count,\n       COALESCE(ep.total_eco_budget, 0) AS total_eco_budget,\n       COALESCE(epb.eco_publication_count, 0) AS eco_publication_count,\n       COALESCE(epb.avg_impact_factor, 0) AS avg_impact_factor,\n       COALESCE(ee.eco_experiment_count, 0) AS eco_experiment_count,\n       COALESCE(ee.eco_sample_count, 0) AS eco_sample_count,\n       (COALESCE(ri.institution_count, 0) / mv.max_institutions * 0.1 +\n        COALESCE(ep.eco_project_count, 0) / mv.max_projects * 0.2 +\n        COALESCE(ep.total_eco_budget, 0) / mv.max_budget * 0.1 +\n        COALESCE(epb.eco_publication_count, 0) / mv.max_publications * 0.3 +\n        COALESCE(epb.avg_impact_factor, 0) / mv.max_impact_factor * 0.1 +\n        COALESCE(ee.eco_experiment_count, 0) / mv.max_experiments * 0.1 +\n        COALESCE(ee.eco_sample_count, 0) / mv.max_samples * 0.1) AS eco_research_index\nFROM RegionalInstitutions ri\nLEFT JOIN EcoProjects ep ON ri.region = ep.region\nLEFT JOIN EcoPublications epb ON ri.region = epb.region\nLEFT JOIN EcoExperiments ee ON ri.region = ee.region\nCROSS JOIN MaxValues mv\nWHERE COALESCE(ep.eco_project_count, 0) > 0 OR COALESCE(epb.eco_publication_count, 0) > 0\nORDER BY eco_research_index DESC\nLIMIT 15;",
            "gpt-4o_response": "SELECT \n    i.country AS region,\n    COUNT(DISTINCT i.institution_id) AS institution_count,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    SUM(p.budget) AS total_project_budget,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT e.experiment_id) AS experiment_count,\n    COUNT(DISTINCT s.sample_id) AS sample_count,\n    (\n        (COUNT(DISTINCT i.institution_id) / MAX(inst_count.max_inst_count)) * 0.10 +\n        (COUNT(DISTINCT p.project_id) / MAX(proj_count.max_proj_count)) * 0.20 +\n        (SUM(p.budget) / MAX(budget_count.max_budget)) * 0.10 +\n        (COUNT(DISTINCT pub.publication_id) / MAX(pub_count.max_pub_count)) * 0.30 +\n        (AVG(pub.impact_factor) / MAX(impact_count.max_impact)) * 0.10 +\n        (COUNT(DISTINCT e.experiment_id) / MAX(exp_count.max_exp_count)) * 0.10 +\n        (COUNT(DISTINCT s.sample_id) / MAX(sample_count.max_sample_count)) * 0.10\n    ) AS scientific_activity_index\nFROM \n    Institutions i\nLEFT JOIN Departments d ON i.institution_id = d.institution_id\nLEFT JOIN Projects p ON d.department_id = p.department_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Experiments e ON p.project_id = e.project_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nJOIN (\n    SELECT \n        COUNT(DISTINCT institution_id) AS max_inst_count\n    FROM Institutions\n) AS inst_count ON 1=1\nJOIN (\n    SELECT \n        COUNT(DISTINCT project_id) AS max_proj_count\n    FROM Projects\n    WHERE title LIKE '%эколог%' AND start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n) AS proj_count ON 1=1\nJOIN (\n    SELECT \n        SUM(budget) AS max_budget\n    FROM Projects\n    WHERE title LIKE '%эколог%' AND start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n) AS budget_count ON 1=1\nJOIN (\n    SELECT \n        COUNT(DISTINCT publication_id) AS max_pub_count\n    FROM Publications\n    WHERE title LIKE '%эколог%' AND publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n) AS pub_count ON 1=1\nJOIN (\n    SELECT \n        AVG(impact_factor) AS max_impact\n    FROM Publications\n    WHERE title LIKE '%эколог%' AND publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n) AS impact_count ON 1=1\nJOIN (\n    SELECT \n        COUNT(DISTINCT experiment_id) AS max_exp_count\n    FROM Experiments\n    WHERE title LIKE '%эколог%' AND start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n) AS exp_count ON 1=1\nJOIN (\n    SELECT \n        COUNT(DISTINCT sample_id) AS max_sample_count\n    FROM Samples\n    WHERE description LIKE '%эколог%' AND collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n) AS sample_count ON 1=1\nWHERE \n    (p.title LIKE '%эколог%' OR pub.title LIKE '%эколог%' OR e.title LIKE '%эколог%' OR s.description LIKE '%эколог%')\n    AND (p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR))\nGROUP BY \n    i.country\nORDER BY \n    scientific_activity_index DESC\nLIMIT 15;",
            "gpt-4o_response_ru": "WITH EcoInstitutions AS (\n    SELECT i.institution_id, i.country, i.city\n    FROM Institutions i\n    JOIN Departments d ON i.institution_id = d.institution_id\n    JOIN Projects p ON d.department_id = p.department_id\n    WHERE p.title LIKE '%эколог%' OR p.title LIKE '%климат%'\n    GROUP BY i.institution_id, i.country, i.city\n),\nEcoProjects AS (\n    SELECT p.project_id, p.budget, i.country, i.city\n    FROM Projects p\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (p.title LIKE '%эколог%' OR p.title LIKE '%климат%')\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n),\nEcoPublications AS (\n    SELECT pub.publication_id, pub.impact_factor, i.country, i.city\n    FROM Publications pub\n    JOIN Projects p ON pub.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (p.title LIKE '%эколог%' OR p.title LIKE '%климат%')\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n),\nEcoExperiments AS (\n    SELECT e.experiment_id, i.country, i.city\n    FROM Experiments e\n    JOIN Projects p ON e.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (p.title LIKE '%эколог%' OR p.title LIKE '%климат%')\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n),\nEcoSamples AS (\n    SELECT s.sample_id, i.country, i.city\n    FROM Samples s\n    JOIN Experiments e ON s.experiment_id = e.experiment_id\n    JOIN Projects p ON e.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (p.title LIKE '%эколог%' OR p.title LIKE '%климат%')\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n)\nSELECT ei.country, ei.city,\n       COUNT(DISTINCT ei.institution_id) AS institution_count,\n       COUNT(DISTINCT ep.project_id) AS project_count,\n       SUM(ep.budget) AS total_budget,\n       COUNT(DISTINCT epub.publication_id) AS publication_count,\n       AVG(epub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT ee.experiment_id) AS experiment_count,\n       COUNT(DISTINCT es.sample_id) AS sample_count,\n       (COUNT(DISTINCT ei.institution_id) * 0.10 +\n        COUNT(DISTINCT ep.project_id) * 0.20 +\n        SUM(ep.budget) * 0.10 / (SELECT MAX(budget) FROM EcoProjects) +\n        COUNT(DISTINCT epub.publication_id) * 0.30 +\n        AVG(epub.impact_factor) * 0.10 +\n        COUNT(DISTINCT ee.experiment_id) * 0.10 +\n        COUNT(DISTINCT es.sample_id) * 0.10) AS activity_index\nFROM EcoInstitutions ei\nLEFT JOIN EcoProjects ep ON ei.country = ep.country AND ei.city = ep.city\nLEFT JOIN EcoPublications epub ON ei.country = epub.country AND ei.city = epub.city\nLEFT JOIN EcoExperiments ee ON ei.country = ee.country AND ei.city = ee.city\nLEFT JOIN EcoSamples es ON ei.country = es.country AND ei.city = es.city\nGROUP BY ei.country, ei.city\nORDER BY activity_index DESC\nLIMIT 15;",
            "google/gemini-2.0-flash-001_response": "WITH RegionData AS (\n    SELECT\n        i.country AS region,\n        COUNT(DISTINCT i.institution_id) AS num_institutions,\n        COUNT(DISTINCT p.project_id) AS num_projects,\n        SUM(p.budget) AS total_project_funding,\n        COUNT(DISTINCT pub.publication_id) AS num_publications,\n        AVG(pub.impact_factor) AS avg_publication_impact_factor,\n        COUNT(DISTINCT e.experiment_id) AS num_experiments,\n        COUNT(DISTINCT s.sample_id) AS num_samples\n    FROM Institutions i\n    LEFT JOIN Departments d ON i.institution_id = d.institution_id\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Samples s ON e.experiment_id = s.experiment_id\n    WHERE (p.title LIKE '%экологи%' OR p.title LIKE '%климат%' OR p.title LIKE '%окружающ%')\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND (pub.title LIKE '%экологи%' OR pub.title LIKE '%климат%' OR pub.title LIKE '%окружающ%' OR pub.journal LIKE '%экологи%' OR pub.journal LIKE '%климат%')\n    AND (e.title LIKE '%экологи%' OR e.title LIKE '%климат%' OR e.title LIKE '%окружающ%' OR e.description LIKE '%экологи%' OR e.description LIKE '%климат%')\n    GROUP BY i.country\n),\nNormalizedData AS (\n    SELECT\n        region,\n        num_institutions,\n        num_projects,\n        total_project_funding,\n        num_publications,\n        avg_publication_impact_factor,\n        num_experiments,\n        num_samples,\n        (num_institutions - MIN(num_institutions) OVER ()) / (MAX(num_institutions) OVER () - MIN(num_institutions) OVER ()) AS normalized_institutions,\n        (num_projects - MIN(num_projects) OVER ()) / (MAX(num_projects) OVER () - MIN(num_projects) OVER ()) AS normalized_projects,\n        (total_project_funding - MIN(total_project_funding) OVER ()) / (MAX(total_project_funding) OVER () - MIN(total_project_funding) OVER ()) AS normalized_funding,\n        (num_publications - MIN(num_publications) OVER ()) / (MAX(num_publications) OVER () - MIN(num_publications) OVER ()) AS normalized_publications,\n        (avg_publication_impact_factor - MIN(avg_publication_impact_factor) OVER ()) / (MAX(avg_publication_impact_factor) OVER () - MIN(avg_publication_impact_factor) OVER ()) AS normalized_impact_factor,\n        (num_experiments - MIN(num_experiments) OVER ()) / (MAX(num_experiments) OVER () - MIN(num_experiments) OVER ()) AS normalized_experiments,\n        (num_samples - MIN(num_samples) OVER ()) / (MAX(num_samples) OVER () - MIN(num_samples) OVER ()) AS normalized_samples\n    FROM RegionData\n)\nSELECT\n    region,\n    (0.10 * normalized_institutions +\n     0.20 * normalized_projects +\n     0.10 * normalized_funding +\n     0.30 * normalized_publications +\n     0.10 * normalized_impact_factor +\n     0.10 * normalized_experiments +\n     0.10 * normalized_samples) AS regional_activity_index,\n    num_institutions,\n    num_projects,\n    total_project_funding,\n    num_publications,\n    avg_publication_impact_factor,\n    num_experiments,\n    num_samples\nFROM NormalizedData\nORDER BY regional_activity_index DESC\nLIMIT 15;",
            "google/gemini-2.0-flash-001_response_ru": "WITH RegionData AS (\n    SELECT\n        i.country AS region,\n        COUNT(DISTINCT i.institution_id) AS num_institutions,\n        COUNT(DISTINCT p.project_id) AS num_projects,\n        SUM(p.budget) AS total_project_budget,\n        COUNT(DISTINCT pub.publication_id) AS num_publications,\n        AVG(pub.impact_factor) AS avg_impact_factor,\n        COUNT(DISTINCT e.experiment_id) AS num_experiments,\n        COUNT(DISTINCT s.sample_id) AS num_samples\n    FROM Institutions i\n    LEFT JOIN Departments d ON i.institution_id = d.institution_id\n    LEFT JOIN Projects p ON d.department_id = p.department_id\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    LEFT JOIN Experiments e ON p.project_id = e.project_id\n    LEFT JOIN Samples s ON e.experiment_id = s.experiment_id\n    WHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND (\n        p.title LIKE '%экологическ%' OR p.title LIKE '%экология%' OR p.title LIKE '%климат%' OR p.title LIKE '%окружающая среда%'\n        OR pub.title LIKE '%экологическ%' OR pub.title LIKE '%экология%' OR pub.title LIKE '%климат%' OR pub.title LIKE '%окружающая среда%'\n        OR e.title LIKE '%экологическ%' OR e.title LIKE '%экология%' OR e.title LIKE '%климат%' OR e.title LIKE '%окружающая среда%'\n    )\n    GROUP BY i.country\n),\nNormalizedData AS (\n    SELECT\n        region,\n        num_institutions,\n        num_projects,\n        total_project_budget,\n        num_publications,\n        avg_impact_factor,\n        num_experiments,\n        num_samples,\n        (num_institutions - MIN(num_institutions) OVER ()) / (MAX(num_institutions) OVER () - MIN(num_institutions) OVER ()) AS norm_institutions,\n        (num_projects - MIN(num_projects) OVER ()) / (MAX(num_projects) OVER () - MIN(num_projects) OVER ()) AS norm_projects,\n        (total_project_budget - MIN(total_project_budget) OVER ()) / (MAX(total_project_budget) OVER () - MIN(total_project_budget) OVER ()) AS norm_budget,\n        (num_publications - MIN(num_publications) OVER ()) / (MAX(num_publications) OVER () - MIN(num_publications) OVER ()) AS norm_publications,\n        (avg_impact_factor - MIN(avg_impact_factor) OVER ()) / (MAX(avg_impact_factor) OVER () - MIN(avg_impact_factor) OVER ()) AS norm_impact_factor,\n        (num_experiments - MIN(num_experiments) OVER ()) / (MAX(num_experiments) OVER () - MIN(num_experiments) OVER ()) AS norm_experiments,\n        (num_samples - MIN(num_samples) OVER ()) / (MAX(num_samples) OVER () - MIN(num_samples) OVER ()) AS norm_samples\n    FROM RegionData\n),\nWeightedSum AS (\n    SELECT\n        region,\n        (0.10 * norm_institutions) +\n        (0.20 * norm_projects) +\n        (0.10 * norm_budget) +\n        (0.30 * norm_publications) +\n        (0.10 * norm_impact_factor) +\n        (0.10 * norm_experiments) +\n        (0.10 * norm_samples) AS regional_index,\n        num_institutions,\n        num_projects,\n        total_project_budget,\n        num_publications,\n        avg_impact_factor,\n        num_experiments,\n        num_samples\n    FROM NormalizedData\n)\nSELECT\n    region,\n    regional_index,\n    num_institutions,\n    num_projects,\n    total_project_budget,\n    num_publications,\n    avg_impact_factor,\n    num_experiments,\n    num_samples\nFROM WeightedSum\nORDER BY regional_index DESC\nLIMIT 15;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    i.city, \n    COUNT(DISTINCT inst.id) AS institutions_count,\n    COUNT(DISTINCT p.project_id) AS projects_count,\n    SUM(p.budget) AS total_budget,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    COUNT(DISTINCT s.sample_id) AS samples_count,\n    (COUNT(DISTINCT inst.id) * 0.1 + \n     COUNT(DISTINCT p.project_id) * 0.2 + \n     SUM(p.budget) * 0.1 + \n     COUNT(DISTINCT pub.publication_id) * 0.3 + \n     AVG(pub.impact_factor) * 0.1 + \n     COUNT(DISTINCT e.experiment_id) * 0.1 + \n     COUNT(DISTINCT s.sample_id) * 0.1) AS regional_index\nFROM Institutions i\nLEFT JOIN Departments d ON i.institution_id = d.institution_id\nLEFT JOIN Projects p ON d.department_id = p.department_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Experiments e ON p.project_id = e.project_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nLEFT JOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN EthicsApprovals ea ON p.project_id = ea.project_id\nWHERE i.country = 'Россия'\nAND (p.title LIKE '%экологический%' OR p.title LIKE '%окружающая среда%' OR p.title LIKE '%экология%')\nAND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY i.city\nORDER BY regional_index DESC\nLIMIT 15;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "WITH regional_data AS (\n  SELECT \n    i.city AS region,\n    COUNT(DISTINCT i.institution_id) AS institutions_count,\n    COUNT(DISTINCT p.project_id) AS projects_count,\n    SUM(p.budget) AS total_budget,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    COUNT(DISTINCT s.sample_id) AS samples_count\n  FROM Institutions i\n  JOIN Departments d ON i.institution_id = d.institution_id\n  JOIN Projects p ON d.department_id = p.department_id\n  JOIN Publications pub ON p.project_id = pub.project_id\n  JOIN Experiments e ON p.project_id = e.project_id\n  JOIN Samples s ON e.experiment_id = s.experiment_id\n  WHERE pub.title LIKE '%экология%' OR p.title LIKE '%экология%'\n  GROUP BY i.city\n),\nweighted_data AS (\n  SELECT \n    region,\n    institutions_count * 0.1 AS institutions_weight,\n    projects_count * 0.2 AS projects_weight,\n    total_budget * 0.1 AS budget_weight,\n    publications_count * 0.3 AS publications_weight,\n    avg_impact_factor * 0.1 AS impact_factor_weight,\n    experiments_count * 0.1 AS experiments_weight,\n    samples_count * 0.1 AS samples_weight\n  FROM regional_data\n),\ntotal_weight AS (\n  SELECT \n    region,\n    institutions_weight + projects_weight + budget_weight + publications_weight + impact_factor_weight + experiments_weight + samples_weight AS total_weight\n  FROM weighted_data\n)\nSELECT \n  region,\n  institutions_count,\n  projects_count,\n  total_budget,\n  publications_count,\n  avg_impact_factor,\n  experiments_count,\n  samples_count,\n  total_weight AS regional_index\nFROM regional_data\nJOIN total_weight USING (region)\nORDER BY total_weight DESC\nLIMIT 15;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    i.city AS region,\n    COUNT(DISTINCT i.institution_id) AS institution_count,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    SUM(p.budget) AS total_budget,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT e.experiment_id) AS experiment_count,\n    COUNT(DISTINCT s.sample_id) AS sample_count,\n    (0.1 * (COUNT(DISTINCT i.institution_id) / MAX(COUNT(DISTINCT i.institution_id)) OVER ()) +\n     0.2 * (COUNT(DISTINCT p.project_id) / MAX(COUNT(DISTINCT p.project_id)) OVER ()) +\n     0.1 * (SUM(p.budget) / MAX(SUM(p.budget)) OVER ()) +\n     0.3 * (COUNT(DISTINCT pub.publication_id) / MAX(COUNT(DISTINCT pub.publication_id)) OVER ()) +\n     0.1 * (AVG(pub.impact_factor) / MAX(AVG(pub.impact_factor)) OVER ()) +\n     0.1 * (COUNT(DISTINCT e.experiment_id) / MAX(COUNT(DISTINCT e.experiment_id)) OVER ()) +\n     0.1 * (COUNT(DISTINCT s.sample_id) / MAX(COUNT(DISTINCT s.sample_id)) OVER ())) AS scientific_activity_index\nFROM \n    Institutions i\nLEFT JOIN \n    Departments d ON i.institution_id = d.institution_id\nLEFT JOIN \n    Projects p ON d.department_id = p.department_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Experiments e ON p.project_id = e.project_id\nLEFT JOIN \n    Samples s ON e.experiment_id = s.experiment_id\nWHERE \n    (p.title LIKE '%экологи%' OR \n     p.title LIKE '%климат%' OR \n     p.title LIKE '%природ%' OR \n     p.title LIKE '%эко%' OR \n     pub.title LIKE '%экологи%' OR \n     pub.title LIKE '%климат%' OR \n     pub.title LIKE '%природ%' OR \n     pub.title LIKE '%эко%' OR \n     e.title LIKE '%экологи%' OR \n     e.title LIKE '%климат%' OR \n     e.title LIKE '%природ%' OR \n     e.title LIKE '%эко%')\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND i.country = 'Россия'\nGROUP BY \n    i.city\nORDER BY \n    scientific_activity_index DESC\nLIMIT 15;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "Написание неточных, неполных или неправильных запросов приведёт к некорректным результатам.\n\n```sql\nWITH eco_institutions AS (\n    SELECT i.city, i.country, COUNT(DISTINCT i.institution_id) AS institutions_count\n    FROM Institutions i\n    JOIN Departments d ON i.institution_id = d.institution_id\n    JOIN Projects p ON d.department_id = p.department_id\n    WHERE (LOWER(p.title) LIKE '%экологи%' OR LOWER(p.title) LIKE '%климат%' OR LOWER(p.title) LIKE '%эколог%')\n    AND i.country = 'Россия'\n    GROUP BY i.city, i.country\n),\neco_projects AS (\n    SELECT i.city, i.country, \n           COUNT(DISTINCT p.project_id) AS projects_count,\n           SUM(p.budget) AS total_budget\n    FROM Projects p\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (LOWER(p.title) LIKE '%экологи%' OR LOWER(p.title) LIKE '%климат%' OR LOWER(p.title) LIKE '%эколог%')\n    AND i.country = 'Россия'\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    GROUP BY i.city, i.country\n),\neco_publications AS (\n    SELECT i.city, i.country, \n           COUNT(DISTINCT pub.publication_id) AS publications_count,\n           AVG(pub.impact_factor) AS avg_impact_factor\n    FROM Publications pub\n    JOIN Projects p ON pub.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (LOWER(pub.title) LIKE '%экологи%' OR LOWER(pub.title) LIKE '%климат%' OR LOWER(pub.title) LIKE '%эколог%')\n    AND i.country = 'Россия'\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    GROUP BY i.city, i.country\n),\neco_experiments AS (\n    SELECT i.city, i.country, COUNT(DISTINCT e.experiment_id) AS experiments_count\n    FROM Experiments e\n    JOIN Projects p ON e.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (LOWER(e.title) LIKE '%экологи%' OR LOWER(e.title) LIKE '%климат%' OR LOWER(e.title) LIKE '%эколог%')\n    AND i.country = 'Россия'\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    GROUP BY i.city, i.country\n),\neco_samples AS (\n    SELECT i.city, i.country, COUNT(DISTINCT s.sample_id) AS samples_count\n    FROM Samples s\n    JOIN Experiments e ON s.experiment_id = e.experiment_id\n    JOIN Projects p ON e.project_id = p.project_id\n    JOIN Departments d ON p.department_id = d.department_id\n    JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE (LOWER(e.title) LIKE '%экологи%' OR LOWER(e.title) LIKE '%климат%' OR LOWER(e.title) LIKE '%эколог%')\n    AND i.country = 'Россия'\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    GROUP BY i.city, i.country\n),\nregion_stats AS (\n    SELECT \n        COALESCE(i.city, 'Unknown') AS city,\n        COALESCE(i.country, 'Unknown') AS country,\n        COALESCE(i.institutions_count, 0) AS institutions_count,\n        COALESCE(p.projects_count, 0) AS projects_count,\n        COALESCE(p.total_budget, 0) AS total_budget,\n        COALESCE(pub.publications_count, 0) AS publications_count,\n        COALESCE(pub.avg_impact_factor, 0) AS avg_impact_factor,\n        COALESCE(e.experiments_count, 0) AS experiments_count,\n        COALESCE(s.samples_count, 0) AS samples_count\n    FROM eco_institutions i\n    FULL OUTER JOIN eco_projects p ON i.city = p.city AND i.country = p.country\n    FULL OUTER JOIN eco_publications pub ON i.city = pub.city AND i.country =",
            "gigachat_response": "WITH EcologicalProjects AS (\n    SELECT *\n    FROM Projects\n    WHERE LOWER(title) LIKE '%эколог%' OR LOWER(title) LIKE '%климат%'\n),\nEcologicalPublications AS (\n    SELECT *\n    FROM Publications\n    WHERE LOWER(title) LIKE '%эколог%' OR LOWER(title) LIKE '%климат%'\n),\nEcologicalExperiments AS (\n    SELECT *\n    FROM Experiments\n    WHERE LOWER(title) LIKE '%эколог%' OR LOWER(title) LIKE '%климат%'\n),\nInstitutionsByCountry AS (\n    SELECT institution_id, country\n    FROM Institutions\n    GROUP BY institution_id, country\n),\nNormalizedData AS (\n    SELECT \n        ic.country,\n        COUNT(DISTINCT ip.institution_id) AS institutions_count,\n        COUNT(DISTINCT ep.project_id) AS projects_count,\n        SUM(ep.budget) AS total_funding,\n        COUNT(DISTINCT epb.publication_id) AS publications_count,\n        AVG(CASE WHEN epb.impact_factor IS NULL THEN 0 ELSE epb.impact_factor END) AS average_impact_factor,\n        COUNT(DISTINCT ee.experiment_id) AS experiments_count,\n        COUNT(DISTINCT s.sample_id) AS samples_count\n    FROM InstitutionsByCountry ic\n    LEFT JOIN Departments dp ON ic.institution_id = dp.institution_id\n    LEFT JOIN EcologicalProjects ep ON dp.department_id = ep.department_id\n    LEFT JOIN EcologicalPublications epb ON ep.project_id = epb.project_id\n    LEFT JOIN EcologicalExperiments ee ON ep.project_id = ee.project_id\n    LEFT JOIN Samples s ON ee.experiment_id = s.experiment_id\n    GROUP BY ic.country\n),\nWeightedIndex AS (\n    SELECT \n        country,\n        ROUND(\n            ((institutions_count::FLOAT / MAX(institutions_count) OVER ()) * 0.1 +\n             (projects_count::FLOAT / MAX(projects_count) OVER ()) * 0.2 +\n             (total_funding::FLOAT / MAX(total_funding) OVER ()) * 0.1 +\n             (publications_count::FLOAT / MAX(publications_count) OVER ()) * 0.3 +\n             (average_impact_factor::FLOAT / MAX(average_impact_factor) OVER ()) * 0.1 +\n             (experiments_count::FLOAT / MAX(experiments_count) OVER ()) * 0.1 +\n             (samples_count::FLOAT / MAX(samples_count) OVER ()) * 0.1), 2\n        ) AS scientific_activity_index\n    FROM NormalizedData\n)\nSELECT country, scientific_activity_index\nFROM WeightedIndex\nWHERE country IN ('Россия') -- Filter only Russia regions\nORDER BY scientific_activity_index DESC\nLIMIT 15;",
            "gigachat_response_ru": "WITH EcologicalProjects AS (\n    SELECT *\n    FROM Projects\n    WHERE LOWER(title) LIKE '%эколог%' OR LOWER(title) LIKE '%климат%'\n),\nEcologicalPublications AS (\n    SELECT *\n    FROM Publications\n    WHERE LOWER(title) LIKE '%эколог%' OR LOWER(title) LIKE '%климат%'\n),\nEcologicalExperiments AS (\n    SELECT *\n    FROM Experiments\n    WHERE LOWER(title) LIKE '%эколог%' OR LOWER(title) LIKE '%климат%'\n),\nRegionalData AS (\n    SELECT \n        i.city AS region,\n        COUNT(DISTINCT i.institution_id) AS institutions_count,\n        COUNT(DISTINCT ep.project_id) AS projects_count,\n        SUM(ep.budget) AS total_funding,\n        COUNT(DISTINCT epb.publication_id) AS publications_count,\n        AVG(CASE WHEN epb.impact_factor IS NULL THEN 0 ELSE epb.impact_factor END) AS avg_impact_factor,\n        COUNT(DISTINCT ee.experiment_id) AS experiments_count,\n        COUNT(DISTINCT s.sample_id) AS samples_count\n    FROM Institutions i\n    LEFT JOIN Departments d ON i.institution_id = d.institution_id\n    LEFT JOIN EcologicalProjects ep ON d.department_id = ep.department_id\n    LEFT JOIN EcologicalPublications epb ON ep.project_id = epb.project_id\n    LEFT JOIN EcologicalExperiments ee ON ep.project_id = ee.project_id\n    LEFT JOIN Samples s ON ee.experiment_id = s.experiment_id\n    GROUP BY i.city\n),\nNormalizedData AS (\n    SELECT \n        region,\n        institutions_count / MAX(institutions_count) OVER () * 10 AS normalized_institutions,\n        projects_count / MAX(projects_count) OVER () * 20 AS normalized_projects,\n        total_funding / MAX(total_funding) OVER () * 10 AS normalized_funding,\n        publications_count / MAX(publications_count) OVER () * 30 AS normalized_publications,\n        avg_impact_factor / MAX(avg_impact_factor) OVER () * 10 AS normalized_avg_impact_factor,\n        experiments_count / MAX(experiments_count) OVER () * 10 AS normalized_experiments,\n        samples_count / MAX(samples_count) OVER () * 10 AS normalized_samples\n    FROM RegionalData\n)\nSELECT \n    region,\n    ROUND(normalized_institutions + normalized_projects + normalized_funding +\n          normalized_publications + normalized_avg_impact_factor +\n          normalized_experiments + normalized_samples, 2) AS scientific_activity_index\nFROM NormalizedData\nORDER BY scientific_activity_index DESC\nLIMIT 15;"
        },
        {
            "question": "Какие 8 исследователей имеют наибольшее количество экспериментов в статусе 'Завершено' с использованием оборудования стоимостью более 500000 рублей за последние 4 года? Включите информацию о количестве образцов, связанных с их экспериментами, и средней продолжительности экспериментов в днях. Отсортируйте результаты по количеству экспериментов в убывающем порядке.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.email,\n       COUNT(DISTINCT e.experiment_id) AS experiment_count,\n       COUNT(DISTINCT s.sample_id) AS sample_count,\n       AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration_days\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'Завершено'\nAND eq.cost > 500000\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.email\nORDER BY experiment_count DESC, sample_count DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT e.experiment_id) AS completed_experiments_count,\n       SUM(CASE WHEN s.sample_id IS NOT NULL THEN 1 ELSE 0 END) AS total_samples_count,\n       AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration_days\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'Завершено'\nAND eq.cost > 500000\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY completed_experiments_count DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT e.experiment_id) AS completed_experiments_count,\n       COUNT(DISTINCT s.sample_id) AS samples_count,\n       AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration_days\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'Завершено'\nAND eq.cost > 500000\nAND e.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY completed_experiments_count DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT e.experiment_id) AS total_experiments,\n    SUM(CASE WHEN s.sample_id IS NOT NULL THEN 1 ELSE 0 END) AS total_samples,\n    AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration\nFROM\n    Researchers r\nJOIN\n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN\n    Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN\n    Samples s ON e.experiment_id = s.experiment_id\nWHERE\n    e.status = 'Завершено'\n    AND eq.cost > 500000\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name\nORDER BY\n    total_experiments DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    COUNT(e.experiment_id) AS total_completed_experiments,\n    SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) AS completed_experiments,\n    SUM(CASE WHEN e.status = 'Завершено' THEN (SELECT COUNT(*) FROM Samples s WHERE s.experiment_id = e.experiment_id) ELSE 0 END) AS total_samples,\n    AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration_days\nFROM\n    Researchers r\nJOIN\n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN\n    Equipment eq ON e.equipment_id = eq.equipment_id\nWHERE\n    e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\n    AND eq.cost > 500000\n    AND e.status = 'Завершено'\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name\nORDER BY\n    completed_experiments DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT r.researcher_id, r.first_name, r.last_name, \n       COUNT(DISTINCT e.experiment_id) AS experiment_count,\n       SUM(s.quantity) AS total_samples,\n       AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'Завершено'\nAND eq.cost > 500000\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name\nORDER BY experiment_count DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n  r.researcher_id, \n  r.first_name, \n  r.last_name, \n  COUNT(DISTINCT e.experiment_id) AS experiments_count,\n  SUM(s.quantity) AS total_samples,\n  AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration\nFROM \n  Researchers r\nJOIN \n  Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN \n  Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN \n  Samples s ON e.experiment_id = s.experiment_id\nWHERE \n  e.status = 'Завершено' \n  AND eq.cost > 500000\n  AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n  r.researcher_id, r.first_name, r.last_name\nORDER BY \n  experiments_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT r.researcher_id, r.first_name, r.last_name, \n       COUNT(DISTINCT e.experiment_id) AS completed_experiments_count,\n       COUNT(s.sample_id) AS samples_count,\n       AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration_days\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'Завершено'\nAND eq.cost > 500000\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name\nORDER BY completed_experiments_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT e.experiment_id) AS completed_experiments_count,\n    COUNT(DISTINCT s.sample_id) AS samples_count,\n    AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_experiment_duration_days\nFROM \n    Researchers r\nJOIN \n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN \n    Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN \n    Samples s ON e.experiment_id = s.experiment_id\nWHERE \n    e.status = 'Завершено'\n    AND eq.cost > 500000\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nORDER BY \n    completed_experiments_count DESC\nLIMIT 8;",
            "gigachat_response": "SELECT re.researcher_id, re.first_name, re.last_name,\n       COUNT(DISTINCT ex.experiment_id) AS completed_experiments_count,\n       COUNT(s.sample_id) AS samples_count,\n       AVG(DATEDIFF(ex.end_date, ex.start_date)) AS average_experiment_duration_days\nFROM Researchers re\nJOIN Experiments ex ON re.researcher_id = ex.lead_researcher_id\nJOIN Equipment eq ON ex.equipment_id = eq.equipment_id\nLEFT JOIN Samples s ON ex.experiment_id = s.experiment_id\nWHERE ex.status = 'Завершено'\nAND eq.cost > 500000\nAND ex.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY re.researcher_id, re.first_name, re.last_name\nORDER BY completed_experiments_count DESC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    COUNT(DISTINCT e.experiment_id) AS completed_experiments_count,\n    COUNT(s.sample_id) AS samples_count,\n    AVG(DATEDIFF(e.end_date, e.start_date)) AS average_experiment_duration_days\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'Завершено'\nAND eq.cost > 500000\nAND e.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name\nORDER BY completed_experiments_count DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 5 отделов имеют наибольшее соотношение успешных патентов (статус 'Получен') к общему количеству проектов за последние 5 лет? Включите информацию о количестве исследователей в каждом отделе, общем бюджете проектов и среднем импакт-факторе связанных публикаций. Рассматривайте только отделы с не менее чем 3 патентами и 5 проектами.",
            "sql_query": "SELECT d.department_id, d.name, i.name AS institution_name,\n       COUNT(DISTINCT pat.patent_id) AS patents_count,\n       COUNT(DISTINCT p.project_id) AS projects_count,\n       (COUNT(DISTINCT pat.patent_id) * 1.0 / COUNT(DISTINCT p.project_id)) AS patent_to_project_ratio,\n       COUNT(DISTINCT r.researcher_id) AS researchers_count,\n       SUM(p.budget) AS total_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id AND pat.status = 'Получен'\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Researchers r ON d.head_id = r.researcher_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name, i.name\nHAVING COUNT(DISTINCT pat.patent_id) >= 3 AND COUNT(DISTINCT p.project_id) >= 5\nORDER BY patent_to_project_ratio DESC, total_budget DESC\nLIMIT 5;",
            "gpt-4o_response": "SELECT d.department_id, d.name AS department_name, \n       COUNT(DISTINCT r.researcher_id) AS number_of_researchers,\n       SUM(p.budget) AS total_project_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT pt.patent_id) AS successful_patents,\n       COUNT(DISTINCT pr.project_id) AS total_projects,\n       (COUNT(DISTINCT pt.patent_id) * 1.0 / COUNT(DISTINCT pr.project_id)) AS patent_to_project_ratio\nFROM Departments d\nJOIN Projects pr ON d.department_id = pr.department_id\nJOIN Researchers r ON d.department_id = r.researcher_id\nLEFT JOIN Patents pt ON pr.project_id = pt.project_id AND pt.status = 'Получен'\nLEFT JOIN Publications pub ON pr.project_id = pub.project_id\nWHERE pr.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name\nHAVING COUNT(DISTINCT pt.patent_id) >= 3\nAND COUNT(DISTINCT pr.project_id) >= 5\nORDER BY patent_to_project_ratio DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT d.department_id, d.name AS department_name, \n       COUNT(DISTINCT r.researcher_id) AS researcher_count,\n       SUM(p.budget) AS total_project_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       (COUNT(DISTINCT pt.patent_id) * 1.0 / COUNT(DISTINCT p.project_id)) AS patent_to_project_ratio\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Researchers r ON d.department_id = r.researcher_id\nLEFT JOIN Patents pt ON p.project_id = pt.project_id AND pt.status = 'Получен'\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name\nHAVING COUNT(DISTINCT pt.patent_id) >= 3\nAND COUNT(DISTINCT p.project_id) >= 5\nORDER BY patent_to_project_ratio DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    d.department_id,\n    d.name AS department_name,\n    COUNT(DISTINCT CASE WHEN pa.status = 'Получен' THEN pa.patent_id ELSE NULL END) AS successful_patents,\n    COUNT(DISTINCT p.project_id) AS total_projects,\n    COUNT(DISTINCT r.researcher_id) AS number_of_researchers,\n    SUM(p.budget) AS total_project_budget,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    (COUNT(DISTINCT CASE WHEN pa.status = 'Получен' THEN pa.patent_id ELSE NULL END) * 1.0 / COUNT(DISTINCT p.project_id)) AS patent_project_ratio\nFROM\n    Departments d\nJOIN\n    Projects p ON d.department_id = p.department_id\nLEFT JOIN\n    Patents pa ON p.project_id = pa.project_id\nLEFT JOIN\n    Researchers r ON d.department_id = p.department_id\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nWHERE\n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY\n    d.department_id, d.name\nHAVING\n    COUNT(DISTINCT CASE WHEN pa.status = 'Получен' THEN pa.patent_id ELSE NULL END) >= 3\n    AND COUNT(DISTINCT p.project_id) >= 5\nORDER BY\n    patent_project_ratio DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    d.department_id,\n    d.name AS department_name,\n    COUNT(DISTINCT r.researcher_id) AS number_of_researchers,\n    SUM(p.budget) AS total_project_budget,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    (SUM(CASE WHEN pat.status = 'Получен' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT p.project_id)) AS patent_project_ratio\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name\nHAVING COUNT(DISTINCT p.project_id) >= 5\n   AND SUM(CASE WHEN pat.status = 'Получен' THEN 1 ELSE 0 END) >= 3\nORDER BY patent_project_ratio DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    COUNT(DISTINCT p.project_id) AS total_projects, \n    SUM(CASE WHEN pat.status = 'Получен' THEN 1 ELSE 0 END) AS successful_patents, \n    SUM(CASE WHEN pat.status = 'Получен' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT p.project_id) AS patent_success_ratio, \n    COUNT(DISTINCT r.researcher_id) AS researchers_count, \n    SUM(p.budget) AS total_budget, \n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Departments d\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.department_id, d.name\nHAVING \n    COUNT(DISTINCT pat.patent_id) >= 3 AND COUNT(DISTINCT p.project_id) >= 5\nORDER BY \n    patent_success_ratio DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.name AS department_name, \n    COUNT(DISTINCT p.project_id) AS total_projects,\n    COUNT(DISTINCT pat.patent_id) AS successful_patents,\n    (COUNT(DISTINCT pat.patent_id) * 1.0 / COUNT(DISTINCT p.project_id)) AS patent_ratio,\n    d.number_of_staff AS researchers_count,\n    SUM(p.budget) AS total_budget,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Departments d\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id AND pat.status = 'Получен'\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.name, d.number_of_staff\nHAVING \n    COUNT(DISTINCT pat.patent_id) >= 3 AND COUNT(DISTINCT p.project_id) >= 5\nORDER BY \n    patent_ratio DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT d.department_id, d.name AS department_name, \n       COUNT(DISTINCT p.project_id) AS total_projects,\n       COUNT(DISTINCT CASE WHEN pat.status = 'Получен' THEN pat.patent_id END) AS successful_patents,\n       COUNT(DISTINCT CASE WHEN pat.status = 'Получен' THEN pat.patent_id END) * 1.0 / COUNT(DISTINCT p.project_id) AS patent_to_project_ratio,\n       d.number_of_staff AS researchers_count,\n       SUM(p.budget) AS total_projects_budget,\n       AVG(pub.impact_factor) AS avg_publication_impact_factor\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name, d.number_of_staff\nHAVING COUNT(DISTINCT pat.patent_id) >= 3 AND COUNT(DISTINCT p.project_id) >= 5\nORDER BY patent_to_project_ratio DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    d.number_of_staff AS researchers_count,\n    SUM(p.budget) AS total_projects_budget,\n    COUNT(DISTINCT pr.project_id) AS total_projects,\n    COUNT(DISTINCT CASE WHEN pt.status = 'Получен' THEN pt.patent_id END) AS successful_patents,\n    COUNT(DISTINCT CASE WHEN pt.status = 'Получен' THEN pt.patent_id END) * 1.0 / COUNT(DISTINCT pr.project_id) AS patents_to_projects_ratio,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Departments d\nJOIN \n    Projects pr ON d.department_id = pr.department_id\nLEFT JOIN \n    Patents pt ON pr.project_id = pt.project_id\nLEFT JOIN \n    Publications pub ON pr.project_id = pub.project_id\nWHERE \n    pr.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.department_id, d.name, d.number_of_staff\nHAVING \n    COUNT(DISTINCT pt.patent_id) >= 3 \n    AND COUNT(DISTINCT pr.project_id) >= 5\nORDER BY \n    patents_to_projects_ratio DESC\nLIMIT 5;",
            "gigachat_response": "WITH PatentSuccessRate AS (\n    SELECT \n        d.department_id,\n        COUNT(CASE WHEN pat.status = 'Получен' THEN 1 END) AS successful_patents,\n        COUNT(DISTINCT proj.project_id) AS total_projects\n    FROM Departments d\n    LEFT JOIN Projects proj ON d.department_id = proj.department_id\n    LEFT JOIN Patents pat ON proj.project_id = pat.project_id AND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    GROUP BY d.department_id\n    HAVING successful_patents >= 3 AND total_projects >= 5\n),\nDepartmentInfo AS (\n    SELECT \n        d.department_id,\n        d.name AS department_name,\n        COUNT(r.researcher_id) AS num_researchers,\n        SUM(proj.budget) AS total_project_budget,\n        AVG(pub.impact_factor) AS avg_impact_factor\n    FROM Departments d\n    LEFT JOIN Researchers r ON d.head_id = r.researcher_id\n    LEFT JOIN Projects proj ON d.department_id = proj.department_id\n    LEFT JOIN Publications pub ON proj.project_id = pub.project_id\n    WHERE proj.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    GROUP BY d.department_id, d.name\n)\nSELECT \n    di.department_id,\n    di.department_name,\n    psr.successful_patents,\n    psr.total_projects,\n    ROUND(psr.successful_patents * 1.0 / psr.total_projects, 2) AS success_rate,\n    di.num_researchers,\n    di.total_project_budget,\n    di.avg_impact_factor\nFROM DepartmentInfo di\nJOIN PatentSuccessRate psr ON di.department_id = psr.department_id\nORDER BY success_rate DESC\nLIMIT 5;",
            "gigachat_response_ru": "WITH PatentSuccessRate AS (\n    SELECT \n        d.department_id,\n        COUNT(CASE WHEN pat.status = 'Получен' THEN 1 END) AS successful_patents,\n        COUNT(*) AS total_projects\n    FROM Departments d\n    LEFT JOIN Projects prj ON d.department_id = prj.department_id\n    LEFT JOIN Patents pat ON prj.project_id = pat.project_id\n    WHERE prj.start_date >= DATE_SUB(NOW(), INTERVAL 5 YEAR)\n    GROUP BY d.department_id\n    HAVING successful_patents >= 3 AND total_projects >= 5\n),\nDepartmentInfo AS (\n    SELECT \n        di.department_id,\n        di.successful_patents,\n        di.total_projects,\n        ROUND(di.successful_patents * 1.0 / di.total_projects, 2) AS success_rate,\n        de.number_of_staff,\n        SUM(prj.budget) AS total_budget,\n        AVG(pub.impact_factor) AS average_impact_factor\n    FROM PatentSuccessRate di\n    INNER JOIN Departments de ON di.department_id = de.department_id\n    INNER JOIN Projects prj ON de.department_id = prj.department_id\n    LEFT JOIN Publications pub ON prj.project_id = pub.project_id\n    WHERE prj.start_date >= DATE_SUB(NOW(), INTERVAL 5 YEAR)\n    GROUP BY di.department_id, di.successful_patents, di.total_projects, de.number_of_staff\n)\nSELECT *\nFROM DepartmentInfo\nORDER BY success_rate DESC\nLIMIT 5;"
        },
        {
            "question": "Какие 12 проектов имеют наибольшее количество связанных датасетов со статусом 'Активный' и при этом не имеют ни одного образца в статусе 'Архивирован'? Включите информацию о руководителе проекта, финансирующем агентстве, общем количестве презентаций на конференциях и суммарном размере всех связанных датасетов. Отсортируйте результаты по количеству датасетов и общему размеру данных в убывающем порядке.",
            "sql_query": "SELECT p.project_id, p.title, p.budget, p.funding_agency, p.status,\n       r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT ds.dataset_id) AS datasets_count,\n       SUM(ds.size) AS total_data_size,\n       COUNT(DISTINCT pres.presentation_id) AS presentations_count\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nLEFT JOIN Presentations pres ON p.project_id = pres.project_id\nLEFT JOIN Experiments e ON p.project_id = e.project_id\nLEFT JOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE ds.status = 'Активный'\nAND p.project_id NOT IN (\n    SELECT DISTINCT e2.project_id\n    FROM Experiments e2\n    JOIN Samples s2 ON e2.experiment_id = s2.experiment_id\n    WHERE s2.status = 'Архивирован'\n)\nGROUP BY p.project_id, p.title, p.budget, p.funding_agency, p.status, r.first_name, r.last_name, r.position\nORDER BY datasets_count DESC, total_data_size DESC\nLIMIT 12;",
            "gpt-4o_response": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    r.first_name AS lead_first_name, \n    r.last_name AS lead_last_name, \n    p.funding_agency, \n    COUNT(DISTINCT ds.dataset_id) AS active_datasets_count, \n    SUM(ds.size) AS total_dataset_size, \n    COUNT(DISTINCT pres.presentation_id) AS total_presentations\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id AND ds.status = 'Активный'\nLEFT JOIN \n    Presentations pres ON p.project_id = pres.project_id\nLEFT JOIN \n    Samples s ON p.project_id = s.experiment_id\nWHERE \n    s.sample_id IS NULL OR s.status != 'Архивирован'\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY \n    active_datasets_count DESC, \n    total_dataset_size DESC\nLIMIT 12;",
            "gpt-4o_response_ru": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    p.funding_agency,\n    COUNT(DISTINCT ds.dataset_id) AS active_datasets_count,\n    COALESCE(SUM(ds.size), 0) AS total_datasets_size,\n    COUNT(DISTINCT pres.presentation_id) AS total_presentations\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN DataSets ds ON p.project_id = ds.project_id AND ds.status = 'Активный'\nLEFT JOIN Presentations pres ON p.project_id = pres.project_id\nLEFT JOIN Samples s ON p.project_id = s.experiment_id AND s.status = 'Архивирован'\nWHERE s.sample_id IS NULL\nGROUP BY p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY active_datasets_count DESC, total_datasets_size DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    r.first_name AS project_lead_first_name,\n    r.last_name AS project_lead_last_name,\n    p.funding_agency,\n    COUNT(DISTINCT ds.dataset_id) AS dataset_count,\n    SUM(ds.size) AS total_dataset_size,\n    COUNT(DISTINCT pre.presentation_id) AS presentation_count\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id AND ds.status = 'Активный'\nLEFT JOIN\n    Presentations pre ON p.project_id = pre.project_id\nLEFT JOIN\n    Samples s ON s.experiment_id IN (SELECT experiment_id FROM Experiments WHERE project_id = p.project_id)\nWHERE NOT EXISTS (SELECT 1 FROM Samples s2 INNER JOIN Experiments e ON s2.experiment_id = e.experiment_id WHERE e.project_id = p.project_id AND s2.status = 'Архивирован')\nGROUP BY\n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY\n    dataset_count DESC, total_dataset_size DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    r.first_name AS project_lead_first_name,\n    r.last_name AS project_lead_last_name,\n    p.funding_agency,\n    COUNT(DISTINCT ds.dataset_id) AS dataset_count,\n    SUM(ds.size) AS total_dataset_size,\n    COUNT(DISTINCT pr.presentation_id) AS presentation_count\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id AND ds.status = 'Активный'\nLEFT JOIN\n    Presentations pr ON p.project_id = pr.project_id\nWHERE\n    NOT EXISTS (\n        SELECT 1\n        FROM Samples s\n        JOIN Experiments e ON s.experiment_id = e.experiment_id\n        WHERE e.project_id = p.project_id AND s.status = 'Архивирован'\n    )\nGROUP BY\n    p.project_id,\n    p.title,\n    r.first_name,\n    r.last_name,\n    p.funding_agency\nORDER BY\n    dataset_count DESC,\n    total_dataset_size DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.project_id, p.title, r.first_name, r.last_name, p.funding_agency, \n       COUNT(DISTINCT ds.dataset_id) AS datasets_count, \n       SUM(ds.size) AS total_data_size, \n       (SELECT COUNT(*) FROM Presentations pr WHERE pr.project_id = p.project_id) AS presentations_count\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE ds.status = 'Активный'\nAND p.project_id NOT IN (SELECT e.project_id FROM Experiments e JOIN Samples s ON e.experiment_id = s.experiment_id WHERE s.status = 'Архивирован')\nGROUP BY p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY datasets_count DESC, total_data_size DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.project_id, \n    p.title, \n    r.first_name, \n    r.last_name, \n    p.funding_agency, \n    COUNT(DISTINCT ds.dataset_id) AS dataset_count, \n    SUM(ds.size) AS total_dataset_size,\n    COUNT(DISTINCT pr.presentation_id) AS presentation_count\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    DataSets ds ON p.project_id = ds.project_id\nLEFT JOIN \n    Presentations pr ON p.project_id = pr.project_id\nWHERE \n    ds.status = 'Активный'\n    AND p.project_id NOT IN (\n        SELECT \n            e.project_id \n        FROM \n            Experiments e\n        JOIN \n            Samples s ON e.experiment_id = s.experiment_id\n        WHERE \n            s.status = 'Архивирован'\n    )\nGROUP BY \n    p.project_id, \n    p.title, \n    r.first_name, \n    r.last_name, \n    p.funding_agency\nORDER BY \n    dataset_count DESC, \n    total_dataset_size DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    p.funding_agency,\n    COUNT(DISTINCT ds.dataset_id) AS active_datasets_count,\n    COALESCE(SUM(ds.size), 0) AS total_datasets_size,\n    COUNT(DISTINCT pr.presentation_id) AS total_presentations\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id AND ds.status = 'Активный'\nLEFT JOIN \n    Presentations pr ON p.project_id = pr.project_id\nWHERE \n    NOT EXISTS (\n        SELECT 1 \n        FROM Experiments e\n        JOIN Samples s ON e.experiment_id = s.experiment_id\n        WHERE e.project_id = p.project_id AND s.status = 'Архивирован'\n    )\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nHAVING \n    COUNT(DISTINCT ds.dataset_id) > 0\nORDER BY \n    active_datasets_count DESC, total_datasets_size DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    p.funding_agency,\n    COUNT(DISTINCT ds.dataset_id) AS datasets_count,\n    COUNT(DISTINCT pr.presentation_id) AS presentations_count,\n    SUM(ds.size) AS total_datasets_size\nFROM \n    Projects p\nJOIN \n    DataSets ds ON p.project_id = ds.project_id AND ds.status = 'Активный'\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n    Presentations pr ON p.project_id = pr.project_id\nWHERE \n    NOT EXISTS (\n        SELECT 1 \n        FROM Samples s \n        JOIN Experiments e ON s.experiment_id = e.experiment_id \n        WHERE e.project_id = p.project_id AND s.status = 'Архивирован'\n    )\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY \n    datasets_count DESC, total_datasets_size DESC\nLIMIT 12;",
            "gigachat_response": "SELECT pr.project_id, pr.title AS project_title, rl.first_name || ' ' || rl.last_name AS project_leader,\n       pr.funding_agency, COUNT(ds.dataset_id) AS active_datasets_count,\n       SUM(ds.size) AS total_dataset_size,\n       COUNT(prs.presentation_id) AS presentations_count\nFROM Projects pr\nJOIN Researchers rl ON pr.project_lead_id = rl.researcher_id\nLEFT JOIN DataSets ds ON pr.project_id = ds.project_id AND ds.status = 'Активный'\nLEFT JOIN Samples sm ON pr.project_id IN (SELECT project_id FROM Experiments WHERE experiment_id = sm.experiment_id)\nLEFT JOIN Presentations prs ON pr.project_id = prs.project_id\nWHERE NOT EXISTS(\n   SELECT *\n   FROM Samples smp\n   INNER JOIN Experiments exp ON smp.experiment_id = exp.experiment_id\n   WHERE exp.project_id = pr.project_id AND smp.`status` = 'Архивирован'\n)\nGROUP BY pr.project_id, pr.title, rl.first_name, rl.last_name, pr.funding_agency\nHAVING COUNT(ds.dataset_id) > 0\nORDER BY active_datasets_count DESC, total_dataset_size DESC\nLIMIT 12;",
            "gigachat_response_ru": "SELECT pr.project_id, pr.title AS project_title, CONCAT(r.first_name, ' ', r.last_name) AS project_leader,\n       pr.funding_agency, COUNT(ds.dataset_id) AS active_datasets_count,\n       SUM(ds.size) AS total_dataset_size,\n       COUNT(prs.presentation_id) AS presentations_count\nFROM Projects pr\nJOIN Researchers r ON pr.project_lead_id = r.researcher_id\nJOIN DataSets ds ON pr.project_id = ds.project_id AND ds.status = 'Активный'\nLEFT JOIN Samples s ON pr.project_id = s.experiment_id\nLEFT JOIN Presentations prs ON pr.project_id = prs.project_id\nWHERE NOT EXISTS(\n    SELECT *\n    FROM Samples smpl\n    WHERE smpl.experiment_id IN (SELECT expt.experiment_id FROM Experiments expt WHERE expt.project_id = pr.project_id)\n      AND smpl.`status` = 'Архивирован'\n)\nGROUP BY pr.project_id, pr.title, r.first_name, r.last_name, pr.funding_agency\nORDER BY active_datasets_count DESC, total_dataset_size DESC\nLIMIT 12;"
        },
        {
            "question": "Какие 9 исследователей получили наибольшее количество грантов в статусе 'Активный' с общей суммой финансирования более 10000000 рублей за последние 3 года? Включите информацию о количестве их публикаций, среднем импакт-факторе этих публикаций и всех учреждениях, с которыми они сотрудничали. Отсортируйте результаты по общей сумме грантов в убывающем порядке.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.nationality,\n       COUNT(DISTINCT g.grant_id) AS grants_count,\n       SUM(g.amount) AS total_grant_amount,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       GROUP_CONCAT(DISTINCT i.name ORDER BY i.name SEPARATOR ', ') AS collaborating_institutions\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Grants g ON p.project_id = g.project_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Collaborations c ON p.project_id = c.project_id\nLEFT JOIN Institutions i ON c.institution_id = i.institution_id\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nHAVING SUM(g.amount) > 10000000\nORDER BY total_grant_amount DESC\nLIMIT 9;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT g.grant_id) AS active_grants_count,\n       SUM(g.amount) AS total_grant_amount,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       GROUP_CONCAT(DISTINCT i.name ORDER BY i.name ASC SEPARATOR ', ') AS institutions_collaborated\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Grants g ON p.project_id = g.project_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Collaborations c ON p.project_id = c.project_id\nLEFT JOIN Institutions i ON c.institution_id = i.institution_id\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nHAVING total_grant_amount > 10000000\nORDER BY total_grant_amount DESC\nLIMIT 9;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT g.grant_id) AS active_grants_count,\n       SUM(g.amount) AS total_grant_amount,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       GROUP_CONCAT(DISTINCT i.name ORDER BY i.name ASC SEPARATOR ', ') AS institutions_collaborated\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Grants g ON p.project_id = g.project_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Collaborations c ON p.project_id = c.project_id\nLEFT JOIN Institutions i ON c.institution_id = i.institution_id\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nHAVING total_grant_amount > 10000000\nORDER BY total_grant_amount DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT g.grant_id) AS total_active_grants,\n    SUM(g.amount) AS total_grant_amount,\n    COUNT(DISTINCT pub.publication_id) AS total_publications,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    GROUP_CONCAT(DISTINCT i.name) AS collaborating_institutions\nFROM\n    Researchers r\nJOIN\n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN\n    Grants g ON p.project_id = g.project_id\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    Collaborations c ON p.project_id = c.project_id\nLEFT JOIN\n    Institutions i ON c.institution_id = i.institution_id\nWHERE\n    g.status = 'Активный'\n    AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name\nHAVING\n    SUM(g.amount) > 10000000\nORDER BY\n    total_grant_amount DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT g.grant_id) AS total_active_grants,\n    SUM(g.amount) AS total_grant_amount,\n    COUNT(DISTINCT pub.publication_id) AS total_publications,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    GROUP_CONCAT(DISTINCT i.name) AS collaborating_institutions\nFROM\n    Researchers r\nJOIN\n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN\n    Grants g ON p.project_id = g.project_id AND g.status = 'Активный' AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    Collaborations c ON p.project_id = c.project_id\nLEFT JOIN\n    Institutions i ON c.institution_id = i.institution_id\nWHERE g.status = 'Активный' AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name\nHAVING\n    SUM(g.amount) > 10000000\nORDER BY\n    total_grant_amount DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT g.grant_id) AS grants_count,\n       SUM(g.amount) AS total_grant_amount,\n       COUNT(DISTINCT p.publication_id) AS publications_count,\n       AVG(p.impact_factor) AS avg_impact_factor,\n       GROUP_CONCAT(DISTINCT i.name) AS institutions_involved\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Grants g ON p.project_id = g.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN Publications p ON p.project_id = g.project_id\nWHERE g.status = 'Активный'\nAND g.amount > 10000000\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY total_grant_amount DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    COUNT(DISTINCT g.grant_id) AS grants_count,\n    SUM(g.amount) AS total_grant_amount,\n    COUNT(DISTINCT p.publication_id) AS publications_count,\n    AVG(p.impact_factor) AS avg_impact_factor,\n    GROUP_CONCAT(DISTINCT i.name) AS institutions\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Grants g ON p.project_id = g.project_id\nJOIN \n    Collaborations c ON p.project_id = c.project_id\nJOIN \n    Institutions i ON c.institution_id = i.institution_id\nLEFT JOIN \n    Publications p ON p.project_id = g.project_id\nWHERE \n    g.status = 'Активный' \n    AND g.amount > 10000000 \n    AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nORDER BY \n    total_grant_amount DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT g.grant_id) AS grants_count,\n    SUM(g.amount) AS total_grants_amount,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    GROUP_CONCAT(DISTINCT i.name SEPARATOR ', ') AS collaborating_institutions\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Grants g ON p.project_id = g.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Collaborations c ON p.project_id = c.project_id\nLEFT JOIN \n    Institutions i ON c.institution_id = i.institution_id\nWHERE \n    g.status = 'Активный'\n    AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nHAVING \n    SUM(g.amount) > 10000000\nORDER BY \n    total_grants_amount DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    COUNT(DISTINCT g.grant_id) AS total_grants,\n    SUM(g.amount) AS total_funding,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    GROUP_CONCAT(DISTINCT i.name ORDER BY i.name ASC SEPARATOR ', ') AS collaborating_institutions\nFROM \n    Researchers r\nJOIN \n    Grants g ON r.researcher_id = g.project_id\nJOIN \n    Projects p ON g.project_id = p.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Collaborations col ON p.project_id = col.project_id\nLEFT JOIN \n    Institutions i ON col.institution_id = i.institution_id\nWHERE \n    g.status = 'Активный'\n    AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nHAVING \n    total_funding > 10000000\nORDER BY \n    total_funding DESC\nLIMIT 9;",
            "gigachat_response": "WITH ActiveGrants AS (\n    SELECT g.grant_id, g.amount, g.project_id, g.project_lead_id\n    FROM Grants g\n    WHERE g.status = 'Активный'\n      AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n      AND g.amount > 10000000\n),\nResearcherPublications AS (\n    SELECT p.project_lead_id, COUNT(*) AS publication_count, AVG(pub.impact_factor) AS avg_impact_factor\n    FROM Projects p\n    LEFT JOIN Publications pub ON p.project_id = pub.project_id\n    GROUP BY p.project_lead_id\n),\nCollaboratingInstitutions AS (\n    SELECT DISTINCT c.project_lead_id, i.name AS institution_name\n    FROM Collaborations c\n    JOIN Institutions i ON c.institution_id = i.institution_id\n)\nSELECT rg.project_lead_id, r.first_name, r.last_name, r.email,\n       SUM(rg.amount) AS total_grant_amount,\n       rp.publication_count, rp.avg_impact_factor,\n       STRING_AGG(ci.institution_name, ', ') AS collaborating_institutions\nFROM ActiveGrants rg\nJOIN Researchers r ON rg.project_lead_id = r.researcher_id\nLEFT JOIN ResearcherPublications rp ON rg.project_lead_id = rp.project_lead_id\nLEFT JOIN CollaboratingInstitutions ci ON rg.project_lead_id = ci.project_lead_id\nGROUP BY rg.project_lead_id, r.first_name, r.last_name, r.email, rp.publication_count, rp.avg_impact_factor\nORDER BY total_grant_amount DESC\nLIMIT 9;",
            "gigachat_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    COUNT(g.grant_id) AS grants_count, \n    SUM(g.amount) AS total_grant_amount, \n    COUNT(DISTINCT pub.publication_id) AS publications_count, \n    AVG(pub.impact_factor) AS average_impact_factor,\n    GROUP_CONCAT(i.name SEPARATOR ', ') AS collaborating_institutions\nFROM \n    Researchers r\nJOIN \n    Grants g ON r.researcher_id = g.project_id AND g.status = 'Активный'\nJOIN \n    Projects p ON g.project_id = p.project_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nJOIN \n    Collaborations col ON p.project_id = col.project_id\nJOIN \n    Institutions i ON col.institution_id = i.institution_id\nWHERE \n    g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nHAVING \n    SUM(g.amount) > 10000000\nORDER BY \n    total_grant_amount DESC\nLIMIT 9;"
        },
        {
            "question": "Какие 15 учреждений имеют наибольшую 'эффективность исследований', рассчитанную как отношение общего количества публикаций к количеству исследователей за последние 3 года? Учитывайте только учреждения со средним импакт-фактором публикаций выше 3.0 и с не менее чем 5 исследователями. Включите информацию о стране, городе, году основания и общем бюджете проектов. Отсортируйте результаты по коэффициенту эффективности и среднему импакт-фактору в убывающем порядке.",
            "sql_query": "SELECT i.institution_id, i.name, i.country, i.city, i.established_year, i.type,\n       COUNT(DISTINCT r.researcher_id) AS researcher_count,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS research_efficiency,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       SUM(p.budget) AS total_project_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.country, i.city, i.established_year, i.type\nHAVING COUNT(DISTINCT r.researcher_id) >= 5 AND AVG(pub.impact_factor) > 3.0\nORDER BY research_efficiency DESC, avg_impact_factor DESC\nLIMIT 15;",
            "gpt-4o_response": "SELECT i.institution_id, i.name AS institution_name, i.country, i.city, i.established_year,\n       COUNT(DISTINCT pub.publication_id) / COUNT(DISTINCT r.researcher_id) AS research_efficiency,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       SUM(p.budget) AS total_project_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Researchers r ON d.department_id = r.researcher_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING AVG(pub.impact_factor) > 3.0\nAND COUNT(DISTINCT r.researcher_id) >= 5\nORDER BY research_efficiency DESC, avg_impact_factor DESC\nLIMIT 15;",
            "gpt-4o_response_ru": "SELECT i.institution_id, i.name AS institution_name, i.country, i.city, i.established_year,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS research_efficiency,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       SUM(p.budget) AS total_project_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Researchers r ON d.department_id = r.researcher_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING AVG(pub.impact_factor) > 3.0\nAND COUNT(DISTINCT r.researcher_id) >= 5\nORDER BY research_efficiency DESC, avg_impact_factor DESC\nLIMIT 15;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    i.institution_id,\n    i.name AS institution_name,\n    i.country,\n    i.city,\n    i.established_year,\n    SUM(p.budget) AS total_project_budget,\n    COUNT(DISTINCT pub.publication_id) AS total_publications,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS research_efficiency,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Projects p ON d.department_id = p.department_id\nJOIN\n    Publications pub ON p.project_id = pub.project_id\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nWHERE\n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING\n    AVG(pub.impact_factor) > 3.0\n    AND COUNT(DISTINCT r.researcher_id) >= 5\nORDER BY\n    research_efficiency DESC,\n    avg_impact_factor DESC\nLIMIT 15;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    i.name AS institution_name,\n    i.country,\n    i.city,\n    i.established_year,\n    SUM(p.budget) AS total_project_budget,\n    (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS research_efficiency,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT pub.publication_id) AS total_publications,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Projects p ON d.department_id = p.department_id\nJOIN\n    Publications pub ON p.project_id = pub.project_id\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nWHERE\n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING\n    AVG(pub.impact_factor) > 3.0\n    AND COUNT(DISTINCT r.researcher_id) >= 5\nORDER BY\n    research_efficiency DESC,\n    avg_impact_factor DESC\nLIMIT 15;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT i.institution_id, i.name, i.country, i.city, i.established_year, \n       SUM(p.budget) AS total_budget, \n       COUNT(DISTINCT pub.publication_id) AS publications_count, \n       COUNT(DISTINCT r.researcher_id) AS researchers_count, \n       (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS research_efficiency,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Publications pub ON p.project_id = pub.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING COUNT(DISTINCT r.researcher_id) >= 5\nAND AVG(pub.impact_factor) > 3.0\nORDER BY research_efficiency DESC, avg_impact_factor DESC\nLIMIT 15;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT i.institution_id, i.name, i.country, i.city, i.established_year, \n       SUM(p.budget) AS total_budget, \n       COUNT(DISTINCT r.researcher_id) AS researchers_count, \n       COUNT(DISTINCT pub.publication_id) AS publications_count, \n       AVG(pub.impact_factor) AS avg_impact_factor,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS research_efficiency\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pub.impact_factor > 3.0\nGROUP BY i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING COUNT(DISTINCT r.researcher_id) >= 5\nORDER BY research_efficiency DESC, avg_impact_factor DESC\nLIMIT 15;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    i.institution_id,\n    i.name AS institution_name,\n    i.country,\n    i.city,\n    i.established_year,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    SUM(p.budget) AS total_budget,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT r.researcher_id) AS researcher_count,\n    COUNT(DISTINCT pub.publication_id) / COUNT(DISTINCT r.researcher_id) AS research_efficiency,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nWHERE \n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING \n    AVG(pub.impact_factor) > 3.0\n    AND COUNT(DISTINCT r.researcher_id) >= 5\nORDER BY \n    research_efficiency DESC,\n    avg_impact_factor DESC\nLIMIT 15;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    i.institution_id,\n    i.name AS institution_name,\n    i.country,\n    i.city,\n    i.established_year,\n    COUNT(DISTINCT p.publication_id) AS total_publications,\n    COUNT(DISTINCT r.researcher_id) AS total_researchers,\n    COUNT(DISTINCT p.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id) AS research_efficiency,\n    AVG(p.impact_factor) AS avg_impact_factor,\n    SUM(pr.budget) AS total_project_budget\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Projects pr ON d.department_id = pr.department_id\nJOIN \n    Publications p ON pr.project_id = p.project_id\nJOIN \n    Researchers r ON pr.project_lead_id = r.researcher_id\nWHERE \n    p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING \n    AVG(p.impact_factor) > 3.0\n    AND COUNT(DISTINCT r.researcher_id) >= 5\nORDER BY \n    research_efficiency DESC,\n    avg_impact_factor DESC\nLIMIT 15;",
            "gigachat_response": "WITH InstitutionResearchers AS (\n    SELECT \n        d.institution_id,\n        COUNT(r.researcher_id) AS num_researchers\n    FROM Departments d\n    JOIN Researchers r ON d.head_id = r.researcher_id\n    GROUP BY d.institution_id\n),\nInstitutionPublications AS (\n    SELECT \n        i.institution_id,\n        COUNT(DISTINCT pub.publication_id) AS num_publications,\n        AVG(pub.impact_factor) AS avg_impact_factor\n    FROM Institutions i\n    JOIN Departments d ON i.institution_id = d.institution_id\n    JOIN Projects p ON d.department_id = p.department_id\n    JOIN Publications pub ON p.project_id = pub.project_id\n    WHERE pub.publication_date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) AND CURRENT_DATE\n    GROUP BY i.institution_id\n),\nProjectBudgets AS (\n    SELECT \n        i.institution_id,\n        SUM(p.budget) AS total_project_budget\n    FROM Institutions i\n    JOIN Departments d ON i.institution_id = d.institution_id\n    JOIN Projects p ON d.department_id = p.department_id\n    GROUP BY i.institution_id\n)\nSELECT \n    i.institution_id,\n    i.name AS institution_name,\n    i.country,\n    i.city,\n    i.established_year,\n    pr.total_project_budget,\n    ir.num_researchers,\n    ip.num_publications,\n    ROUND(ip.avg_impact_factor, 2) AS avg_impact_factor,\n    CASE WHEN ir.num_researchers != 0 THEN ROUND((ip.num_publications * 1.0 / ir.num_researchers), 2) ELSE NULL END AS efficiency_coefficient\nFROM Institutions i\nJOIN ProjectBudgets pr ON i.institution_id = pr.institution_id\nJOIN InstitutionResearchers ir ON i.institution_id = ir.institution_id\nJOIN InstitutionPublications ip ON i.institution_id = ip.institution_id\nWHERE ip.avg_impact_factor > 3.0\nAND ir.num_researchers >= 5\nORDER BY efficiency_coefficient DESC, avg_impact_factor DESC\nLIMIT 15;",
            "gigachat_response_ru": "SELECT \n    i.institution_id,\n    i.name AS institution_name,\n    i.country,\n    i.city,\n    i.established_year,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT r.researcher_id) AS researcher_count,\n    ROUND(SUM(p.budget), 2) AS total_project_budget,\n    ROUND(AVG(pub.impact_factor), 2) AS average_impact_factor,\n    ROUND((COUNT(DISTINCT pub.publication_id) * 1.0 / COUNT(DISTINCT r.researcher_id)), 2) AS efficiency_coefficient\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Researchers r ON d.department_id = r.head_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date BETWEEN DATE_SUB(NOW(), INTERVAL 3 YEAR) AND NOW()\nGROUP BY i.institution_id, i.name, i.country, i.city, i.established_year\nHAVING average_impact_factor > 3.0\nAND researcher_count >= 5\nORDER BY efficiency_coefficient DESC, average_impact_factor DESC\nLIMIT 15;"
        },
        {
            "question": "Какие 11 исследователей моложе 40 лет имеют наибольшее соотношение количества презентаций к количеству проектов за последние 2 года? Включите информацию о количестве публикаций, среднем импакт-факторе, количестве патентов и учреждении, в котором они работают. Рассматривайте только исследователей, у которых есть хотя бы одна публикация с импакт-фактором выше 4.0 и хотя бы один патент со статусом 'Получен'. Отсортируйте результаты по соотношению презентаций к проектам в убывающем порядке.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.gender, r.nationality,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n       COUNT(DISTINCT pres.presentation_id) AS presentations_count,\n       COUNT(DISTINCT p.project_id) AS projects_count,\n       (COUNT(DISTINCT pres.presentation_id) * 1.0 / COUNT(DISTINCT p.project_id)) AS presentation_to_project_ratio,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT pat.patent_id) AS patents_count,\n       i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Presentations pres ON p.project_id = pres.project_id\nJOIN Publications pub ON p.project_id = pub.project_id\nJOIN Patents pat ON p.project_id = pat.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nWHERE TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 40\nAND pres.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND pat.status = 'Получен'\nAND r.researcher_id IN (\n    SELECT DISTINCT r2.researcher_id\n    FROM Researchers r2\n    JOIN Projects p2 ON r2.researcher_id = p2.project_lead_id\n    JOIN Publications pub2 ON p2.project_id = pub2.project_id\n    WHERE pub2.impact_factor > 4.0\n)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.gender, r.nationality, r.birth_date, i.name\nHAVING COUNT(DISTINCT p.project_id) > 0\nORDER BY presentation_to_project_ratio DESC\nLIMIT 11;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pres.presentation_id) AS presentation_count,\n       COUNT(DISTINCT proj.project_id) AS project_count,\n       (COUNT(DISTINCT pres.presentation_id) * 1.0 / COUNT(DISTINCT proj.project_id)) AS presentation_to_project_ratio,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT pat.patent_id) AS patent_count,\n       inst.name AS institution_name\nFROM Researchers r\nJOIN Projects proj ON r.researcher_id = proj.project_lead_id\nJOIN Departments dept ON proj.department_id = dept.department_id\nJOIN Institutions inst ON dept.institution_id = inst.institution_id\nLEFT JOIN Presentations pres ON r.researcher_id = pres.presenter_id AND pres.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nLEFT JOIN Publications pub ON proj.project_id = pub.project_id AND pub.impact_factor > 4.0\nLEFT JOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.status = 'Получен'\nWHERE TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 40\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, inst.name\nHAVING COUNT(DISTINCT pub.publication_id) > 0\nAND COUNT(DISTINCT pat.patent_id) > 0\nORDER BY presentation_to_project_ratio DESC\nLIMIT 11;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pres.presentation_id) / NULLIF(COUNT(DISTINCT proj.project_id), 0) AS presentation_to_project_ratio,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT pat.patent_id) AS patent_count,\n       inst.name AS institution_name\nFROM Researchers r\nJOIN Projects proj ON r.researcher_id = proj.project_lead_id\nJOIN Departments dept ON proj.department_id = dept.department_id\nJOIN Institutions inst ON dept.institution_id = inst.institution_id\nLEFT JOIN Presentations pres ON r.researcher_id = pres.presenter_id AND pres.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nLEFT JOIN Publications pub ON proj.project_id = pub.project_id AND pub.impact_factor > 4.0\nLEFT JOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.status = 'Получен'\nWHERE TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 40\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, inst.name\nHAVING COUNT(DISTINCT pub.publication_id) > 0\nAND COUNT(DISTINCT pat.patent_id) > 0\nORDER BY presentation_to_project_ratio DESC\nLIMIT 11;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    (YEAR(CURDATE()) - YEAR(r.birth_date)) AS age,\n    (COUNT(DISTINCT pr.presentation_id) / COUNT(DISTINCT p.project_id)) AS presentation_to_project_ratio,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    COUNT(DISTINCT pat.patent_id) AS patent_count,\n    i.name AS institution_name\nFROM\n    Researchers r\nJOIN\n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN\n    Presentations pr ON r.researcher_id = pr.presenter_id AND pr.date >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    Patents pat ON r.researcher_id = pat.inventor_id\nJOIN\n    Departments d ON p.department_id = d.department_id\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nWHERE\n    (YEAR(CURDATE()) - YEAR(r.birth_date)) < 40\n    AND EXISTS (\n        SELECT 1\n        FROM Publications sub_pub\n        WHERE sub_pub.project_id = p.project_id AND sub_pub.impact_factor > 4.0\n    )\n    AND EXISTS (\n        SELECT 1\n        FROM Patents sub_pat\n        WHERE sub_pat.inventor_id = r.researcher_id AND sub_pat.status = 'Получен'\n    )\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.birth_date, i.name\nORDER BY\n    presentation_to_project_ratio DESC\nLIMIT 11;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.first_name,\n    r.last_name,\n    (COUNT(DISTINCT pr.presentation_id) * 1.0 / COUNT(DISTINCT p.project_id)) AS presentation_to_project_ratio,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT pat.patent_id) AS patent_count,\n    i.name AS institution_name\nFROM\n    Researchers r\nJOIN\n    Departments d ON r.researcher_id = d.head_id\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN\n    Presentations pr ON r.researcher_id = pr.presenter_id AND pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nLEFT JOIN\n    Projects p ON pr.project_id = p.project_id\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id AND pub.impact_factor > 4.0\nLEFT JOIN\n    Patents pat ON r.researcher_id = pat.inventor_id AND pat.status = 'Получен'\nWHERE\n    TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE()) < 40\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, i.name\nHAVING\n    COUNT(DISTINCT pub.publication_id) > 0 AND COUNT(DISTINCT pat.patent_id) > 0\nORDER BY\n    presentation_to_project_ratio DESC\nLIMIT 11;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n  r.researcher_id, \n  r.first_name, \n  r.last_name, \n  r.position, \n  r.institution_id, \n  i.name AS institution_name,\n  COUNT(DISTINCT pr.project_id) AS project_count,\n  COUNT(DISTINCT pres.presentation_id) AS presentation_count,\n  (COUNT(DISTINCT pres.presentation_id) * 1.0 / COUNT(DISTINCT pr.project_id)) AS presentation_to_project_ratio,\n  COUNT(DISTINCT pub.publication_id) AS publication_count,\n  AVG(pub.impact_factor) AS avg_impact_factor,\n  COUNT(DISTINCT pat.patent_id) AS patent_count\nFROM \n  Researchers r\n  JOIN Institutions i ON r.institution_id = i.institution_id\n  LEFT JOIN Projects pr ON r.researcher_id = pr.project_lead_id\n  LEFT JOIN Presentations pres ON pr.project_id = pres.project_id\n  LEFT JOIN Publications pub ON pr.project_id = pub.project_id\n  LEFT JOIN Patents pat ON pr.project_id = pat.project_id\nWHERE \n  TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 40\n  AND pub.impact_factor > 4.0\n  AND pat.status = 'Получен'\n  AND pr.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n  r.researcher_id, \n  r.first_name, \n  r.last_name, \n  r.position, \n  r.institution_id, \n  i.name\nORDER BY \n  presentation_to_project_ratio DESC\nLIMIT 11;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.institution_id,\n    i.name AS institution_name,\n    COUNT(DISTINCT pr.presentation_id) AS presentations_count,\n    COUNT(DISTINCT p.project_id) AS projects_count,\n    (COUNT(DISTINCT pr.presentation_id) * 1.0 / COUNT(DISTINCT p.project_id)) AS presentation_to_project_ratio,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT pat.patent_id) AS patents_count\nFROM \n    Researchers r\nJOIN \n    Institutions i ON r.institution_id = i.institution_id\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN \n    Presentations pr ON p.project_id = pr.project_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id\nWHERE \n    TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 40\nAND \n    pub.impact_factor > 4.0\nAND \n    pat.status = 'Получен'\nAND \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.institution_id,\n    i.name\nORDER BY \n    presentation_to_project_ratio DESC\nLIMIT 11;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT r.researcher_id, r.first_name, r.last_name, \n       COUNT(DISTINCT pr.presentation_id) AS presentations_count,\n       COUNT(DISTINCT p.project_id) AS projects_count,\n       CASE \n           WHEN COUNT(DISTINCT p.project_id) = 0 THEN 0\n           ELSE COUNT(DISTINCT pr.presentation_id) * 1.0 / COUNT(DISTINCT p.project_id)\n       END AS presentations_to_projects_ratio,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT pat.patent_id) AS patents_count,\n       i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id OR EXISTS (\n    SELECT 1 FROM Experiments e WHERE e.project_id = p.project_id AND e.lead_researcher_id = r.researcher_id\n)\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN Presentations pr ON pr.presenter_id = r.researcher_id AND pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nLEFT JOIN Publications pub ON pub.project_id = p.project_id\nLEFT JOIN Patents pat ON pat.project_id = p.project_id AND pat.inventor_id = r.researcher_id AND pat.status = 'Получен'\nWHERE TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 40\nAND pub.impact_factor > 4.0\nAND EXISTS (\n    SELECT 1 FROM Patents pat2 WHERE pat2.inventor_id = r.researcher_id AND pat2.status = 'Получен'\n)\nGROUP BY r.researcher_id, r.first_name, r.last_name, i.name\nHAVING COUNT(DISTINCT pub.publication_id) > 0 AND COUNT(DISTINCT pat.patent_id) > 0\nORDER BY presentations_to_projects_ratio DESC\nLIMIT 11;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT pr.presentation_id) / COUNT(DISTINCT p.project_id) AS presentations_to_projects_ratio,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    i.name AS institution_name\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Presentations pr ON pr.presenter_id = r.researcher_id\nJOIN \n    Publications pub ON pub.project_id = p.project_id\nJOIN \n    Patents pat ON pat.inventor_id = r.researcher_id\nWHERE \n    TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 40\n    AND pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND pub.impact_factor > 4.0\n    AND pat.status = 'Получен'\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, i.name\nHAVING \n    COUNT(DISTINCT pub.publication_id) > 0\n    AND COUNT(DISTINCT pat.patent_id) > 0\nORDER BY \n    presentations_to_projects_ratio DESC\nLIMIT 11;",
            "gigachat_response": "WITH PresentationProjectRatio AS (\n    SELECT \n        pr.presenter_id,\n        COUNT(pr.presentation_id) AS presentations_count,\n        COUNT(DISTINCT p.project_id) AS projects_count,\n        COUNT(pr.presentation_id)*1.0 / NULLIF(COUNT(DISTINCT p.project_id), 0) AS ratio_presentations_to_projects\n    FROM Presentations pr\n    LEFT JOIN Projects p ON pr.project_id = p.project_id\n    WHERE pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    GROUP BY pr.presenter_id\n),\nResearcherInfo AS (\n    SELECT \n        r.researcher_id,\n        r.first_name,\n        r.last_name,\n        TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n        COUNT(DISTINCT pub.publication_id) AS publications_count,\n        AVG(pub.impact_factor) AS average_impact_factor,\n        COUNT(DISTINCT pat.patent_id) AS patents_count,\n        i.name AS institution_name\n    FROM Researchers r\n    LEFT JOIN Publications pub ON r.researcher_id = pub.project_id AND pub.impact_factor > 4.0\n    LEFT JOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.status = 'Получен'\n    INNER JOIN Departments d ON r.researcher_id = d.head_id\n    INNER JOIN Institutions i ON d.institution_id = i.institution_id\n    WHERE TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) <= 40\n    GROUP BY r.researcher_id, r.first_name, r.last_name, i.name\n    HAVING publications_count > 0 AND patents_count > 0\n)\nSELECT \n    ri.first_name,\n    ri.last_name,\n    ri.age,\n    ri.publications_count,\n    ri.average_impact_factor,\n    ri.patents_count,\n    ri.institution_name,\n    ppr.presentations_count,\n    ppr.projects_count,\n    ppr.ratio_presentations_to_projects\nFROM ResearcherInfo ri\nINNER JOIN PresentationProjectRatio ppr ON ri.researcher_id = ppr.presenter_id\nORDER BY ppr.ratio_presentations_to_projects DESC\nLIMIT 11;",
            "gigachat_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    TIMESTAMPDIFF(YEAR, r.birth_date, CURDATE()) AS age,\n    COUNT(pr.presentation_id) / NULLIF(COUNT(DISTINCT prj.project_id), 0) AS presentations_to_projects_ratio,\n    COUNT(pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    COUNT(pt.patent_id) AS patent_count,\n    i.name AS institution_name\nFROM Researchers r\nJOIN Departments d ON r.researcher_id = d.head_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN Presentations pr ON r.researcher_id = pr.presenter_id AND pr.date >= DATE_SUB(NOW(), INTERVAL 2 YEAR)\nLEFT JOIN Projects prj ON r.researcher_id = prj.project_lead_id AND prj.start_date >= DATE_SUB(NOW(), INTERVAL 2 YEAR)\nLEFT JOIN Publications pub ON r.researcher_id IN (SELECT researcher_id FROM Publications WHERE impact_factor > 4.0)\nLEFT JOIN Patents pt ON r.researcher_id = pt.inventor_id AND pt.status = 'Получен'\nWHERE TIMESTAMPDIFF(YEAR, r.birth_date, CURDATE()) <= 40\nAND EXISTS (SELECT 1 FROM Publications WHERE researcher_id = r.researcher_id AND impact_factor > 4.0)\nAND EXISTS (SELECT 1 FROM Patents WHERE inventor_id = r.researcher_id AND status = 'Получен')\nGROUP BY r.researcher_id, r.first_name, r.last_name, i.name\nORDER BY presentations_to_projects_ratio DESC\nLIMIT 11;"
        },
        {
            "question": "Какие 6 отделов с наибольшим количеством оборудования (минимум 3 единицы) имеют наименьший процент экспериментов в статусе 'Завершено' по отношению к общему количеству экспериментов за последние 3 года? Включите информацию о заведующем отделом, учреждении, общем бюджете отдела, количестве проектов и общем количестве сотрудников. Отсортируйте результаты по проценту завершенных экспериментов в возрастающем порядке.",
            "sql_query": "SELECT d.department_id, d.name, d.number_of_staff, d.budget,\n       r.first_name AS head_first_name, r.last_name AS head_last_name, r.position AS head_position,\n       i.name AS institution_name, i.city, i.country,\n       COUNT(DISTINCT eq.equipment_id) AS equipment_count,\n       COUNT(DISTINCT e.experiment_id) AS total_experiments,\n       SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) AS completed_experiments,\n       (SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT e.experiment_id)) AS completed_experiments_percentage,\n       COUNT(DISTINCT p.project_id) AS projects_count\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Experiments e ON p.project_id = e.project_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY d.department_id, d.name, d.number_of_staff, d.budget, r.first_name, r.last_name, r.position, i.name, i.city, i.country\nHAVING COUNT(DISTINCT eq.equipment_id) >= 3 AND COUNT(DISTINCT e.experiment_id) > 0\nORDER BY completed_experiments_percentage ASC, equipment_count DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT d.department_id, d.name AS department_name, \n       r.first_name AS head_first_name, r.last_name AS head_last_name, \n       i.name AS institution_name, d.budget AS department_budget, \n       COUNT(DISTINCT p.project_id) AS project_count, \n       d.number_of_staff AS total_staff,\n       (COUNT(DISTINCT e.experiment_id) FILTER (WHERE e.status = 'Завершено') * 1.0 / NULLIF(COUNT(DISTINCT e.experiment_id), 0)) * 100 AS completed_experiments_percentage\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nLEFT JOIN Projects p ON d.department_id = p.department_id\nWHERE eq.equipment_id IN (\n    SELECT eq.equipment_id\n    FROM Equipment eq\n    WHERE eq.department_id = d.department_id\n    GROUP BY eq.department_id\n    HAVING COUNT(eq.equipment_id) >= 3\n)\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nORDER BY completed_experiments_percentage ASC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT d.department_id, d.name AS department_name, \n       CONCAT(r.first_name, ' ', r.last_name) AS head_name,\n       i.name AS institution_name, d.budget AS total_budget,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       d.number_of_staff AS total_staff,\n       COUNT(DISTINCT e.experiment_id) AS total_experiments,\n       SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) AS completed_experiments,\n       (SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT e.experiment_id)) AS completed_percentage\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nLEFT JOIN Projects p ON d.department_id = p.department_id\nWHERE eq.status = 'Активный'\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nHAVING COUNT(DISTINCT eq.equipment_id) >= 3\nORDER BY completed_percentage ASC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    d.department_id,\n    d.name AS department_name,\n    r.first_name AS head_first_name,\n    r.last_name AS head_last_name,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    d.number_of_staff AS staff_count,\n    COUNT(DISTINCT e.experiment_id) AS total_experiments,\n    SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) AS completed_experiments,\n    (SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT e.experiment_id)) AS completion_percentage,\n    COUNT(DISTINCT eq.equipment_id) AS equipment_count\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN Projects p ON d.department_id = p.department_id\nLEFT JOIN Experiments e ON p.project_id = e.project_id AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nLEFT JOIN Equipment eq ON d.department_id = eq.department_id\nGROUP BY d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nHAVING COUNT(DISTINCT eq.equipment_id) >= 3\nORDER BY completion_percentage ASC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    d.name AS department_name,\n    r.first_name || ' ' || r.last_name AS head_name,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    d.number_of_staff AS staff_count,\n    COUNT(DISTINCT e.experiment_id) AS total_experiments,\n    SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) AS completed_experiments,\n    (SUM(CASE WHEN e.status = 'Завершено' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT e.experiment_id)) AS completion_percentage\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN Projects p ON d.department_id = p.department_id\nLEFT JOIN Equipment eq ON d.department_id = eq.department_id\nLEFT JOIN Experiments e ON p.project_id = e.project_id AND e.start_date >= DATE('now', '-3 years')\nWHERE d.department_id IN (SELECT department_id FROM Equipment GROUP BY department_id HAVING COUNT(equipment_id) >= 3)\nGROUP BY d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nHAVING COUNT(DISTINCT eq.equipment_id) > 0\nORDER BY completion_percentage ASC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    r.first_name AS head_first_name, \n    r.last_name AS head_last_name, \n    i.name AS institution_name, \n    d.budget, \n    COUNT(DISTINCT e.equipment_id) AS equipment_count, \n    COUNT(DISTINCT p.project_id) AS project_count, \n    d.number_of_staff, \n    (COUNT(CASE WHEN e.status = 'Завершено' THEN 1 END) * 1.0 / COUNT(e.experiment_id)) * 100 AS completed_experiments_percentage\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Equipment eq ON d.department_id = eq.department_id\nJOIN \n    Experiments e ON eq.equipment_id = e.equipment_id\nJOIN \n    Projects p ON e.project_id = p.project_id\nWHERE \n    e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nHAVING \n    COUNT(DISTINCT e.equipment_id) >= 3\nORDER BY \n    completed_experiments_percentage ASC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    r.first_name AS head_first_name,\n    r.last_name AS head_last_name,\n    i.name AS institution_name,\n    d.budget,\n    COUNT(DISTINCT e.equipment_id) AS equipment_count,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    d.number_of_staff,\n    (COUNT(CASE WHEN ex.status = 'Завершено' THEN 1 ELSE NULL END) * 1.0 / COUNT(ex.experiment_id)) * 100 AS completed_experiments_percentage\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Equipment e ON d.department_id = e.department_id\nJOIN \n    Experiments ex ON e.equipment_id = ex.equipment_id\nJOIN \n    Projects p ON ex.project_id = p.project_id\nWHERE \n    ex.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND e.status = 'Активный'\nGROUP BY \n    d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nHAVING \n    COUNT(DISTINCT e.equipment_id) >= 3\nORDER BY \n    completed_experiments_percentage ASC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    CONCAT(r.first_name, ' ', r.last_name) AS department_head,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    d.number_of_staff,\n    COUNT(eq.equipment_id) AS equipment_count,\n    COUNT(CASE WHEN e.status = 'Завершено' AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN 1 END) AS completed_experiments,\n    COUNT(e.experiment_id) AS total_experiments,\n    (COUNT(CASE WHEN e.status = 'Завершено' AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR) THEN 1 END) * 100.0 / NULLIF(COUNT(e.experiment_id), 0)) AS completion_percentage\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Projects p ON d.department_id = p.department_id\nLEFT JOIN \n    Equipment eq ON d.department_id = eq.department_id\nLEFT JOIN \n    Experiments e ON d.department_id = (SELECT department_id FROM Projects WHERE project_id = e.project_id)\nGROUP BY \n    d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nHAVING \n    COUNT(eq.equipment_id) >= 3\nORDER BY \n    completion_percentage ASC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    CONCAT(r.first_name, ' ', r.last_name) AS head_name,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    d.number_of_staff,\n    COUNT(eq.equipment_id) AS equipment_count,\n    COUNT(CASE WHEN e.status = 'Завершено' THEN 1 END) AS completed_experiments,\n    COUNT(e.experiment_id) AS total_experiments,\n    (COUNT(CASE WHEN e.status = 'Завершено' THEN 1 END) * 100.0 / NULLIF(COUNT(e.experiment_id), 0)) AS completion_percentage\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Projects p ON d.department_id = p.department_id\nLEFT JOIN \n    Equipment eq ON d.department_id = eq.department_id\nLEFT JOIN \n    Experiments e ON p.project_id = e.project_id AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nHAVING \n    COUNT(eq.equipment_id) >= 3\nORDER BY \n    completion_percentage ASC\nLIMIT 6;",
            "gigachat_response": "WITH DepartmentEquipmentCount AS (\n    SELECT de.department_id, COUNT(eq.equipment_id) AS equipment_count\n    FROM Departments de\n    LEFT JOIN Equipment eq ON de.department_id = eq.department_id\n    GROUP BY de.department_id\n    HAVING equipment_count >= 3\n),\nDepartmentExperimentCompletionRate AS (\n    SELECT de.department_id, \n           COUNT(CASE WHEN ex.status = 'Завершено' THEN 1 END) AS completed_experiments,\n           COUNT(*) AS total_experiments,\n           ROUND((COUNT(CASE WHEN ex.status = 'Завершено' THEN 1 END) * 100.0 / NULLIF(COUNT(*), 0)), 2) AS completion_rate\n    FROM Departments de\n    INNER JOIN Experiments ex ON de.department_id = ex.department_id\n    WHERE ex.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    GROUP BY de.department_id\n),\nFinalResult AS (\n    SELECT dec.department_id, \n           dep.head_id, \n           dep.name AS department_name, \n           inst.name AS institution_name, \n           dep.budget AS department_budget, \n           COUNT(DISTINCT pr.project_id) AS projects_count, \n           dep.number_of_staff AS staff_count,\n           dec.equipment_count,\n           der.completed_experiments,\n           der.total_experiments,\n           der.completion_rate\n    FROM DepartmentEquipmentCount dec\n    INNER JOIN Departments dep ON dec.department_id = dep.department_id\n    INNER JOIN Institutions inst ON dep.institution_id = inst.institution_id\n    INNER JOIN Projects pr ON dep.department_id = pr.department_id\n    INNER JOIN DepartmentExperimentCompletionRate der ON dec.department_id = der.department_id\n    GROUP BY dec.department_id, dep.head_id, dep.name, inst.name, dep.budget, dec.equipment_count, der.completed_experiments, der.total_experiments, der.completion_rate\n)\nSELECT *\nFROM FinalResult\nORDER BY completion_rate ASC\nLIMIT 6;",
            "gigachat_response_ru": "WITH DepartmentEquipmentCount AS (\n    SELECT de.department_id, COUNT(eq.equipment_id) AS equipment_count\n    FROM Departments de\n    LEFT JOIN Equipment eq ON de.department_id = eq.department_id\n    GROUP BY de.department_id\n    HAVING equipment_count >= 3\n),\nDepartmentExperimentsStatus AS (\n    SELECT de.department_id, \n           COUNT(CASE WHEN ex.status = 'Завершено' THEN 1 END) AS completed_experiments,\n           COUNT(*) AS total_experiments\n    FROM Departments de\n    JOIN Experiments ex ON de.department_id = ex.department_id\n    WHERE ex.start_date BETWEEN DATE_SUB(NOW(), INTERVAL 3 YEAR) AND NOW()\n    GROUP BY de.department_id\n),\nFinalResult AS (\n    SELECT de.department_id, de.head_id, de.name AS department_name, ins.name AS institution_name, \n           dec.equipment_count, des.completed_experiments, des.total_experiments,\n           ROUND((des.completed_experiments * 100.0 / NULLIF(des.total_experiments, 0)), 2) AS completion_percentage,\n           de.number_of_staff, de.budget, COUNT(pr.project_id) AS projects_count\n    FROM Departments de\n    JOIN Institution ins ON de.institution_id = ins.institution_id\n    JOIN DepartmentEquipmentCount dec ON de.department_id = dec.department_id\n    JOIN DepartmentExperimentsStatus des ON de.department_id = des.department_id\n    LEFT JOIN Projects pr ON de.department_id = pr.department_id\n    GROUP BY de.department_id, de.head_id, de.name, ins.name, dec.equipment_count, des.completed_experiments, des.total_experiments, de.number_of_staff, de.budget\n)\nSELECT fr.*, CONCAT(r.first_name, ' ', r.last_name) AS head_fullname\nFROM FinalResult fr\nJOIN Researchers r ON fr.head_id = r.researcher_id\nORDER BY completion_percentage ASC\nLIMIT 6;"
        },
        {
            "question": "Какие 8 коллабораций за последние 4 года имеют наибольшее отношение количества публикаций к длительности коллаборации в месяцах? Включите информацию о типе коллаборации, учреждениях-участниках, общем бюджете связанных проектов, средний импакт-фактор публикаций и количество задействованных исследователей. Рассматривайте только коллаборации длительностью не менее 6 месяцев и с участием как минимум 3 исследователей. Отсортируйте результаты по соотношению публикаций к длительности в убывающем порядке.",
            "sql_query": "SELECT c.collaboration_id, c.type, c.description,\n       i.name AS partner_institution_name, i.country AS partner_country, i.city AS partner_city,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))) AS publications_per_month,\n       COUNT(DISTINCT r.researcher_id) AS researchers_involved,\n       SUM(p.budget) AS total_project_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, c.description, i.name, i.country, i.city, c.start_date, c.end_date\nHAVING TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) >= 6\nAND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT c.collaboration_id, c.type, i.name AS institution_name, i.country, i.city,\n       SUM(p.budget) AS total_project_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT r.researcher_id) AS researchers_involved,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))) AS publications_per_month\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, i.name, i.country, i.city, c.start_date, c.end_date\nHAVING TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) >= 6\nAND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT c.collaboration_id, c.type, \n       i.name AS institution_name, i.country, i.city,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))) AS publications_per_month,\n       COUNT(DISTINCT r.researcher_id) AS researchers_involved,\n       SUM(p.budget) AS total_project_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, i.name, i.country, i.city, c.start_date, c.end_date\nHAVING TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) >= 6\nAND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT c.collaboration_id, c.type,\n       i.name AS institution_name,\n       SUM(p.budget) AS total_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT r.researcher_id) AS num_researchers,\n       COUNT(DISTINCT pub.publication_id) AS num_publications,\n       TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) AS collaboration_duration_months,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, c.end_date)) AS publication_ratio\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, i.name, c.start_date, c.end_date\nHAVING TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) >= 6 AND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY publication_ratio DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.collaboration_id, c.type,\n       i.name AS institution_name,\n       SUM(p.budget) AS total_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT r.researcher_id) AS num_researchers,\n       COUNT(DISTINCT pub.publication_id) AS num_publications,\n       TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) AS collaboration_duration_months,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, c.end_date)) AS publications_per_month\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, i.name, c.start_date, c.end_date\nHAVING TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) >= 6\n   AND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n  c.collaboration_id, \n  c.type, \n  i.name AS institution_name, \n  c.description, \n  COUNT(DISTINCT pub.publication_id) AS publications_count,\n  TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n  (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))) AS publications_per_month,\n  COUNT(DISTINCT r.researcher_id) AS researchers_involved,\n  SUM(p.budget) AS total_project_budget,\n  AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n  Collaborations c\nJOIN \n  Institutions i ON c.institution_id = i.institution_id\nJOIN \n  Projects p ON c.project_id = p.project_id\nJOIN \n  Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n  Publications pub ON p.project_id = pub.project_id\nWHERE \n  c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n  c.collaboration_id, \n  c.type, \n  i.name, \n  c.description, \n  c.start_date, \n  c.end_date\nHAVING \n  TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) >= 6\n  AND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY \n  publications_per_month DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n  c.collaboration_id, \n  c.type, \n  i.name AS institution_name, \n  SUM(p.budget) AS total_budget, \n  COUNT(DISTINCT pub.publication_id) AS publications_count,\n  AVG(pub.impact_factor) AS avg_impact_factor,\n  COUNT(DISTINCT r.researcher_id) AS researchers_count,\n  TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n  (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))) AS publications_to_duration_ratio\nFROM \n  Collaborations c\nJOIN \n  Institutions i ON c.institution_id = i.institution_id\nJOIN \n  Projects p ON c.project_id = p.project_id\nJOIN \n  Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN \n  Publications pub ON p.project_id = pub.project_id\nWHERE \n  c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n  c.collaboration_id, \n  c.type, \n  i.name, \n  c.start_date, \n  c.end_date\nHAVING \n  TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) >= 6\n  AND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY \n  publications_to_duration_ratio DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.collaboration_id, c.type, \n       i1.name AS institution1_name, i2.name AS institution2_name,\n       SUM(p.budget) AS total_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT r.researcher_id) AS researcher_count,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n       (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))) AS publications_per_month\nFROM Collaborations c\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Institutions i1 ON c.institution_id = i1.institution_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i2 ON d.institution_id = i2.institution_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, i1.name, i2.name, c.start_date, c.end_date\nHAVING duration_months >= 6 AND researcher_count >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.collaboration_id, c.type, \n       i1.name AS institution_name, i2.name AS partner_institution_name,\n       SUM(p.budget) AS total_budget,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT r.researcher_id) AS researchers_count,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n       COUNT(DISTINCT pub.publication_id) / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS publications_per_month\nFROM Collaborations c\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i1 ON d.institution_id = i1.institution_id\nJOIN Institutions i2 ON c.institution_id = i2.institution_id\nJOIN Publications pub ON p.project_id = pub.project_id\nJOIN Experiments e ON p.project_id = e.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, i1.name, i2.name, c.start_date, c.end_date\nHAVING duration_months >= 6 AND researchers_count >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;",
            "gigachat_response": "SELECT \n    c.collaboration_id,\n    c.type,\n    c.description,\n    i.name AS partner_institution_name,\n    i.country AS partner_country,\n    i.city AS partner_city,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n    (COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))) AS publications_per_month,\n    COUNT(DISTINCT r.researcher_id) AS researchers_involved,\n    SUM(p.budget) AS total_project_budget,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, c.description, i.name, i.country, i.city, c.start_date, c.end_date\nHAVING TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) >= 6\n   AND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT \n    c.collaboration_id,\n    c.type,\n    i.name AS partner_institution_name,\n    i.country AS partner_country,\n    i.city AS partner_city,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n    ROUND((COUNT(DISTINCT pub.publication_id) * 1.0 / TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE))), 2) AS publications_per_month,\n    COUNT(DISTINCT r.researcher_id) AS researchers_involved,\n    SUM(p.budget) AS total_project_budget,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY c.collaboration_id, c.type, i.name, i.country, i.city, c.start_date, c.end_date\nHAVING TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) >= 6\n   AND COUNT(DISTINCT r.researcher_id) >= 3\nORDER BY publications_per_month DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 13 самых эффективных проектов с точки зрения соотношения количества публикаций к затраченному бюджету (в расчете на миллион рублей) проводятся или были проведены за последние 5 лет? Включите информацию о руководителе проекта, отделе, учреждении, статусе проекта, финансирующем агентстве, среднем импакт-факторе публикаций и общем количестве связанных датасетов. Рассматривайте только проекты с бюджетом более 500000 рублей и с не менее чем 2 публикациями. Отсортируйте результаты по эффективности затрат в убывающем порядке.",
            "sql_query": "SELECT p.project_id, p.title, p.status, p.budget, p.funding_agency,\n       r.first_name AS lead_first_name, r.last_name AS lead_last_name, r.position AS lead_position,\n       d.name AS department_name, i.name AS institution_name,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       (COUNT(DISTINCT pub.publication_id) * 1000000.0 / p.budget) AS publications_per_million,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       COUNT(DISTINCT ds.dataset_id) AS datasets_count\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN DataSets ds ON p.project_id = ds.project_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND p.budget > 500000\nGROUP BY p.project_id, p.title, p.status, p.budget, p.funding_agency, r.first_name, r.last_name, r.position, d.name, i.name\nHAVING COUNT(DISTINCT pub.publication_id) >= 2\nORDER BY publications_per_million DESC\nLIMIT 13;",
            "gpt-4o_response": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    r.first_name AS lead_first_name,\n    r.last_name AS lead_last_name,\n    r.position AS lead_position,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status AS project_status,\n    p.funding_agency,\n    (COUNT(pub.publication_id) / (p.budget / 1000000.0)) AS efficiency,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT ds.dataset_id) AS total_datasets\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    p.budget > 500000\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, r.position, d.name, i.name, p.status, p.funding_agency, p.budget\nHAVING \n    COUNT(pub.publication_id) >= 2\nORDER BY \n    efficiency DESC\nLIMIT 13;",
            "gpt-4o_response_ru": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status AS project_status,\n    p.funding_agency,\n    (COUNT(pub.publication_id) / (p.budget / 1000000)) AS efficiency,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT ds.dataset_id) AS total_datasets\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    p.budget > 500000\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, d.name, i.name, p.status, p.funding_agency, p.budget\nHAVING \n    COUNT(pub.publication_id) >= 2\nORDER BY \n    efficiency DESC\nLIMIT 13;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    r.first_name AS project_lead_first_name,\n    r.last_name AS project_lead_last_name,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status AS project_status,\n    p.funding_agency,\n    (COUNT(pub.publication_id) * 1.0 / (p.budget / 1000000)) AS publications_per_million_budget,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    COUNT(DISTINCT ds.dataset_id) AS total_datasets\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN\n    Departments d ON p.department_id = d.department_id\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id\nWHERE\n    p.budget > 500000\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY\n    p.project_id,\n    p.title,\n    r.first_name,\n    r.last_name,\n    d.name,\n    i.name,\n    p.status,\n    p.funding_agency,\n    p.budget\nHAVING\n    COUNT(pub.publication_id) >= 2\nORDER BY\n    publications_per_million_budget DESC\nLIMIT 13;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    r.first_name AS project_lead_first_name,\n    r.last_name AS project_lead_last_name,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status AS project_status,\n    p.funding_agency,\n    (COUNT(pub.publication_id) * 1.0 / (p.budget / 1000000)) AS cost_effectiveness,\n    AVG(pub.impact_factor) AS average_impact_factor,\n    COUNT(DISTINCT ds.dataset_id) AS dataset_count\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN\n    Departments d ON p.department_id = d.department_id\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN\n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id\nWHERE\n    p.budget > 500000\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY\n    p.project_id,\n    p.title,\n    r.first_name,\n    r.last_name,\n    d.name,\n    i.name,\n    p.status,\n    p.funding_agency,\n    p.budget\nHAVING\n    COUNT(pub.publication_id) >= 2\nORDER BY\n    cost_effectiveness DESC\nLIMIT 13;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    p.project_id, \n    p.title, \n    r.first_name, \n    r.last_name, \n    d.name AS department_name, \n    i.name AS institution_name, \n    p.status, \n    p.funding_agency, \n    AVG(pub.impact_factor) AS avg_impact_factor, \n    COUNT(DISTINCT pub.publication_id) AS publications_count, \n    COUNT(DISTINCT ds.dataset_id) AS datasets_count, \n    (COUNT(DISTINCT pub.publication_id) * 1.0 / (p.budget / 1000000)) AS efficiency\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    p.budget > 500000\nAND \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND \n    COUNT(DISTINCT pub.publication_id) >= 2\nGROUP BY \n    p.project_id, \n    p.title, \n    r.first_name, \n    r.last_name, \n    d.name, \n    i.name, \n    p.status, \n    p.funding_agency, \n    p.budget\nORDER BY \n    efficiency DESC\nLIMIT 13;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.project_id, \n    p.title, \n    r.first_name, \n    r.last_name, \n    d.name AS department_name, \n    i.name AS institution_name, \n    p.status, \n    p.funding_agency, \n    COUNT(DISTINCT pub.publication_id) AS publications_count, \n    p.budget / 1000000 AS budget_million, \n    COUNT(DISTINCT pub.publication_id) / (p.budget / 1000000) AS efficiency, \n    AVG(pub.impact_factor) AS avg_impact_factor, \n    COUNT(DISTINCT ds.dataset_id) AS datasets_count\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND p.budget > 500000\n    AND COUNT(DISTINCT pub.publication_id) >= 2\nGROUP BY \n    p.project_id, \n    p.title, \n    r.first_name, \n    r.last_name, \n    d.name, \n    i.name, \n    p.status, \n    p.funding_agency, \n    p.budget\nORDER BY \n    efficiency DESC\nLIMIT 13;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status AS project_status,\n    p.funding_agency,\n    COUNT(pub.publication_id) AS publication_count,\n    p.budget,\n    (COUNT(pub.publication_id) / (p.budget / 1000000)) AS publications_per_million_rubles,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(DISTINCT ds.dataset_id) AS dataset_count\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND p.budget > 500000\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, d.name, i.name, p.status, p.funding_agency, p.budget\nHAVING \n    COUNT(pub.publication_id) >= 2\nORDER BY \n    publications_per_million_rubles DESC\nLIMIT 13;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status AS project_status,\n    p.funding_agency,\n    COUNT(pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    COUNT(ds.dataset_id) AS dataset_count,\n    (COUNT(pub.publication_id) * 1000000 / p.budget) AS efficiency_ratio\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id\nLEFT JOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    p.budget > 500000\n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, d.name, i.name, p.status, p.funding_agency, p.budget\nHAVING \n    COUNT(pub.publication_id) >= 2\nORDER BY \n    efficiency_ratio DESC\nLIMIT 13;",
            "gigachat_response": "SELECT \n    p.project_id,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_leader,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status,\n    p.funding_agency,\n    ROUND(SUM(pub.impact_factor)/COUNT(pub.publication_id), 2) AS average_impact_factor,\n    COUNT(ds.dataset_id) AS datasets_count,\n    COUNT(pub.publication_id)*1000000/(p.budget+0.000001) AS effectiveness_ratio\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN DataSets ds ON p.project_id = ds.project_id\nWHERE p.budget > 500000 AND p.end_date >= DATE_SUB(NOW(), INTERVAL 5 YEAR)\nGROUP BY p.project_id, r.first_name, r.last_name, d.name, i.name, p.status, p.funding_agency, p.budget\nHAVING COUNT(pub.publication_id) >= 2\nORDER BY effectiveness_ratio DESC\nLIMIT 13;",
            "gigachat_response_ru": "SELECT \n    p.project_id,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_leader,\n    d.name AS department_name,\n    i.name AS institution_name,\n    p.status,\n    p.funding_agency,\n    ROUND(SUM(pub.impact_factor)/COUNT(pub.publication_id), 2) AS average_impact_factor,\n    COUNT(ds.dataset_id) AS datasets_count,\n    COUNT(pub.publication_id)*1000000/(p.budget+0.000001) AS effectiveness_ratio\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN DataSets ds ON p.project_id = ds.project_id\nWHERE p.budget > 500000 AND pub.publication_date >= DATE_SUB(NOW(), INTERVAL 5 YEAR)\nGROUP BY p.project_id, r.first_name, r.last_name, d.name, i.name, p.status, p.funding_agency, p.budget\nHAVING COUNT(pub.publication_id) >= 2\nORDER BY effectiveness_ratio DESC\nLIMIT 13;"
        },
        {
            "question": "Какие 8 исследователей опубликовали наибольшее количество статей за последние 3 года с импакт-фактором выше среднего? Включите информацию об их должности, количестве статей, среднем импакт-факторе и названии проекта с наивысшим бюджетом, в котором они участвуют. Отсортируйте результаты по количеству публикаций в убывающем порядке.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       (SELECT p2.title FROM Projects p2 WHERE p2.project_lead_id = r.researcher_id ORDER BY p2.budget DESC LIMIT 1) AS highest_budget_project\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pub.impact_factor > (SELECT AVG(impact_factor) FROM Publications)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY publication_count DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       proj.title AS highest_budget_project_title,\n       proj.budget AS highest_budget\nFROM Researchers r\nJOIN Projects proj ON r.researcher_id = proj.project_lead_id\nJOIN Publications pub ON proj.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pub.impact_factor > (SELECT AVG(impact_factor) FROM Publications)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY publication_count DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "WITH RecentPublications AS (\n    SELECT pub.publication_id, pub.project_id, pub.impact_factor, pub.publication_date\n    FROM Publications pub\n    WHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n),\nAverageImpactFactor AS (\n    SELECT AVG(pub.impact_factor) AS avg_impact_factor\n    FROM Publications pub\n),\nFilteredPublications AS (\n    SELECT rp.publication_id, rp.project_id, rp.impact_factor\n    FROM RecentPublications rp\n    CROSS JOIN AverageImpactFactor aif\n    WHERE rp.impact_factor > aif.avg_impact_factor\n),\nResearcherPublicationCount AS (\n    SELECT r.researcher_id, r.first_name, r.last_name, r.position, COUNT(fp.publication_id) AS publication_count\n    FROM Researchers r\n    JOIN Projects p ON r.researcher_id = p.project_lead_id\n    JOIN FilteredPublications fp ON p.project_id = fp.project_id\n    GROUP BY r.researcher_id, r.first_name, r.last_name, r.position\n),\nTopResearchers AS (\n    SELECT rpc.researcher_id, rpc.first_name, rpc.last_name, rpc.position, rpc.publication_count\n    FROM ResearcherPublicationCount rpc\n    ORDER BY rpc.publication_count DESC\n    LIMIT 8\n),\nResearcherProjectBudget AS (\n    SELECT r.researcher_id, MAX(p.budget) AS max_budget, MAX(p.title) AS max_budget_project_title\n    FROM Researchers r\n    JOIN Projects p ON r.researcher_id = p.project_lead_id\n    GROUP BY r.researcher_id\n)\nSELECT tr.researcher_id, tr.first_name, tr.last_name, tr.position, tr.publication_count,\n       rpb.max_budget, rpb.max_budget_project_title\nFROM TopResearchers tr\nJOIN ResearcherProjectBudget rpb ON tr.researcher_id = rpb.researcher_id\nORDER BY tr.publication_count DESC;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.first_name,\n    r.last_name,\n    r.position,\n    COUNT(p.publication_id) AS publication_count,\n    AVG(p.impact_factor) AS average_impact_factor,\n    MAX(proj.title) AS highest_budget_project,\n    MAX(proj.budget) AS highest_budget\nFROM\n    Researchers r\nJOIN\n    Projects proj ON r.researcher_id = proj.project_lead_id\nJOIN\n    Publications p ON proj.project_id = p.project_id\nWHERE\n    p.publication_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.position\nHAVING\n    AVG(p.impact_factor) > (SELECT AVG(impact_factor) FROM Publications WHERE publication_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR))\nORDER BY\n    publication_count DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.first_name,\n    r.last_name,\n    r.position,\n    COUNT(p.publication_id) AS publication_count,\n    AVG(p.impact_factor) AS avg_impact_factor,\n    (SELECT pr.title FROM Projects pr WHERE pr.project_lead_id = r.researcher_id ORDER BY pr.budget DESC LIMIT 1) AS highest_budget_project_title\nFROM\n    Researchers r\nJOIN\n    Projects proj ON r.researcher_id = proj.project_lead_id\nJOIN\n    Publications p ON proj.project_id = p.project_id\nWHERE\n    p.publication_date >= DATE_SUB(CURDATE(), INTERVAL 3 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.position\nHAVING\n    AVG(p.impact_factor) > (SELECT AVG(impact_factor) FROM Publications)\nORDER BY\n    publication_count DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    p.title AS project_title_with_highest_budget\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nWHERE \n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND pub.impact_factor > (SELECT AVG(impact_factor) FROM Publications)\nGROUP BY \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    p.title\nORDER BY \n    publications_count DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    (SELECT p.title FROM Projects p WHERE p.project_id = (SELECT MAX(p2.budget) FROM Projects p2 WHERE p2.project_lead_id = r.researcher_id)) AS max_budget_project_title\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Publications pub ON p.project_id = pub.project_id\nWHERE \n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND pub.impact_factor > (SELECT AVG(impact_factor) FROM Publications)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY \n    publications_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, \n       COUNT(pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor,\n       MAX(p.budget) AS highest_project_budget,\n       (SELECT p2.title FROM Projects p2 \n        WHERE p2.project_lead_id = r.researcher_id \n        ORDER BY p2.budget DESC LIMIT 1) AS highest_budget_project_title\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND pub.impact_factor > (SELECT AVG(impact_factor) FROM Publications)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY publication_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    r.position,\n    COUNT(pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor,\n    MAX(p.budget) AS max_project_budget,\n    (SELECT p2.title FROM Projects p2 WHERE p2.project_lead_id = r.researcher_id OR p2.project_id IN (SELECT project_id FROM Experiments WHERE lead_researcher_id = r.researcher_id) ORDER BY p2.budget DESC LIMIT 1) AS highest_budget_project_title\nFROM \n    Researchers r\nJOIN \n    Publications pub ON pub.project_id IN (SELECT project_id FROM Projects WHERE project_lead_id = r.researcher_id OR project_id IN (SELECT project_id FROM Experiments WHERE lead_researcher_id = r.researcher_id))\nJOIN \n    Projects p ON p.project_id = pub.project_id\nWHERE \n    pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND pub.impact_factor > (SELECT AVG(impact_factor) FROM Publications WHERE publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR))\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position\nORDER BY \n    publications_count DESC\nLIMIT 8;",
            "gigachat_response": "WITH ImpactFactors AS (\n    SELECT AVG(impact_factor) AS average_impact_factor\n    FROM Publications\n),\nResearcherPublications AS (\n    SELECT prj.project_lead_id AS researcher_id,\n           COUNT(*) AS publication_count,\n           AVG(pub.impact_factor) AS avg_impact_factor,\n           MAX(prj.budget) AS max_project_budget\n    FROM Projects prj\n    LEFT JOIN Publications pub ON prj.project_id = pub.project_id\n    WHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n      AND pub.impact_factor > (SELECT average_impact_factor FROM ImpactFactors)\n    GROUP BY prj.project_lead_id\n),\nTopResearchers AS (\n    SELECT rp.researcher_id,\n           r.first_name,\n           r.last_name,\n           r.position,\n           rp.publication_count,\n           rp.avg_impact_factor,\n           rp.max_project_budget\n    FROM ResearcherPublications rp\n    INNER JOIN Researchers r ON rp.researcher_id = r.researcher_id\n    ORDER BY rp.publication_count DESC\n    LIMIT 8\n)\nSELECT *\nFROM TopResearchers;",
            "gigachat_response_ru": "WITH AvgImpactFactor AS (\n    SELECT AVG(impact_factor) AS average_impact_factor\n    FROM Publications\n    WHERE publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n),\nResearcherPublications AS (\n    SELECT pr.project_lead_id AS researcher_id,\n           COUNT(*) AS publication_count,\n           AVG(pub.impact_factor) AS avg_impact_factor,\n           MAX(pr.budget) AS max_project_budget,\n           pr.title AS highest_budget_project\n    FROM Projects pr\n    INNER JOIN Publications pub ON pr.project_id = pub.project_id\n    WHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n      AND pub.impact_factor > (SELECT average_impact_factor FROM AvgImpactFactor)\n    GROUP BY pr.project_lead_id\n)\nSELECT rp.researcher_id,\n       CONCAT(r.first_name, ' ', r.last_name) AS full_name,\n       r.position,\n       rp.publication_count,\n       ROUND(rp.avg_impact_factor, 2) AS avg_impact_factor,\n       rp.highest_budget_project\nFROM ResearcherPublications rp\nINNER JOIN Researchers r ON rp.researcher_id = r.researcher_id\nORDER BY rp.publication_count DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 5 проектов со статусом 'Активный' имеют наибольшее количество образцов типа 'Грунт' или 'Вода', собранных за последние 2 года? Включите информацию о руководителе проекта, общем бюджете, количестве экспериментов и среднем количестве образцов на эксперимент. Отсортируйте результаты по количеству образцов в убывающем порядке.",
            "sql_query": "SELECT p.project_id, p.title, p.budget, p.funding_agency,\n       r.first_name AS lead_first_name, r.last_name AS lead_last_name,\n       COUNT(DISTINCT s.sample_id) AS sample_count,\n       COUNT(DISTINCT e.experiment_id) AS experiment_count,\n       COUNT(DISTINCT s.sample_id) / COUNT(DISTINCT e.experiment_id) AS avg_samples_per_experiment\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Experiments e ON p.project_id = e.project_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE p.status = 'Активный'\nAND (s.type = 'Грунт' OR s.type = 'Вода')\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY p.project_id, p.title, p.budget, p.funding_agency, r.first_name, r.last_name\nORDER BY sample_count DESC\nLIMIT 5;",
            "gpt-4o_response": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    r.first_name AS lead_first_name, \n    r.last_name AS lead_last_name, \n    p.budget AS total_budget, \n    COUNT(DISTINCT e.experiment_id) AS experiment_count, \n    COUNT(s.sample_id) AS sample_count, \n    (COUNT(s.sample_id) / NULLIF(COUNT(DISTINCT e.experiment_id), 0)) AS avg_samples_per_experiment\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Experiments e ON p.project_id = e.project_id\nJOIN \n    Samples s ON e.experiment_id = s.experiment_id\nWHERE \n    p.status = 'Активный'\n    AND s.type IN ('Грунт', 'Вода')\n    AND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.budget\nORDER BY \n    sample_count DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    p.budget AS total_budget,\n    COUNT(DISTINCT e.experiment_id) AS experiment_count,\n    COUNT(s.sample_id) AS sample_count,\n    COUNT(s.sample_id) / COUNT(DISTINCT e.experiment_id) AS avg_samples_per_experiment\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Experiments e ON p.project_id = e.project_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE p.status = 'Активный'\nAND s.type IN ('Грунт', 'Вода')\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY p.project_id, p.title, r.first_name, r.last_name, p.budget\nORDER BY sample_count DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    r.first_name AS project_lead_first_name,\n    r.last_name AS project_lead_last_name,\n    p.budget AS total_budget,\n    COUNT(DISTINCT e.experiment_id) AS experiment_count,\n    SUM(CASE WHEN s.type IN ('Грунт', 'Вода') THEN 1 ELSE 0 END) AS total_samples,\n    AVG(CASE WHEN s.type IN ('Грунт', 'Вода') THEN 1 ELSE 0 END) AS avg_samples_per_experiment\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN\n    Experiments e ON p.project_id = e.project_id\nLEFT JOIN\n    Samples s ON e.experiment_id = s.experiment_id\nWHERE\n    p.status = 'Активный'\n    AND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND s.type IN ('Грунт', 'Вода')\nGROUP BY\n    p.project_id,\n    p.title,\n    r.first_name,\n    r.last_name,\n    p.budget\nORDER BY\n    total_samples DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.project_id,\n    p.title AS project_title,\n    r.first_name || ' ' || r.last_name AS project_lead_name,\n    p.budget AS total_budget,\n    COUNT(DISTINCT e.experiment_id) AS experiment_count,\n    AVG(sample_counts.sample_count) AS avg_samples_per_experiment,\n    SUM(sample_counts.sample_count) AS total_sample_count\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN\n    Experiments e ON p.project_id = e.project_id\nJOIN\n    (SELECT experiment_id, COUNT(*) AS sample_count\n     FROM Samples\n     WHERE type IN ('Грунт', 'Вода') AND collection_date >= DATE('now', '-2 year')\n     GROUP BY experiment_id) AS sample_counts ON e.experiment_id = sample_counts.experiment_id\nWHERE\n    p.status = 'Активный'\nGROUP BY\n    p.project_id, p.title, r.first_name, r.last_name, p.budget\nORDER BY\n    total_sample_count DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n  p.project_id, \n  p.title, \n  r.first_name, \n  r.last_name, \n  p.budget, \n  COUNT(DISTINCT e.experiment_id) AS experiments_count, \n  COUNT(DISTINCT s.sample_id) AS samples_count, \n  AVG(s.quantity) AS avg_samples_per_experiment\nFROM \n  Projects p\nJOIN \n  Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n  Experiments e ON p.project_id = e.project_id\nJOIN \n  Samples s ON e.experiment_id = s.experiment_id\nWHERE \n  p.status = 'Активный'\n  AND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n  AND s.type IN ('Грунт', 'Вода')\nGROUP BY \n  p.project_id, p.title, r.first_name, r.last_name, p.budget\nORDER BY \n  samples_count DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.project_id, \n    p.title, \n    r.first_name, \n    r.last_name, \n    p.budget, \n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    SUM(s.quantity) / COUNT(DISTINCT e.experiment_id) AS avg_samples_per_experiment\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Experiments e ON p.project_id = e.project_id\nJOIN \n    Samples s ON e.experiment_id = s.experiment_id\nWHERE \n    p.status = 'Активный'\nAND \n    s.type IN ('Грунт', 'Вода')\nAND \n    s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.budget\nORDER BY \n    SUM(s.quantity) DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.project_id, p.title AS project_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS project_lead, \n       p.budget AS total_budget, \n       COUNT(DISTINCT e.experiment_id) AS experiments_count,\n       COUNT(s.sample_id) AS samples_count,\n       COUNT(s.sample_id) / COUNT(DISTINCT e.experiment_id) AS avg_samples_per_experiment\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Experiments e ON p.project_id = e.project_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE p.status = 'Активный'\nAND (s.type = 'Грунт' OR s.type = 'Вода')\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY p.project_id, p.title, project_lead, p.budget\nORDER BY samples_count DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.project_id,\n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    p.budget AS total_budget,\n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    COUNT(s.sample_id) AS samples_count,\n    COUNT(s.sample_id) / COUNT(DISTINCT e.experiment_id) AS avg_samples_per_experiment\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    Experiments e ON p.project_id = e.project_id\nJOIN \n    Samples s ON e.experiment_id = s.experiment_id\nWHERE \n    p.status = 'Активный'\n    AND s.type IN ('Грунт', 'Вода')\n    AND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.budget\nORDER BY \n    samples_count DESC\nLIMIT 5;",
            "gigachat_response": "SELECT pr.project_id, pr.title AS project_title, rl.first_name, rl.last_name, pr.budget,\n       COUNT(s.sample_id) AS samples_count, COUNT(DISTINCT ex.experiment_id) AS experiments_count,\n       ROUND(AVG(s.quantity), 2) AS avg_samples_per_experiment\nFROM Projects pr\nJOIN Researchers rl ON pr.project_lead_id = rl.researcher_id\nJOIN Experiments ex ON pr.project_id = ex.project_id\nJOIN Samples s ON ex.experiment_id = s.experiment_id\nWHERE pr.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND s.type IN ('Грунт', 'Вода')\nGROUP BY pr.project_id, pr.title, rl.first_name, rl.last_name, pr.budget\nORDER BY samples_count DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT pr.project_id, pr.title AS project_title, CONCAT(r.first_name, ' ', r.last_name) AS project_leader,\n       pr.budget AS total_budget, COUNT(DISTINCT ex.experiment_id) AS num_experiments,\n       COUNT(s.sample_id) AS samples_count, ROUND(AVG(COUNT(s.sample_id)), 2) OVER(PARTITION BY ex.experiment_id) AS avg_samples_per_exp\nFROM Projects pr\nJOIN Researchers r ON pr.project_lead_id = r.researcher_id\nJOIN Experiments ex ON pr.project_id = ex.project_id\nJOIN Samples s ON ex.experiment_id = s.experiment_id\nWHERE pr.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND s.type IN ('Грунт', 'Вода')\nGROUP BY pr.project_id, pr.title, r.first_name, r.last_name, pr.budget\nORDER BY samples_count DESC\nLIMIT 5;"
        },
        {
            "question": "Какие 4 отдела имеют наибольшее количество патентов со статусом 'Получен' за последние 5 лет? Включите информацию о руководителе отдела, учреждении, общем бюджете и соотношении количества патентов к количеству исследователей. Отсортируйте результаты по количеству патентов в убывающем порядке.",
            "sql_query": "SELECT d.department_id, d.name, d.budget, d.number_of_staff,\n       i.name AS institution_name,\n       r.first_name AS head_first_name, r.last_name AS head_last_name,\n       COUNT(DISTINCT pat.patent_id) AS patent_count,\n       COUNT(DISTINCT pat.patent_id) / d.number_of_staff AS patents_per_researcher\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Patents pat ON p.project_id = pat.project_id\nWHERE pat.status = 'Получен'\nAND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name, d.budget, d.number_of_staff, i.name, r.first_name, r.last_name\nORDER BY patent_count DESC\nLIMIT 4;",
            "gpt-4o_response": "SELECT d.department_id, d.name AS department_name, \n       CONCAT(r.first_name, ' ', r.last_name) AS head_name, \n       i.name AS institution_name, \n       d.budget, \n       COUNT(DISTINCT pt.patent_id) AS patents_count, \n       (COUNT(DISTINCT pt.patent_id) * 1.0 / d.number_of_staff) AS patents_per_researcher\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Patents pt ON p.project_id = pt.project_id\nWHERE pt.status = 'Получен'\nAND pt.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name, head_name, institution_name, d.budget, d.number_of_staff\nORDER BY patents_count DESC\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT d.department_id, d.name AS department_name, \n       CONCAT(r.first_name, ' ', r.last_name) AS head_name,\n       i.name AS institution_name, d.budget,\n       COUNT(DISTINCT pt.patent_id) AS patents_count,\n       (COUNT(DISTINCT pt.patent_id) * 1.0 / d.number_of_staff) AS patents_per_researcher\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Patents pt ON p.project_id = pt.project_id\nWHERE pt.status = 'Получен'\nAND pt.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name, head_name, institution_name, d.budget, d.number_of_staff\nORDER BY patents_count DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    d.name AS department_name,\n    r.first_name AS head_first_name,\n    r.last_name AS head_last_name,\n    i.name AS institution_name,\n    COUNT(p.patent_id) AS patent_count,\n    d.budget AS department_budget,\n    CAST(COUNT(p.patent_id) AS REAL) / d.number_of_staff AS patent_to_staff_ratio\nFROM\n    Departments d\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nJOIN\n    Researchers r ON d.head_id = r.researcher_id\nLEFT JOIN\n    Projects proj ON d.department_id = proj.department_id\nLEFT JOIN\n    Patents p ON proj.project_id = p.project_id\nWHERE\n    p.status = 'Получен' AND p.grant_date >= DATE('now', '-5 years')\nGROUP BY\n    d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nORDER BY\n    patent_count DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    d.name AS department_name,\n    r.first_name || ' ' || r.last_name AS head_name,\n    i.name AS institution_name,\n    COUNT(DISTINCT p.patent_id) AS patent_count,\n    d.budget AS department_budget,\n    COUNT(DISTINCT r2.researcher_id) AS researcher_count,\n    CAST(COUNT(DISTINCT p.patent_id) AS REAL) / COUNT(DISTINCT r2.researcher_id) AS patent_to_researcher_ratio\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects proj ON d.department_id = proj.department_id\nJOIN Patents p ON proj.project_id = p.project_id\nJOIN Researchers r2 ON proj.project_lead_id = r2.researcher_id\nWHERE p.status = 'Получен'\nAND p.grant_date >= DATE('now', '-5 years')\nGROUP BY d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget\nORDER BY patent_count DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    r.first_name AS head_first_name, \n    r.last_name AS head_last_name, \n    i.name AS institution_name, \n    d.budget, \n    COUNT(DISTINCT p.patent_id) AS patents_count, \n    (COUNT(DISTINCT p.patent_id) * 1.0 / COUNT(DISTINCT r.researcher_id)) AS patents_to_researchers_ratio\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Projects proj ON d.department_id = proj.department_id\nJOIN \n    Patents p ON proj.project_id = p.project_id\nWHERE \n    p.status = 'Получен'\nAND \n    p.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.department_id, \n    d.name, \n    r.first_name, \n    r.last_name, \n    i.name, \n    d.budget\nORDER BY \n    patents_count DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.name AS department_name, \n    r.first_name, \n    r.last_name, \n    i.name AS institution_name, \n    d.budget, \n    COUNT(DISTINCT p.patent_id) AS patents_count, \n    (COUNT(DISTINCT p.patent_id) * 1.0 / (SELECT COUNT(*) FROM Researchers WHERE department_id = d.department_id)) AS patents_to_researchers_ratio\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Patents pt ON p.project_id = pt.project_id\nWHERE \n    pt.status = 'Получен' \n    AND pt.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.name, r.first_name, r.last_name, i.name, d.budget, d.department_id\nORDER BY \n    patents_count DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    CONCAT(r.first_name, ' ', r.last_name) AS department_head,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    COUNT(p.patent_id) AS patents_count,\n    d.number_of_staff AS researchers_count,\n    (COUNT(p.patent_id) * 1.0 / d.number_of_staff) AS patents_per_researcher\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Projects pr ON d.department_id = pr.department_id\nJOIN \n    Patents p ON pr.project_id = p.project_id\nWHERE \n    p.status = 'Получен'\n    AND p.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nORDER BY \n    patents_count DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    CONCAT(r.first_name, ' ', r.last_name) AS head_name,\n    i.name AS institution_name,\n    d.budget AS total_budget,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    d.number_of_staff,\n    (COUNT(DISTINCT pat.patent_id) * 1.0 / d.number_of_staff) AS patents_per_researcher\nFROM Departments d\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON p.department_id = d.department_id\nJOIN Patents pat ON pat.project_id = p.project_id\nWHERE pat.status = 'Получен'\nAND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nORDER BY patents_count DESC\nLIMIT 4;",
            "gigachat_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    CONCAT(r.first_name, ' ', r.last_name) AS head_name, \n    i.name AS institution_name, \n    d.budget AS department_budget, \n    COUNT(patent_id) AS patents_count, \n    ROUND((COUNT(patent_id)*1.0)/d.number_of_staff, 2) AS patents_to_researchers_ratio\nFROM \n    Departments d\nJOIN \n    Researchers r ON d.head_id = r.researcher_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Patents pat ON d.department_id = pat.department_id\nWHERE \n    pat.status = 'Получен'\nAND \n    pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget, d.number_of_staff\nORDER BY \n    patents_count DESC\nLIMIT 4;",
            "gigachat_response_ru": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    CONCAT(r.first_name, ' ', r.last_name) AS head_name, \n    i.name AS institution_name, \n    d.budget AS department_budget, \n    COUNT(pat.patent_id) AS patents_count, \n    COUNT(DISTINCT res.researcher_id) AS researchers_count,\n    ROUND((COUNT(pat.patent_id)*1.0)/NULLIF(COUNT(DISTINCT res.researcher_id),0), 2) AS patents_to_researchers_ratio\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Researchers r ON d.head_id = r.researcher_id\nJOIN Projects prj ON d.department_id = prj.department_id\nJOIN Patents pat ON prj.project_id = pat.project_id AND pat.status = 'Получен' AND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN Researchers res ON prj.project_lead_id = res.researcher_id\nGROUP BY d.department_id, d.name, r.first_name, r.last_name, i.name, d.budget\nORDER BY patents_count DESC\nLIMIT 4;"
        },
        {
            "question": "Какие 6 экспериментов привели к наибольшему количеству публикаций с импакт-фактором выше 3.0 за последние 4 года? Включите информацию о статусе эксперимента, руководителе, используемом оборудовании и среднем импакт-факторе связанных публикаций. Отсортируйте результаты по количеству публикаций и среднему импакт-фактору в убывающем порядке.",
            "sql_query": "SELECT e.experiment_id, e.title, e.status, e.location,\n       r.first_name AS lead_first_name, r.last_name AS lead_last_name,\n       eq.name AS equipment_name, eq.model,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.impact_factor > 3.0\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY e.experiment_id, e.title, e.status, e.location, r.first_name, r.last_name, eq.name, eq.model\nORDER BY publication_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT e.experiment_id, e.title AS experiment_title, e.status AS experiment_status,\n       r.first_name AS lead_researcher_first_name, r.last_name AS lead_researcher_last_name,\n       eq.name AS equipment_name, eq.model AS equipment_model,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.impact_factor > 3.0\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name, eq.model\nORDER BY publication_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT e.experiment_id, e.title AS experiment_title, e.status AS experiment_status,\n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n       eq.name AS equipment_name, eq.model AS equipment_model,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Experiments e\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Publications pub ON p.project_id = pub.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nWHERE pub.impact_factor > 3.0\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name, eq.model\nORDER BY publication_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    e.experiment_id,\n    e.title AS experiment_title,\n    e.status AS experiment_status,\n    r.first_name AS lead_researcher_first_name,\n    r.last_name AS lead_researcher_last_name,\n    eq.name AS equipment_name,\n    COUNT(p.publication_id) AS publication_count,\n    AVG(p.impact_factor) AS average_impact_factor\nFROM\n    Experiments e\nJOIN\n    Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN\n    Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN\n    Publications p ON e.project_id = p.project_id\nWHERE\n    p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR) AND p.impact_factor > 3.0\nGROUP BY\n    e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name\nORDER BY\n    publication_count DESC, average_impact_factor DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    e.experiment_id,\n    e.title AS experiment_title,\n    e.status AS experiment_status,\n    r.first_name AS lead_researcher_first_name,\n    r.last_name AS lead_researcher_last_name,\n    eq.name AS equipment_name,\n    COUNT(p.publication_id) AS publication_count,\n    AVG(p.impact_factor) AS avg_impact_factor\nFROM\n    Experiments e\nJOIN\n    Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN\n    Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN\n    Publications p ON e.project_id = p.project_id\nWHERE\n    p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR) AND p.impact_factor > 3.0\nGROUP BY\n    e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name\nORDER BY\n    publication_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name AS equipment_name, \n       COUNT(DISTINCT pub.publication_id) AS publications_count, AVG(pub.impact_factor) AS avg_impact_factor\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Projects p ON e.project_id = p.project_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nAND pub.impact_factor > 3.0\nGROUP BY e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name\nORDER BY publications_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    e.experiment_id, \n    e.title, \n    e.status, \n    r.first_name, \n    r.last_name, \n    eq.name AS equipment_name, \n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN Projects p ON e.project_id = p.project_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nWHERE pub.impact_factor > 3.0\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name\nORDER BY publications_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT e.experiment_id, e.title AS experiment_title, e.status AS experiment_status, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n       eq.name AS equipment_name, eq.model AS equipment_model,\n       COUNT(p.publication_id) AS publication_count,\n       AVG(p.impact_factor) AS avg_impact_factor\nFROM Experiments e\nJOIN Projects pr ON e.project_id = pr.project_id\nJOIN Publications p ON pr.project_id = p.project_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN Equipment eq ON e.equipment_id = eq.equipment_id\nWHERE p.impact_factor > 3.0\nAND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name, eq.model\nORDER BY publication_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    e.experiment_id,\n    e.title AS experiment_title,\n    e.status AS experiment_status,\n    CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n    eq.name AS equipment_name,\n    eq.model AS equipment_model,\n    COUNT(p.publication_id) AS publications_count,\n    AVG(p.impact_factor) AS avg_impact_factor\nFROM \n    Experiments e\nJOIN \n    Researchers r ON e.lead_researcher_id = r.researcher_id\nLEFT JOIN \n    Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN \n    Projects pr ON e.project_id = pr.project_id\nJOIN \n    Publications p ON pr.project_id = p.project_id\nWHERE \n    p.impact_factor > 3.0\n    AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    e.experiment_id, e.title, e.status, r.first_name, r.last_name, eq.name, eq.model\nORDER BY \n    publications_count DESC, avg_impact_factor DESC\nLIMIT 6;",
            "gigachat_response": "SELECT exp.experiment_id, exp.title AS experiment_title, exp.`status`, res.first_name, res.last_name, equ.name AS equipment_used,\n       COUNT(pub.publication_id) AS publication_count, AVG(pub.impact_factor) AS average_impact_factor\nFROM Experiments exp\nJOIN Researchers res ON exp.lead_researcher_id = res.researcher_id\nJOIN Equipment equ ON exp.equipment_id = equ.equipment_id\nJOIN Projects prj ON exp.project_id = prj.project_id\nJOIN Publications pub ON prj.project_id = pub.project_id\nWHERE pub.impact_factor > 3.0 AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY exp.experiment_id, exp.title, exp.`status`, res.first_name, res.last_name, equ.name\nORDER BY publication_count DESC, average_impact_factor DESC\nLIMIT 6;",
            "gigachat_response_ru": "SELECT ex.experiment_id, ex.title AS experiment_title, ex.`status`, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n       eq.name AS equipment_used,\n       COUNT(pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS average_impact_factor\nFROM Experiments ex\nJOIN Researchers r ON ex.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON ex.equipment_id = eq.equipment_id\nJOIN Projects prj ON ex.project_id = prj.project_id\nJOIN Publications pub ON prj.project_id = pub.project_id\nWHERE pub.impact_factor > 3.0 AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY ex.experiment_id, ex.title, ex.`status`, r.first_name, r.last_name, eq.name\nORDER BY publication_count DESC, average_impact_factor DESC\nLIMIT 6;"
        },
        {
            "question": "Какие 7 фондов финансирования имеют наибольшую сумму активных грантов за последние 2 года? Включите название агентства, количество грантов, общую сумму финансирования и средний размер гранта. Отсортируйте по общей сумме и ограничьте 7.",
            "sql_query": "SELECT g.funding_agency, COUNT(*) AS grants_count, SUM(g.amount) AS total_amount, AVG(g.amount) AS avg_amount\nFROM Grants g\nWHERE g.status = 'Активный'\n  AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY g.funding_agency\nORDER BY total_amount DESC\nLIMIT 7;",
            "gpt-4o_response": "SELECT g.funding_agency, \n       COUNT(g.grant_id) AS grant_count, \n       SUM(g.amount) AS total_funding, \n       AVG(g.amount) AS average_grant_size\nFROM Grants g\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY g.funding_agency\nORDER BY total_funding DESC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT g.funding_agency,\n       COUNT(g.grant_id) AS grant_count,\n       SUM(g.amount) AS total_funding,\n       AVG(g.amount) AS average_grant_size\nFROM Grants g\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY g.funding_agency\nORDER BY total_funding DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    g.funding_agency,\n    COUNT(g.grant_id) AS grant_count,\n    SUM(g.amount) AS total_funding,\n    AVG(g.amount) AS average_grant_size\nFROM\n    Grants g\nWHERE\n    g.status = 'Активный'\n    AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    g.funding_agency\nORDER BY\n    total_funding DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    g.funding_agency,\n    COUNT(g.grant_id) AS grant_count,\n    SUM(g.amount) AS total_funding,\n    AVG(g.amount) AS average_grant_size\nFROM\n    Grants g\nWHERE\n    g.status = 'Активный'\n    AND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    g.funding_agency\nORDER BY\n    total_funding DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    g.funding_agency, \n    COUNT(g.grant_id) AS grant_count, \n    SUM(g.amount) AS total_funding, \n    AVG(g.amount) AS avg_grant_size\nFROM \n    Grants g\nWHERE \n    g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND g.status = 'Активный'\nGROUP BY \n    g.funding_agency\nORDER BY \n    total_funding DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    g.funding_agency, \n    COUNT(g.grant_id) AS grant_count, \n    SUM(g.amount) AS total_funding, \n    AVG(g.amount) AS avg_grant_size\nFROM \n    Grants g\nWHERE \n    g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND g.status = 'Активный'\nGROUP BY \n    g.funding_agency\nORDER BY \n    total_funding DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT g.funding_agency AS название_агентства, \n       COUNT(g.grant_id) AS количество_грантов, \n       SUM(g.amount) AS общая_сумма_финансирования, \n       AVG(g.amount) AS средний_размер_гранта\nFROM Grants g\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY g.funding_agency\nORDER BY общая_сумма_финансирования DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    g.funding_agency,\n    COUNT(g.grant_id) AS grants_count,\n    SUM(g.amount) AS total_funding,\n    AVG(g.amount) AS avg_grant_amount\nFROM Grants g\nJOIN Projects p ON g.project_id = p.project_id\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY g.funding_agency\nORDER BY total_funding DESC\nLIMIT 7;",
            "gigachat_response": "SELECT g.funding_agency, \n       COUNT(g.grant_id) AS grants_count, \n       SUM(g.amount) AS total_funding_amount, \n       AVG(g.amount) AS average_grant_size\nFROM Grants g\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY g.funding_agency\nORDER BY total_funding_amount DESC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT g.funding_agency AS agency_name,\n       COUNT(g.grant_id) AS grants_count,\n       SUM(g.amount) AS total_funding_amount,\n       AVG(g.amount) AS average_grant_size\nFROM Grants g\nWHERE g.status = 'Активный'\nAND g.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY g.funding_agency\nORDER BY total_funding_amount DESC\nLIMIT 7;"
        },
        {
            "question": "Какие 6 отделов имеют наибольшую нагрузку бюджета за последние 3 года, рассчитанную как отношение суммы бюджетов проектов к бюджету отдела? Включите идентификатор отдела, название, название института, бюджет отдела, суммарный бюджет проектов и коэффициент нагрузки. Отсортируйте по коэффициенту и ограничьте 6.",
            "sql_query": "SELECT d.department_id, d.name, i.name AS institution_name, d.budget AS department_budget, SUM(p.budget) AS projects_budget_sum, SUM(p.budget) / d.budget AS budget_load_ratio\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY d.department_id, d.name, i.name, d.budget\nHAVING COUNT(DISTINCT p.project_id) >= 2\nORDER BY budget_load_ratio DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    d.budget AS department_budget, \n    COALESCE(SUM(p.budget), 0) AS total_project_budget, \n    COALESCE(SUM(p.budget) / d.budget, 0) AS budget_load_ratio\nFROM \n    Departments d\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Projects p ON d.department_id = p.department_id \n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    d.department_id, d.name, i.name, d.budget\nORDER BY \n    budget_load_ratio DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    d.budget AS department_budget, \n    COALESCE(SUM(p.budget), 0) AS total_project_budget, \n    COALESCE(SUM(p.budget) / d.budget, 0) AS budget_load_ratio\nFROM \n    Departments d\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Projects p ON d.department_id = p.department_id \n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    d.department_id, d.name, i.name, d.budget\nORDER BY \n    budget_load_ratio DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    d.department_id,\n    d.name AS department_name,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    SUM(p.budget) AS total_project_budget,\n    (SUM(p.budget) / d.budget) AS budget_load_ratio\nFROM\n    Departments d\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN\n    Projects p ON d.department_id = p.department_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    d.department_id, d.name, i.name, d.budget\nORDER BY\n    budget_load_ratio DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    d.department_id,\n    d.name AS department_name,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    SUM(p.budget) AS total_project_budget,\n    SUM(p.budget) / d.budget AS budget_load_ratio\nFROM\n    Departments d\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN\n    Projects p ON d.department_id = p.department_id\nWHERE\n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    d.department_id, d.name, i.name, d.budget\nORDER BY\n    budget_load_ratio DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    d.budget AS department_budget, \n    SUM(p.budget) AS total_project_budget, \n    (SUM(p.budget) * 1.0 / d.budget) AS budget_load_coefficient\nFROM \n    Departments d\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nWHERE \n    p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    d.department_id, d.name, i.name, d.budget\nORDER BY \n    budget_load_coefficient DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    d.budget AS department_budget, \n    COALESCE(SUM(p.budget), 0) AS total_project_budget, \n    COALESCE(SUM(p.budget) / d.budget, 0) AS budget_load_coefficient\nFROM \n    Departments d\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN \n    Projects p ON d.department_id = p.department_id AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    d.department_id, d.name, i.name, d.budget\nORDER BY \n    budget_load_coefficient DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT d.department_id, d.name AS department_name, i.name AS institution_name, \n       d.budget AS department_budget, SUM(p.budget) AS total_projects_budget,\n       (SUM(p.budget) / d.budget) AS load_coefficient\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY d.department_id, d.name, i.name, d.budget\nORDER BY load_coefficient DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT d.department_id, d.name AS department_name, i.name AS institution_name, \n       d.budget AS department_budget, SUM(p.budget) AS total_project_budget, \n       (SUM(p.budget) / d.budget) AS load_coefficient\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY d.department_id, d.name, i.name, d.budget\nORDER BY load_coefficient DESC\nLIMIT 6;",
            "gigachat_response": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    SUM(p.budget) AS projects_total_budget,\n    ROUND(SUM(p.budget)/d.budget, 2) AS load_coefficient\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE p.start_date BETWEEN DATE_SUB(NOW(), INTERVAL 3 YEAR) AND NOW()\nGROUP BY d.department_id, d.name, i.name, d.budget\nORDER BY load_coefficient DESC\nLIMIT 6;",
            "gigachat_response_ru": "SELECT \n    d.department_id,\n    d.name AS department_name,\n    i.name AS institution_name,\n    d.budget AS department_budget,\n    SUM(p.budget) AS projects_total_budget,\n    ROUND(SUM(p.budget)/d.budget, 2) AS load_coefficient\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE p.start_date BETWEEN DATE_SUB(NOW(), INTERVAL 3 YEAR) AND NOW()\nGROUP BY d.department_id, d.name, i.name, d.budget\nORDER BY load_coefficient DESC\nLIMIT 6;"
        },
        {
            "question": "Какие 8 исследователей за последние 5 лет одновременно получили патенты и опубликовали статьи? Включите имя исследователя, количество патентов, количество публикаций и средний импакт-фактор. Отсортируйте по количеству патентов, затем по публикациям и ограничьте 8.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, COUNT(DISTINCT pat.patent_id) AS patents_count, COUNT(DISTINCT pub.publication_id) AS publications_count, AVG(pub.impact_factor) AS avg_impact_factor\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Patents pat ON p.project_id = pat.project_id\nJOIN Publications pub ON p.project_id = pub.project_id\nWHERE pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n  AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name\nHAVING patents_count > 0 AND publications_count > 0\nORDER BY patents_count DESC, publications_count DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name,\n       COUNT(DISTINCT pat.patent_id) AS patent_count,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Researchers r\nJOIN Patents pat ON r.researcher_id = pat.inventor_id\nJOIN Publications pub ON r.researcher_id = pub.project_id\nWHERE pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name\nHAVING patent_count > 0 AND publication_count > 0\nORDER BY patent_count DESC, publication_count DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name,\n       COUNT(DISTINCT pat.patent_id) AS patent_count,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       AVG(pub.impact_factor) AS avg_impact_factor\nFROM Researchers r\nJOIN Patents pat ON r.researcher_id = pat.inventor_id\nJOIN Publications pub ON r.researcher_id = pub.project_id\nWHERE pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name\nHAVING patent_count > 0 AND publication_count > 0\nORDER BY patent_count DESC, publication_count DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT p.patent_id) AS patent_count,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM\n    Researchers r\nLEFT JOIN\n    Patents p ON r.researcher_id = p.inventor_id\nLEFT JOIN\n    Projects proj ON p.project_id = proj.project_id\nLEFT JOIN\n    Publications pub ON proj.project_id = pub.project_id\nWHERE\n    p.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name\nHAVING\n    COUNT(DISTINCT p.patent_id) > 0\n    AND COUNT(DISTINCT pub.publication_id) > 0\nORDER BY\n    patent_count DESC,\n    publication_count DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT p.patent_id) AS patent_count,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS average_impact_factor\nFROM\n    Researchers r\nLEFT JOIN\n    Patents p ON r.researcher_id = p.inventor_id\nLEFT JOIN\n    Projects proj ON p.project_id = proj.project_id\nLEFT JOIN\n    Publications pub ON proj.project_id = pub.project_id\nWHERE\n    p.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name\nHAVING\n    COUNT(DISTINCT p.patent_id) > 0 AND COUNT(DISTINCT pub.publication_id) > 0\nORDER BY\n    patent_count DESC, publication_count DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n  r.researcher_id, \n  r.first_name, \n  r.last_name, \n  COUNT(DISTINCT p.patent_id) AS patents_count,\n  COUNT(DISTINCT pub.publication_id) AS publications_count,\n  AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n  Researchers r\n  LEFT JOIN Patents p ON r.researcher_id = p.inventor_id AND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n  LEFT JOIN Projects pr ON p.project_id = pr.project_id\n  LEFT JOIN Publications pub ON pr.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nWHERE \n  (p.patent_id IS NOT NULL OR pub.publication_id IS NOT NULL)\nGROUP BY \n  r.researcher_id, r.first_name, r.last_name\nHAVING \n  COUNT(DISTINCT p.patent_id) > 0 AND COUNT(DISTINCT pub.publication_id) > 0\nORDER BY \n  patents_count DESC, publications_count DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    r.first_name, \n    r.last_name, \n    COUNT(DISTINCT p.patent_id) AS patent_count,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Researchers r\nJOIN \n    Patents p ON r.researcher_id = p.inventor_id\nJOIN \n    Projects pr ON p.project_id = pr.project_id\nJOIN \n    Publications pub ON pr.project_id = pub.project_id\nWHERE \n    p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nORDER BY \n    patent_count DESC, publication_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT p.patent_id) AS patents_count,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Researchers r\nJOIN \n    Patents p ON r.researcher_id = p.inventor_id\nJOIN \n    Publications pub ON r.researcher_id = (SELECT project_lead_id FROM Projects WHERE project_id = pub.project_id)\nWHERE \n    p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nORDER BY \n    patents_count DESC,\n    publications_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.first_name, \n    r.last_name, \n    COUNT(DISTINCT p.patent_id) AS patents_count, \n    COUNT(DISTINCT pub.publication_id) AS publications_count, \n    AVG(pub.impact_factor) AS avg_impact_factor\nFROM \n    Researchers r\nJOIN \n    Patents p ON r.researcher_id = p.inventor_id\nJOIN \n    Publications pub ON pub.project_id = p.project_id\nWHERE \n    p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name\nORDER BY \n    patents_count DESC, \n    publications_count DESC\nLIMIT 8;",
            "gigachat_response": "SELECT \n    r.first_name, r.last_name,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS average_impact_factor\nFROM Researchers r\nJOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.grant_date BETWEEN DATE_SUB(NOW(), INTERVAL 5 YEAR) AND NOW()\nJOIN Publications pub ON r.researcher_id = pub.project_id IN (SELECT project_id FROM Projects WHERE project_lead_id = r.researcher_id) AND pub.publication_date BETWEEN DATE_SUB(NOW(), INTERVAL 5 YEAR) AND NOW()\nGROUP BY r.researcher_id, r.first_name, r.last_name\nORDER BY patents_count DESC, publications_count DESC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT \n    r.first_name, r.last_name,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    AVG(pub.impact_factor) AS average_impact_factor\nFROM Researchers r\nJOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN Publications pub ON r.researcher_id = pub.project_id IN (SELECT project_id FROM Projects WHERE project_lead_id = r.researcher_id) AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name\nHAVING patents_count > 0 AND publications_count > 0\nORDER BY patents_count DESC, publications_count DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 5 моделей оборудования за последние 2 года использовались в наибольшем числе экспериментов? Включите идентификатор, название оборудования, модель, количество экспериментов и среднюю продолжительность эксперимента (дней). Отсортируйте по количеству экспериментов и ограничьте 5.",
            "sql_query": "SELECT eq.equipment_id, eq.name, eq.model, COUNT(e.experiment_id) AS experiments_count, AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "gpt-4o_response": "SELECT eq.equipment_id, eq.name, eq.model, COUNT(e.experiment_id) AS experiments_count, AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT eq.equipment_id, eq.name, eq.model, COUNT(e.experiment_id) AS experiments_count, AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT eq.equipment_id, eq.name, eq.model, COUNT(e.experiment_id) AS experiments_count, AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT eq.equipment_id, eq.name, eq.model, COUNT(e.experiment_id) AS experiments_count, AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT eq.equipment_id, eq.name, eq.model, \n       COUNT(e.experiment_id) AS experiments_count, \n       AVG(DATEDIFF(COALESCE(e.end_date, CURRENT_DATE), e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT eq.equipment_id, eq.name, eq.model, \n       COUNT(e.experiment_id) AS experiments_count, \n       AVG(DATEDIFF(COALESCE(e.end_date, CURRENT_DATE), e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT eq.equipment_id, eq.name, eq.model, COUNT(e.experiment_id) AS experiments_count, AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT eq.equipment_id, eq.name, eq.model, COUNT(e.experiment_id) AS experiments_count, AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "gigachat_response": "SELECT eq.equipment_id, eq.name, eq.model, \n       COUNT(e.experiment_id) AS experiments_count, \n       AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT eq.equipment_id, eq.name, eq.model, \n       COUNT(e.experiment_id) AS experiments_count, \n       AVG(DATEDIFF(e.end_date, e.start_date)) AS avg_duration_days\nFROM Equipment eq\nJOIN Experiments e ON eq.equipment_id = e.equipment_id\nWHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY eq.equipment_id, eq.name, eq.model\nORDER BY experiments_count DESC\nLIMIT 5;"
        },
        {
            "question": "Какие 7 образцов в статусе 'Активный' имеют наибольший объем хранения (в единицах измерения)? Включите информацию о типе образца, условии хранения, дате сбора и эксперименте, к которому они относятся. Отсортируйте результаты по объему образца в убывающем порядке за последние 18 месяцев.",
            "sql_query": "SELECT s.sample_id, s.type, s.quantity, s.unit, s.condition, s.collection_date, s.storage_location,\n       e.title AS experiment_title, e.location AS experiment_location\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "gpt-4o_response": "SELECT s.sample_id, s.type AS sample_type, s.quantity, s.unit, s.condition, s.collection_date, \n       e.title AS experiment_title\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT s.sample_id, s.type AS sample_type, s.quantity, s.unit, s.condition, s.collection_date, \n       e.title AS experiment_title\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT \n    s.sample_id,\n    s.type,\n    s.`condition`,\n    s.collection_date,\n    s.quantity,\n    s.unit,\n    e.title AS experiment_title\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.`status` = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    s.sample_id,\n    s.type AS sample_type,\n    s.condition AS sample_condition,\n    s.collection_date,\n    s.quantity,\n    s.unit,\n    e.title AS experiment_title\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT s.sample_id, s.type, s.condition, s.collection_date, e.experiment_id, \n       e.title AS experiment_title, s.quantity, s.unit, s.storage_location\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT s.sample_id, s.type, s.condition, s.collection_date, e.title AS experiment_title, \n       s.quantity, s.unit, s.storage_location\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT s.sample_id, s.type, s.condition, s.collection_date, s.quantity, s.unit, \n       e.title AS experiment_title, e.experiment_id\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    s.sample_id,\n    s.type,\n    s.quantity,\n    s.unit,\n    s.condition,\n    s.collection_date,\n    e.experiment_id,\n    e.title AS experiment_title\nFROM \n    Samples s\nJOIN \n    Experiments e ON s.experiment_id = e.experiment_id\nWHERE \n    s.status = 'Активный'\nAND \n    s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY \n    s.quantity DESC\nLIMIT 7;",
            "gigachat_response": "SELECT s.sample_id, s.`type`, s.quantity, s.unit, s.`condition`, s.collection_date, ex.title AS experiment_title\nFROM Samples s\nJOIN Experiments ex ON s.experiment_id = ex.experiment_id\nWHERE s.`status` = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT s.sample_id, s.`type`, s.quantity, s.unit, s.storage_location, s.condition, s.collection_date, ex.title AS experiment_title\nFROM Samples s\nJOIN Experiments ex ON s.experiment_id = ex.experiment_id\nWHERE s.status = 'Активный'\nAND s.collection_date >= DATE_SUB(CURRENT_DATE, INTERVAL 18 MONTH)\nORDER BY s.quantity DESC\nLIMIT 7;"
        },
        {
            "question": "Какие 10 проектов имеют связанные датасеты в формате 'CSV' или 'JSON' с уровнем доступа 'Открытый'? Включите информацию о названии проекта, руководителе, финансирующем агентстве, количестве датасетов и их общем размере. Отсортируйте результаты по общему размеру данных в убывающем порядке за последние 2 года.",
            "sql_query": "SELECT p.project_id, p.title, p.status, p.funding_agency,\n       r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT ds.dataset_id) AS datasets_count,\n       SUM(ds.size) AS total_data_size\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE (ds.format = 'CSV' OR ds.format = 'JSON')\nAND ds.access_level = 'Открытый'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY p.project_id, p.title, p.status, p.funding_agency, r.first_name, r.last_name, r.position\nORDER BY total_data_size DESC\nLIMIT 10;",
            "gpt-4o_response": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    r.first_name AS lead_first_name, \n    r.last_name AS lead_last_name, \n    p.funding_agency, \n    COUNT(ds.dataset_id) AS dataset_count, \n    SUM(ds.size) AS total_dataset_size\nFROM \n    Projects p\nJOIN \n    DataSets ds ON p.project_id = ds.project_id\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nWHERE \n    (ds.format = 'CSV' OR ds.format = 'JSON') \n    AND ds.access_level = 'Открытый'\n    AND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY \n    total_dataset_size DESC\nLIMIT 10;",
            "gpt-4o_response_ru": "SELECT \n    p.title AS project_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n    p.funding_agency,\n    COUNT(ds.dataset_id) AS dataset_count,\n    SUM(ds.size) AS total_dataset_size\nFROM \n    Projects p\nJOIN \n    DataSets ds ON p.project_id = ds.project_id\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nWHERE \n    ds.format IN ('CSV', 'JSON')\n    AND ds.access_level = 'Открытый'\n    AND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY \n    total_dataset_size DESC\nLIMIT 10;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.title AS project_title,\n    r.first_name AS project_lead_first_name,\n    r.last_name AS project_lead_last_name,\n    p.funding_agency,\n    COUNT(DISTINCT ds.dataset_id) AS dataset_count,\n    SUM(ds.size) AS total_dataset_size\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id\nWHERE\n    ds.format IN ('CSV', 'JSON')\n    AND ds.access_level = 'Открытый'\n    AND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY\n    total_dataset_size DESC\nLIMIT 10;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.title AS project_title,\n    r.first_name AS project_lead_first_name,\n    r.last_name AS project_lead_last_name,\n    p.funding_agency,\n    COUNT(DISTINCT ds.dataset_id) AS dataset_count,\n    SUM(ds.size) AS total_dataset_size\nFROM\n    Projects p\nJOIN\n    Researchers r ON p.project_lead_id = r.researcher_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id\nWHERE\n    (ds.format = 'CSV' OR ds.format = 'JSON')\n    AND ds.access_level = 'Открытый'\n    AND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY\n    total_dataset_size DESC\nLIMIT 10;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.project_id, p.title, r.first_name, r.last_name, p.funding_agency, \n       COUNT(DISTINCT ds.dataset_id) AS dataset_count, \n       SUM(ds.size) AS total_size\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE ds.format IN ('CSV', 'JSON')\nAND ds.access_level = 'Открытый'\nAND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY total_size DESC\nLIMIT 10;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.project_id, \n    p.title AS project_title, \n    r.first_name, \n    r.last_name, \n    p.funding_agency, \n    COUNT(DISTINCT ds.dataset_id) AS datasets_count, \n    SUM(ds.size) AS total_size\nFROM \n    Projects p\nJOIN \n    Researchers r ON p.project_lead_id = r.researcher_id\nJOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    ds.format IN ('CSV', 'JSON') \n    AND ds.access_level = 'Открытый' \n    AND p.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY \n    total_size DESC\nLIMIT 10;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.project_id, p.title AS project_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS project_lead,\n       p.funding_agency,\n       COUNT(ds.dataset_id) AS dataset_count,\n       SUM(ds.size) AS total_size\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE ds.format IN ('CSV', 'JSON')\nAND ds.access_level = 'Открытый'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY total_size DESC\nLIMIT 10;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.project_id, p.title AS project_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS project_lead, \n       p.funding_agency, \n       COUNT(ds.dataset_id) AS datasets_count, \n       SUM(ds.size) AS total_data_size\nFROM Projects p\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE ds.format IN ('CSV', 'JSON') \nAND ds.access_level = 'Открытый'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY p.project_id, p.title, r.first_name, r.last_name, p.funding_agency\nORDER BY total_data_size DESC\nLIMIT 10;",
            "gigachat_response": "SELECT pr.project_id, pr.title AS project_title, CONCAT(r.first_name, ' ', r.last_name) AS project_leader, pr.funding_agency,\n       COUNT(ds.dataset_id) AS datasets_count, SUM(ds.size) AS total_size\nFROM Projects pr\nJOIN DataSets ds ON pr.project_id = ds.project_id\nJOIN Researchers r ON pr.project_lead_id = r.researcher_id\nWHERE ds.format IN ('CSV', 'JSON') AND ds.access_level = 'Открытый'\nAND pr.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY pr.project_id, pr.title, r.first_name, r.last_name, pr.funding_agency\nORDER BY total_size DESC\nLIMIT 10;",
            "gigachat_response_ru": "SELECT pr.project_id, pr.title AS project_title, CONCAT(r.first_name, ' ', r.last_name) AS project_leader, pr.funding_agency,\n       COUNT(ds.dataset_id) AS datasets_count, SUM(ds.size) AS total_size\nFROM Projects pr\nJOIN DataSets ds ON pr.project_id = ds.project_id\nJOIN Researchers r ON pr.project_lead_id = r.researcher_id\nWHERE ds.format IN ('CSV', 'JSON') AND ds.access_level = 'Открытый'\nAND pr.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY pr.project_id, pr.title, r.first_name, r.last_name, pr.funding_agency\nORDER BY total_size DESC\nLIMIT 10;"
        },
        {
            "question": "Какие 6 исследователей женского пола имеют наибольшее количество завершенных экспериментов в различных городах за последние 4 года? Включите информацию о должности, гражданстве, количестве экспериментов, уникальных локациях и среднем бюджете проектов. Отсортируйте результаты по количеству экспериментов в убывающем порядке.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.nationality,\n       COUNT(DISTINCT e.experiment_id) AS experiments_count,\n       COUNT(DISTINCT e.location) AS unique_locations,\n       AVG(p.budget) AS avg_project_budget\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Projects p ON e.project_id = p.project_id\nWHERE r.gender = 'Женский'\nAND e.status = 'Завершено'\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY experiments_count DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.nationality,\n       COUNT(DISTINCT e.experiment_id) AS experiment_count,\n       COUNT(DISTINCT e.location) AS unique_locations,\n       AVG(p.budget) AS avg_project_budget\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Projects p ON e.project_id = p.project_id\nWHERE r.gender = 'Женский'\nAND e.status = 'Завершено'\nAND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY experiment_count DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.nationality,\n       COUNT(DISTINCT e.experiment_id) AS experiment_count,\n       COUNT(DISTINCT e.location) AS unique_locations,\n       AVG(p.budget) AS avg_project_budget\nFROM Researchers r\nJOIN Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN Projects p ON e.project_id = p.project_id\nWHERE r.gender = 'Женский'\nAND e.status = 'Завершено'\nAND e.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY experiment_count DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.first_name,\n    r.last_name,\n    r.position,\n    r.nationality,\n    COUNT(DISTINCT e.experiment_id) AS total_experiments,\n    COUNT(DISTINCT e.location) AS unique_locations,\n    AVG(p.budget) AS average_project_budget\nFROM\n    Researchers r\nJOIN\n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN\n    Projects p ON e.project_id = p.project_id\nWHERE\n    r.gender = 'Женский'\n    AND e.status = 'Завершено'\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY\n    total_experiments DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.first_name,\n    r.last_name,\n    r.position,\n    r.nationality,\n    COUNT(DISTINCT e.experiment_id) AS experiment_count,\n    COUNT(DISTINCT e.location) AS unique_locations,\n    AVG(p.budget) AS average_project_budget\nFROM\n    Researchers r\nJOIN\n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN\n    Projects p ON e.project_id = p.project_id\nWHERE\n    r.gender = 'Женский'\n    AND e.status = 'Завершено'\n    AND e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY\n    experiment_count DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.gender, r.nationality, \n       COUNT(DISTINCT e.experiment_id) AS experiments_count, \n       COUNT(DISTINCT e.location) AS unique_locations, \n       AVG(p.budget) AS avg_project_budget\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Experiments e ON p.project_id = e.project_id\nWHERE r.gender = 'Женский'\nAND e.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nAND e.status = 'Завершено'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.gender, r.nationality\nORDER BY experiments_count DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.nationality, \n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    COUNT(DISTINCT e.location) AS unique_locations,\n    AVG(p.budget) AS avg_project_budget\nFROM \n    Researchers r\nJOIN \n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN \n    Projects p ON e.project_id = p.project_id\nWHERE \n    r.gender = 'Женский'\nAND \n    e.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nAND \n    e.status = 'Завершено'\nGROUP BY \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.nationality\nORDER BY \n    experiments_count DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    r.position,\n    r.nationality,\n    COUNT(DISTINCT e.experiment_id) AS experiment_count,\n    COUNT(DISTINCT e.location) AS unique_locations,\n    AVG(p.budget) AS avg_project_budget\nFROM \n    Researchers r\nJOIN \n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN \n    Projects p ON e.project_id = p.project_id\nWHERE \n    r.gender = 'Женский'\n    AND e.status = 'Завершено'\n    AND e.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY \n    experiment_count DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    r.position,\n    r.nationality,\n    COUNT(DISTINCT e.experiment_id) AS experiments_count,\n    COUNT(DISTINCT e.location) AS unique_locations,\n    AVG(p.budget) AS avg_project_budget\nFROM \n    Researchers r\nJOIN \n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN \n    Projects p ON e.project_id = p.project_id\nWHERE \n    r.gender = 'Женский'\n    AND e.status = 'Завершено'\n    AND e.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY \n    experiments_count DESC\nLIMIT 6;",
            "gigachat_response": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.nationality, \n    COUNT(DISTINCT e.experiment_id) AS experiment_count, \n    COUNT(DISTINCT e.location) AS unique_locations, \n    AVG(p.budget) AS average_project_budget\nFROM \n    Researchers r\nJOIN \n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN \n    Projects p ON e.project_id = p.project_id\nWHERE \n    r.gender = 'Женский'\nAND \n    e.end_date BETWEEN DATE_SUB(NOW(), INTERVAL 4 YEAR) AND NOW()\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY \n    experiment_count DESC\nLIMIT 6;",
            "gigachat_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.nationality, \n    COUNT(DISTINCT e.experiment_id) AS experiment_count, \n    COUNT(DISTINCT e.location) AS unique_locations, \n    AVG(p.budget) AS average_project_budget\nFROM \n    Researchers r\nJOIN \n    Experiments e ON r.researcher_id = e.lead_researcher_id\nJOIN \n    Projects p ON e.project_id = p.project_id\nWHERE \n    r.gender = 'Женский'\nAND \n    e.end_date BETWEEN DATE_SUB(NOW(), INTERVAL 4 YEAR) AND NOW()\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position, r.nationality\nORDER BY \n    experiment_count DESC\nLIMIT 6;"
        },
        {
            "question": "Какие 8 этических одобрений со статусом 'Одобрено' или 'Одобрено с условиями' были получены быстрее всего (минимальное количество дней между подачей и одобрением) за последние 2 года? Включите информацию о проекте, комитете, контактном лице и времени одобрения в днях. Отсортируйте результаты по времени одобрения в возрастающем порядке.",
            "sql_query": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, p.funding_agency,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "gpt-4o_response": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person, \n       p.title AS project_title, p.funding_agency, \n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, p.funding_agency,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    ea.approval_id,\n    p.title AS project_title,\n    ea.committee_name,\n    ea.contact_person,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM\n    EthicsApprovals ea\nJOIN\n    Projects p ON ea.project_id = p.project_id\nWHERE\n    (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\n    AND ea.application_date >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 YEAR)\nORDER BY\n    approval_days ASC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    ea.approval_id,\n    p.title AS project_title,\n    ea.committee_name,\n    ea.contact_person,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM\n    EthicsApprovals ea\nJOIN\n    Projects p ON ea.project_id = p.project_id\nWHERE\n    (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\n    AND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY\n    approval_days ASC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, p.funding_agency,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, p.funding_agency,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT ea.approval_id, ea.status, p.title AS project_title, ea.committee_name, \n       ea.contact_person, DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT ea.approval_id, p.title AS project_title, ea.committee_name, \n       ea.contact_person, ea.contact_email, ea.contact_phone,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n       ea.status, ea.application_date, ea.approval_date\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "gigachat_response": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, p.funding_agency,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, p.funding_agency,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 8;"
        },
        {
            "question": "Какие 12 коллабораций типа 'Исследовательский' или 'Технический' имеют наибольшую продолжительность (в днях) среди всех активных на данный момент? Включите информацию об учреждениях-участниках, контактных лицах и общем бюджете связанных проектов. Отсортируйте результаты по продолжительности в убывающем порядке.",
            "sql_query": "SELECT c.collaboration_id, c.type, c.description,\n       i.name AS institution_name, i.country, i.city,\n       c.contact_person, c.contact_email,\n       DATEDIFF(COALESCE(c.end_date, CURRENT_DATE), c.start_date) AS duration_days,\n       SUM(p.budget) AS total_projects_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE (c.type = 'Исследовательский' OR c.type = 'Технический')\nAND (c.end_date IS NULL OR c.end_date >= CURRENT_DATE)\nGROUP BY c.collaboration_id, c.type, c.description, i.name, i.country, i.city, c.contact_person, c.contact_email, c.start_date, c.end_date\nORDER BY duration_days DESC\nLIMIT 12;",
            "gpt-4o_response": "SELECT c.collaboration_id, c.type, i.name AS institution_name, i.country, i.city,\n       c.contact_person, c.contact_email, c.contact_phone,\n       TIMESTAMPDIFF(DAY, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_days,\n       SUM(p.budget) AS total_project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE (c.type = 'Исследовательский' OR c.type = 'Технический')\nAND c.end_date IS NULL\nGROUP BY c.collaboration_id, c.type, i.name, i.country, i.city, c.contact_person, c.contact_email, c.contact_phone, c.start_date, c.end_date\nORDER BY duration_days DESC\nLIMIT 12;",
            "gpt-4o_response_ru": "SELECT c.collaboration_id, c.type, i.name AS institution_name, i.country, i.city,\n       c.contact_person, c.contact_email, c.contact_phone,\n       TIMESTAMPDIFF(DAY, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_days,\n       SUM(p.budget) AS total_project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE (c.type = 'Исследовательский' OR c.type = 'Технический')\nAND c.end_date IS NULL\nGROUP BY c.collaboration_id, c.type, i.name, i.country, i.city, c.contact_person, c.contact_email, c.contact_phone, c.start_date, c.end_date\nORDER BY duration_days DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.collaboration_id,\n    c.type,\n    i.name AS institution_name,\n    c.contact_person,\n    DATEDIFF(c.end_date, c.start_date) AS collaboration_duration_days,\n    SUM(p.budget) AS total_project_budget\nFROM\n    Collaborations c\nJOIN\n    Institutions i ON c.institution_id = i.institution_id\nJOIN\n    Projects p ON c.project_id = p.project_id\nWHERE\n    (c.type = 'Исследовательский' OR c.type = 'Технический')\n    AND c.end_date >= CURRENT_DATE\nORDER BY\n    collaboration_duration_days DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    c.collaboration_id,\n    i.name AS institution_name,\n    c.contact_person,\n    DATEDIFF(c.end_date, c.start_date) AS duration_days,\n    SUM(p.budget) AS total_project_budget\nFROM\n    Collaborations c\nJOIN\n    Institutions i ON c.institution_id = i.institution_id\nJOIN\n    Projects p ON c.project_id = p.project_id\nWHERE\n    (c.type = 'Исследовательский' OR c.type = 'Технический')\n    AND c.end_date >= CURRENT_DATE\nORDER BY\n    duration_days DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.collaboration_id, c.type, c.start_date, c.end_date, \n       DATEDIFF(COAALESCE(c.end_date, CURRENT_DATE), c.start_date) AS duration_days,\n       i.name AS institution_name, c.contact_person, c.contact_email, \n       SUM(p.budget) AS total_project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE c.type IN ('Исследовательский', 'Технический')\nGROUP BY c.collaboration_id, c.type, c.start_date, c.end_date, i.name, c.contact_person, c.contact_email\nORDER BY duration_days DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.collaboration_id, c.type, i.name AS institution_name, c.contact_person, \n       DATEDIFF(COALESCE(c.end_date, CURRENT_DATE), c.start_date) AS collaboration_duration,\n       SUM(p.budget) AS total_project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE c.type IN ('Исследовательский', 'Технический')\nAND p.status = 'Активный'\nGROUP BY c.collaboration_id, c.type, i.name, c.contact_person, c.start_date, c.end_date\nORDER BY collaboration_duration DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.collaboration_id, c.type, \n       DATEDIFF(COALESCE(c.end_date, CURRENT_DATE), c.start_date) AS duration_days,\n       i.name AS institution_name, i.country, i.city,\n       c.contact_person, c.contact_email, c.contact_phone,\n       p.title AS project_title, p.budget AS project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE (c.type = 'Исследовательский' OR c.type = 'Технический')\nAND (c.end_date IS NULL OR c.end_date >= CURRENT_DATE)\nORDER BY duration_days DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.collaboration_id, c.type, \n       DATEDIFF(c.end_date, c.start_date) AS duration_days,\n       i.name AS institution_name, i.country, i.city, \n       i.email AS institution_email, i.website,\n       c.contact_person, c.contact_email, c.contact_phone,\n       p.title AS project_title, p.budget AS project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE (c.type = 'Исследовательский' OR c.type = 'Технический')\nAND c.end_date >= CURRENT_DATE\nORDER BY duration_days DESC\nLIMIT 12;",
            "gigachat_response": "SELECT \n    c.collaboration_id,\n    c.type,\n    i.name AS institution_name,\n    c.contact_person,\n    c.contact_email,\n    c.contact_phone,\n    TIMESTAMPDIFF(DAY, c.start_date, LEAST(COALESCE(c.end_date, CURDATE()), CURDATE())) AS duration_days,\n    SUM(p.budget) AS total_project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE (c.type = 'Исследовательский' OR c.type = 'Технический')\nAND (COALESCE(c.end_date, CURDATE()) >= CURDATE())\nORDER BY duration_days DESC\nLIMIT 12;",
            "gigachat_response_ru": "SELECT \n    c.collaboration_id,\n    c.type,\n    i.name AS institution_name,\n    c.contact_person,\n    c.contact_email,\n    c.contact_phone,\n    TIMESTAMPDIFF(DAY, c.start_date, LEAST(COALESCE(c.end_date, CURDATE()), CURDATE())) AS duration_days,\n    SUM(p.budget) AS total_project_budget\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nWHERE (c.type = 'Исследовательский' OR c.type = 'Технический')\nAND (COALESCE(c.end_date, CURDATE()) >= CURDATE())\nORDER BY duration_days DESC\nLIMIT 12;"
        },
        {
            "question": "Какие 9 образцов в состоянии 'В обработке' или 'Очистка' имеют наименьшее время хранения? Включите информацию о типе образца, месте хранения, описании и связанном эксперименте. Отсортируйте результаты по времени хранения в возрастающем порядке.",
            "sql_query": "SELECT s.sample_id, s.type, s.status, s.storage_location, s.description,\n       s.collection_date, s.condition,\n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_days,\n       e.title AS experiment_title, e.status AS experiment_status\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status IN ('В обработке', 'Очистка')\nORDER BY storage_days ASC\nLIMIT 9;",
            "gpt-4o_response": "SELECT s.sample_id, s.type AS sample_type, s.storage_location, s.description, \n       e.title AS experiment_title, DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_days\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status IN ('В обработке', 'Очистка')\nORDER BY storage_days ASC\nLIMIT 9;",
            "gpt-4o_response_ru": "SELECT s.sample_id, s.type AS sample_type, s.storage_location, s.description, \n       e.title AS experiment_title, DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_days\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status IN ('В обработке', 'Очистка')\nORDER BY storage_days ASC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    s.sample_id,\n    s.type,\n    s.storage_location,\n    s.description,\n    e.title AS experiment_title,\n    s.collection_date,\n    CURRENT_DATE AS today,\n    JULIANDAY(CURRENT_DATE) - JULIANDAY(s.collection_date) AS storage_duration\nFROM\n    Samples s\nJOIN\n    Experiments e ON s.experiment_id = e.experiment_id\nWHERE\n    s.status IN ('В обработке', 'Очистка')\nORDER BY\n    storage_duration ASC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    s.sample_id,\n    s.type,\n    s.storage_location,\n    s.description,\n    s.condition,\n    s.status,\n    e.experiment_id,\n    DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_duration_days\nFROM\n    Samples s\nJOIN\n    Experiments e ON s.experiment_id = e.experiment_id\nWHERE\n    s.status IN ('В обработке', 'Очистка')\nORDER BY\n    storage_duration_days ASC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT s.sample_id, s.type, s.storage_location, s.description, e.title AS experiment_title,\n       DATEDIFF(COALESCE(s.collection_date, CURRENT_DATE), s.collection_date) AS storage_time\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status IN ('В обработке', 'Очистка')\nORDER BY storage_time ASC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT s.sample_id, s.type, s.storage_location, s.description, e.title AS experiment_title,\n       DATEDIFF(COALESCE(s.collection_date, CURRENT_DATE), s.collection_date) AS storage_time\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status IN ('В обработке', 'Очистка')\nORDER BY storage_time ASC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT s.sample_id, s.type, s.storage_location, s.description, e.title AS experiment_title, \n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_days\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status = 'В обработке' OR s.status = 'Очистка'\nORDER BY storage_days ASC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT s.sample_id, s.type, s.storage_location, s.description, \n       e.title AS experiment_title, \n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_days\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.status IN ('В обработке', 'Очистка')\nORDER BY storage_days ASC\nLIMIT 9;",
            "gigachat_response": "SELECT s.sample_id, s.`type`, s.storage_location, s.`description`,\n       e.experiment_id, e.title AS experiment_title,\n       TIMESTAMPDIFF(DAY, s.collection_date, CURRENT_DATE) AS days_stored\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.`status` IN ('В обработке', 'Очистка')\nORDER BY days_stored ASC\nLIMIT 9;",
            "gigachat_response_ru": "SELECT s.sample_id, s.`type`, s.collection_date, s.storage_location, s.`description`,\n       e.experiment_id, e.title AS experiment_title\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.`status` IN ('В обработке', 'Очистка')\nORDER BY s.collection_date ASC\nLIMIT 9;"
        },
        {
            "question": "Какие 5 грантов со статусом 'Планирование' имеют наибольшую сумму финансирования на единицу времени (рублей в день)? Включите информацию об агентстве финансирования, дате начала, длительности в днях и цели гранта. Отсортируйте результаты по коэффициенту финансирования в убывающем порядке.",
            "sql_query": "SELECT g.grant_id, g.title, g.funding_agency, g.amount, g.purpose,\n       g.start_date, g.end_date,\n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       g.amount / DATEDIFF(g.end_date, g.start_date) AS funding_per_day,\n       p.title AS project_title\nFROM Grants g\nJOIN Projects p ON g.project_id = p.project_id\nWHERE g.status = 'Планирование'\nAND DATEDIFF(g.end_date, g.start_date) > 0\nORDER BY funding_per_day DESC\nLIMIT 5;",
            "gpt-4o_response": "SELECT g.grant_id, g.title, g.amount, g.funding_agency, g.start_date,\n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       g.purpose,\n       (g.amount / DATEDIFF(g.end_date, g.start_date)) AS funding_per_day\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY funding_per_day DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT g.grant_id, g.title, g.amount, g.funding_agency, g.start_date,\n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       g.purpose,\n       (g.amount / DATEDIFF(g.end_date, g.start_date)) AS funding_per_day\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY funding_per_day DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    g.title AS grant_title,\n    g.funding_agency,\n    g.start_date,\n    DATEDIFF(g.end_date, g.start_date) AS duration_days,\n    g.amount / DATEDIFF(g.end_date, g.start_date) AS funding_per_day,\n    g.purpose\nFROM\n    Grants g\nWHERE\n    g.status = 'Планирование'\nORDER BY\n    funding_per_day DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    g.title AS grant_title,\n    g.funding_agency,\n    g.start_date,\n    DATEDIFF(g.end_date, g.start_date) AS duration_days,\n    g.amount / DATEDIFF(g.end_date, g.start_date) AS funding_per_day,\n    g.purpose\nFROM\n    Grants g\nWHERE\n    g.status = 'Планирование'\nORDER BY\n    funding_per_day DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT g.grant_id, g.title, g.amount, g.funding_agency, g.start_date, \n       DATEDIFF(COALESCE(g.end_date, CURRENT_DATE), g.start_date) AS duration_days,\n       (g.amount * 1.0 / DATEDIFF(COALESCE(g.end_date, CURRENT_DATE), g.start_date)) AS funding_per_day,\n       g.purpose\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY funding_per_day DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT g.grant_id, g.title, g.amount, g.funding_agency, g.start_date, \n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       (g.amount * 1.0 / DATEDIFF(g.end_date, g.start_date)) AS funding_per_day,\n       g.purpose\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY funding_per_day DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT g.grant_id, g.title, g.funding_agency, g.start_date, \n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       g.amount / DATEDIFF(g.end_date, g.start_date) AS funding_per_day,\n       g.purpose\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY funding_per_day DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT g.grant_id, g.title, g.funding_agency, g.start_date, \n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       (g.amount / DATEDIFF(g.end_date, g.start_date)) AS funding_per_day,\n       g.purpose\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY funding_per_day DESC\nLIMIT 5;",
            "gigachat_response": "SELECT g.grant_id, g.title, g.amount, g.funding_agency, g.start_date,\n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       g.amount / DATEDIFF(g.end_date, g.start_date) AS daily_funding_rate,\n       g.purpose\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY daily_funding_rate DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT g.grant_id, g.title, g.amount, g.funding_agency, g.start_date, \n       DATEDIFF(g.end_date, g.start_date) AS duration_days,\n       g.amount / DATEDIFF(g.end_date, g.start_date) AS daily_funding_rate,\n       g.purpose\nFROM Grants g\nWHERE g.status = 'Планирование'\nORDER BY daily_funding_rate DESC\nLIMIT 5;"
        },
        {
            "question": "Какие 11 учреждений типа 'Университет' имеют наибольшее соотношение количества презентаций к количеству конференций за последние 3 года? Включите информацию о названии университета, городе, общем количестве презентаций и среднем времени презентации. Отсортируйте результаты по эффективности презентаций в убывающем порядке.",
            "sql_query": "SELECT i.institution_id, i.name, i.city, i.established_year,\n       COUNT(DISTINCT pres.presentation_id) AS presentations_count,\n       COUNT(DISTINCT c.conference_id) AS conferences_count,\n       COUNT(DISTINCT pres.presentation_id) / COUNT(DISTINCT c.conference_id) AS presentation_ratio,\n       AVG(pres.duration) AS avg_presentation_duration\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Presentations pres ON p.project_id = pres.project_id\nJOIN Conferences c ON pres.conference_id = c.conference_id\nWHERE i.type = 'Университет'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.city, i.established_year\nHAVING COUNT(DISTINCT c.conference_id) > 0\nORDER BY presentation_ratio DESC\nLIMIT 11;",
            "gpt-4o_response": "SELECT i.name AS university_name, i.city, \n       COUNT(DISTINCT pres.presentation_id) AS total_presentations,\n       AVG(TIMESTAMPDIFF(MINUTE, pres.time, ADDTIME(pres.time, SEC_TO_TIME(pres.duration * 60)))) / 60 AS avg_presentation_duration_hours,\n       (COUNT(DISTINCT pres.presentation_id) * 1.0 / COUNT(DISTINCT conf.conference_id)) AS presentation_to_conference_ratio\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Presentations pres ON p.project_id = pres.project_id\nJOIN Conferences conf ON pres.conference_id = conf.conference_id\nWHERE i.type = 'Университет'\nAND conf.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.city\nORDER BY presentation_to_conference_ratio DESC\nLIMIT 11;",
            "gpt-4o_response_ru": "SELECT i.name AS university_name, i.city, \n       COUNT(DISTINCT p.presentation_id) AS total_presentations,\n       AVG(TIMESTAMPDIFF(MINUTE, p.time, ADDTIME(p.time, SEC_TO_TIME(p.duration * 60)))) AS avg_presentation_time\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects pr ON d.department_id = pr.department_id\nJOIN Presentations p ON pr.project_id = p.project_id\nJOIN Conferences c ON p.conference_id = c.conference_id\nWHERE i.type = 'Университет'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.institution_id, i.name, i.city\nORDER BY (COUNT(DISTINCT p.presentation_id) * 1.0 / COUNT(DISTINCT c.conference_id)) DESC\nLIMIT 11;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    i.name AS institution_name,\n    i.city AS institution_city,\n    COUNT(DISTINCT p.presentation_id) AS total_presentations,\n    AVG(p.duration) AS average_presentation_duration,\n    (COUNT(DISTINCT p.presentation_id) * 1.0 / COUNT(DISTINCT c.conference_id)) AS presentation_to_conference_ratio\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Projects proj ON d.department_id = proj.department_id\nJOIN\n    Presentations p ON proj.project_id = p.project_id\nJOIN\n    Conferences c ON p.conference_id = c.conference_id\nWHERE\n    i.type = 'Университет'\n    AND p.date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    i.institution_id, i.name, i.city\nHAVING COUNT(DISTINCT c.conference_id) > 0\nORDER BY\n    presentation_to_conference_ratio DESC\nLIMIT 11;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    i.name AS institution_name,\n    i.city AS institution_city,\n    COUNT(DISTINCT p.presentation_id) AS total_presentations,\n    AVG(p.duration) AS average_presentation_duration,\n    (COUNT(DISTINCT p.presentation_id) * 1.0 / COUNT(DISTINCT c.conference_id)) AS presentation_to_conference_ratio\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Projects proj ON d.department_id = proj.department_id\nJOIN\n    Presentations p ON proj.project_id = p.project_id\nJOIN\n    Conferences c ON p.conference_id = c.conference_id\nWHERE\n    i.type = 'Университет'\n    AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY\n    i.institution_id, i.name, i.city\nORDER BY\n    presentation_to_conference_ratio DESC\nLIMIT 11;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT i.name AS institution_name, i.city, \n       COUNT(DISTINCT pr.presentation_id) AS total_presentations, \n       AVG(TIMESTAMPDIFF(MINUTE, pr.time, ADDTIME(pr.time, pr.duration))) AS avg_presentation_time\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nJOIN Conferences c ON pr.conference_id = c.conference_id\nWHERE i.type = 'Университет'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.name, i.city\nORDER BY COUNT(DISTINCT pr.presentation_id) / COUNT(DISTINCT c.conference_id) DESC\nLIMIT 11;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT i.name, i.city, \n       COUNT(DISTINCT pr.presentation_id) AS total_presentations, \n       AVG(pr.duration) AS avg_presentation_time\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nJOIN Conferences c ON pr.conference_id = c.conference_id\nWHERE i.type = 'Университет'\nAND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.name, i.city\nORDER BY total_presentations / COUNT(DISTINCT c.conference_id) DESC\nLIMIT 11;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    i.institution_id,\n    i.name AS institution_name,\n    i.city,\n    COUNT(DISTINCT pr.presentation_id) AS total_presentations,\n    AVG(pr.duration) AS avg_presentation_duration,\n    COUNT(DISTINCT c.conference_id) AS total_conferences,\n    (COUNT(DISTINCT pr.presentation_id) * 1.0 / NULLIF(COUNT(DISTINCT c.conference_id), 0)) AS presentation_efficiency\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Presentations pr ON p.project_id = pr.project_id\nJOIN \n    Conferences c ON pr.conference_id = c.conference_id\nWHERE \n    i.type = 'Университет'\n    AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    i.institution_id, i.name, i.city\nORDER BY \n    presentation_efficiency DESC\nLIMIT 11;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    i.name AS institution_name,\n    i.city,\n    COUNT(DISTINCT pr.presentation_id) AS total_presentations,\n    AVG(pr.duration) AS avg_presentation_duration,\n    COUNT(DISTINCT c.conference_id) AS total_conferences,\n    (COUNT(DISTINCT pr.presentation_id) * 1.0 / NULLIF(COUNT(DISTINCT c.conference_id), 0)) AS presentation_efficiency\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    Presentations pr ON p.project_id = pr.project_id\nJOIN \n    Conferences c ON pr.conference_id = c.conference_id\nWHERE \n    i.type = 'Университет'\n    AND c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY \n    i.institution_id, i.name, i.city\nORDER BY \n    presentation_efficiency DESC\nLIMIT 11;",
            "gigachat_response": "SELECT \n    i.name AS university_name,\n    i.city AS university_city,\n    COUNT(pr.presentation_id) AS presentations_count,\n    AVG(TIMESTAMPDIFF(HOUR, pr.time, ADDTIME(pr.time, SEC_TO_TIME(pr.duration)))) AS average_presentation_time_hours\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nJOIN Conferences cf ON pr.conference_id = cf.conference_id\nWHERE i.type = 'Университет'\nAND cf.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.name, i.city\nORDER BY presentations_count / COUNT(DISTINCT cf.conference_id) DESC\nLIMIT 11;",
            "gigachat_response_ru": "SELECT \n    i.name AS university_name,\n    i.city AS city,\n    COUNT(pr.presentation_id) AS presentations_count,\n    AVG(TIME_TO_SEC(pr.duration)/60) AS average_presentation_time_minutes,\n    COUNT(pr.presentation_id)*1.0 / COUNT(DISTINCT co.conference_id) AS efficiency_ratio\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nJOIN Conferences co ON pr.conference_id = co.conference_id\nWHERE i.type = 'Университет'\nAND co.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nGROUP BY i.name, i.city\nORDER BY efficiency_ratio DESC\nLIMIT 11;"
        },
        {
            "question": "Какие 7 экспериментов в статусе 'В процессе' используют оборудование, приобретенное в течение последних 3 лет, и имеют связанные образцы в состоянии 'Герметичный' или 'Запечатанный'? Включите информацию о руководителе эксперимента, названии оборудования и количестве образцов. Отсортируйте результаты по дате начала эксперимента в убывающем порядке.",
            "sql_query": "SELECT e.experiment_id, e.title, e.start_date, e.location,\n       r.first_name AS lead_first_name, r.last_name AS lead_last_name,\n       eq.name AS equipment_name, eq.model, eq.purchase_date,\n       COUNT(DISTINCT s.sample_id) AS sealed_samples_count\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND s.condition IN ('Герметичный', 'Запечатанный')\nGROUP BY e.experiment_id, e.title, e.start_date, e.location, r.first_name, r.last_name, eq.name, eq.model, eq.purchase_date\nORDER BY e.start_date DESC\nLIMIT 7;",
            "gpt-4o_response": "SELECT e.experiment_id, e.title AS experiment_title, e.start_date, \n       r.first_name AS lead_researcher_first_name, r.last_name AS lead_researcher_last_name,\n       eq.name AS equipment_name, COUNT(s.sample_id) AS sample_count\nFROM Experiments e\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND (s.condition = 'Герметичный' OR s.condition = 'Запечатанный')\nGROUP BY e.experiment_id, e.title, e.start_date, r.first_name, r.last_name, eq.name\nORDER BY e.start_date DESC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT e.experiment_id, e.title AS experiment_title, e.start_date, \n       r.first_name, r.last_name, eq.name AS equipment_name, \n       COUNT(s.sample_id) AS sample_count\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND (s.condition = 'Герметичный' OR s.condition = 'Запечатанный')\nGROUP BY e.experiment_id, e.title, e.start_date, r.first_name, r.last_name, eq.name\nORDER BY e.start_date DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    e.experiment_id,\n    e.title AS experiment_title,\n    r.first_name AS lead_researcher_first_name,\n    r.last_name AS lead_researcher_last_name,\n    eq.name AS equipment_name,\n    COUNT(s.sample_id) AS sample_count,\n    e.start_date\nFROM\n    Experiments e\nJOIN\n    Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN\n    Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN\n    Samples s ON e.experiment_id = s.experiment_id\nWHERE\n    e.status = 'В процессе'\n    AND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\n    AND (s.`condition` = 'Герметичный' OR s.`condition` = 'Запечатанный')\nGROUP BY\n    e.experiment_id,\n    e.title,\n    r.first_name,\n    r.last_name,\n    eq.name,\n    e.start_date\nORDER BY\n    e.start_date DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    e.experiment_id,\n    e.title AS experiment_title,\n    r.first_name || ' ' || r.last_name AS lead_researcher,\n    eq.name AS equipment_name,\n    COUNT(s.sample_id) AS sample_count,\n    e.start_date\nFROM\n    Experiments e\nJOIN\n    Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN\n    Equipment eq ON e.equipment_id = eq.equipment_id\nLEFT JOIN\n    Samples s ON e.experiment_id = s.experiment_id\nWHERE\n    e.status = 'В процессе'\n    AND eq.purchase_date >= DATE('now', '-3 years')\n    AND s.`condition` IN ('Герметичный', 'Запечатанный')\nGROUP BY\n    e.experiment_id,\n    e.title,\n    r.first_name,\n    r.last_name,\n    eq.name,\n    e.start_date\nORDER BY\n    e.start_date DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT e.experiment_id, r.first_name, r.last_name, eq.name AS equipment_name, \n       COUNT(s.sample_id) AS sample_count\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND s.condition IN ('Герметичный', 'Запечатанный')\nGROUP BY e.experiment_id, r.first_name, r.last_name, eq.name, e.start_date\nORDER BY e.start_date DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    e.experiment_id, \n    e.title, \n    r.first_name, \n    r.last_name, \n    eq.name AS equipment_name, \n    COUNT(s.sample_id) AS sample_count, \n    e.start_date\nFROM \n    Experiments e\nJOIN \n    Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN \n    Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN \n    Samples s ON e.experiment_id = s.experiment_id\nWHERE \n    e.status = 'В процессе'\nAND \n    eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND \n    s.condition IN ('Герметичный', 'Запечатанный')\nGROUP BY \n    e.experiment_id, \n    e.title, \n    r.first_name, \n    r.last_name, \n    eq.name, \n    e.start_date\nORDER BY \n    e.start_date DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT e.experiment_id, e.title AS experiment_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n       eq.name AS equipment_name, eq.model AS equipment_model,\n       COUNT(s.sample_id) AS samples_count,\n       e.start_date\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND s.`condition` IN ('Герметичный', 'Запечатанный')\nGROUP BY e.experiment_id, e.title, r.first_name, r.last_name, eq.name, eq.model, e.start_date\nORDER BY e.start_date DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT e.experiment_id, e.title AS experiment_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n       eq.name AS equipment_name, eq.model AS equipment_model,\n       COUNT(s.sample_id) AS samples_count, e.start_date\nFROM Experiments e\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nJOIN Equipment eq ON e.equipment_id = eq.equipment_id\nJOIN Samples s ON e.experiment_id = s.experiment_id\nWHERE e.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND s.`condition` IN ('Герметичный', 'Запечатанный')\nGROUP BY e.experiment_id, e.title, r.first_name, r.last_name, eq.name, eq.model, e.start_date\nORDER BY e.start_date DESC\nLIMIT 7;",
            "gigachat_response": "SELECT ex.experiment_id, re.first_name, re.last_name AS leader_first_last_name,\n       eq.name AS equipment_name, COUNT(s.sample_id) AS samples_count\nFROM Experiments ex\nJOIN Equipment eq ON ex.equipment_id = eq.equipment_id\nJOIN Researchers re ON ex.lead_researcher_id = re.researcher_id\nJOIN Samples s ON ex.experiment_id = s.experiment_id\nWHERE ex.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND s.`condition` IN ('Герметичный', 'Запечатанный')\nGROUP BY ex.experiment_id, re.first_name, re.last_name, eq.name\nORDER BY ex.start_date DESC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT \n    ex.experiment_id,\n    CONCAT(r.first_name, ' ', r.last_name) AS lead_researcher,\n    eq.name AS equipment_name,\n    COUNT(s.sample_id) AS samples_count\nFROM Experiments ex\nJOIN Equipment eq ON ex.equipment_id = eq.equipment_id\nJOIN Researchers r ON ex.lead_researcher_id = r.researcher_id\nJOIN Samples s ON ex.experiment_id = s.experiment_id\nWHERE ex.status = 'В процессе'\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nAND s.`condition` IN ('Герметичный', 'Запечатанный')\nGROUP BY ex.experiment_id, r.first_name, r.last_name, eq.name\nORDER BY ex.start_date DESC\nLIMIT 7;"
        },
        {
            "question": "Какие 4 отдела, размещенные в 'Главное здание', имеют наибольшее количество датасетов в формате 'XLSX' или 'FASTA' с уровнем доступа 'Закрытый' или 'Ограниченный'? Включите информацию о названии отдела, количестве сотрудников, общем бюджете и суммарном размере всех датасетов. Отсортируйте результаты по количеству датасетов в убывающем порядке.",
            "sql_query": "SELECT d.department_id, d.name, d.building, d.number_of_staff, d.budget,\n       COUNT(DISTINCT ds.dataset_id) AS datasets_count,\n       SUM(ds.size) AS total_data_size\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE d.building = 'Главное здание'\nAND (ds.format = 'XLSX' OR ds.format = 'FASTA')\nAND (ds.access_level = 'Закрытый' OR ds.access_level = 'Ограниченный')\nGROUP BY d.department_id, d.name, d.building, d.number_of_staff, d.budget\nORDER BY datasets_count DESC\nLIMIT 4;",
            "gpt-4o_response": "SELECT d.name AS department_name, \n       d.number_of_staff, \n       d.budget, \n       SUM(ds.size) AS total_dataset_size,\n       COUNT(ds.dataset_id) AS dataset_count\nFROM Departments d\nJOIN DataSets ds ON d.department_id = ds.project_id\nWHERE d.building = 'Главное здание'\nAND ds.format IN ('XLSX', 'FASTA')\nAND ds.access_level IN ('Закрытый', 'Ограниченный')\nGROUP BY d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY dataset_count DESC\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT d.name AS department_name, \n       d.number_of_staff, \n       d.budget, \n       COUNT(ds.dataset_id) AS dataset_count, \n       SUM(ds.size) AS total_dataset_size\nFROM Departments d\nJOIN DataSets ds ON d.department_id = ds.project_id\nWHERE d.building = 'Главное здание'\nAND ds.format IN ('XLSX', 'FASTA')\nAND ds.access_level IN ('Закрытый', 'Ограниченный')\nGROUP BY d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY dataset_count DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    d.name AS department_name,\n    d.number_of_staff AS number_of_staff,\n    d.budget AS department_budget,\n    SUM(ds.size) AS total_dataset_size,\n    COUNT(ds.dataset_id) AS dataset_count\nFROM\n    Departments d\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nLEFT JOIN\n    Projects p ON d.department_id = p.department_id\nLEFT JOIN\n    DataSets ds ON p.project_id = ds.project_id\nWHERE\n    d.building = 'Главное здание'\n    AND ds.format IN ('XLSX', 'FASTA')\n    AND ds.access_level IN ('Закрытый', 'Ограниченный')\nGROUP BY\n    d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY\n    dataset_count DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    d.name AS department_name,\n    d.number_of_staff,\n    d.budget,\n    SUM(ds.size) AS total_dataset_size,\n    COUNT(ds.dataset_id) AS dataset_count\nFROM Departments d\nJOIN DataSets ds ON d.department_id = ds.project_id\nJOIN Projects p ON ds.project_id = p.project_id\nWHERE d.building = 'Главное здание'\nAND (ds.format = 'XLSX' OR ds.format = 'FASTA')\nAND (ds.access_level = 'Закрытый' OR ds.access_level = 'Ограниченный')\nGROUP BY d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY dataset_count DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT d.name AS department_name, d.number_of_staff, d.budget, \n       COUNT(DISTINCT ds.dataset_id) AS datasets_count, \n       SUM(ds.size) AS total_datasets_size\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE d.building = 'Главное здание'\nAND ds.format IN ('XLSX', 'FASTA')\nAND ds.access_level IN ('Закрытый', 'Ограниченный')\nGROUP BY d.name, d.number_of_staff, d.budget\nORDER BY datasets_count DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.name AS department_name, \n    d.number_of_staff, \n    d.budget, \n    COUNT(DISTINCT ds.dataset_id) AS datasets_count,\n    SUM(ds.size) AS total_datasets_size\nFROM \n    Departments d\nJOIN \n    Projects p ON d.department_id = p.department_id\nJOIN \n    DataSets ds ON p.project_id = ds.project_id\nWHERE \n    d.building = 'Главное здание' \n    AND (ds.format = 'XLSX' OR ds.format = 'FASTA')\n    AND (ds.access_level = 'Закрытый' OR ds.access_level = 'Ограниченный')\nGROUP BY \n    d.name, d.number_of_staff, d.budget\nORDER BY \n    datasets_count DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT d.department_id, d.name AS department_name, d.number_of_staff, d.budget, \n       COUNT(ds.dataset_id) AS dataset_count, SUM(ds.size) AS total_size\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE d.building = 'Главное здание'\nAND ds.format IN ('XLSX', 'FASTA')\nAND ds.access_level IN ('Закрытый', 'Ограниченный')\nGROUP BY d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY dataset_count DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT d.name AS department_name, d.number_of_staff, d.budget, \n       COUNT(ds.dataset_id) AS dataset_count, \n       SUM(ds.size) AS total_dataset_size\nFROM Departments d\nJOIN Projects p ON d.department_id = p.department_id\nJOIN DataSets ds ON p.project_id = ds.project_id\nWHERE d.building = 'Главное здание'\nAND ds.format IN ('XLSX', 'FASTA')\nAND ds.access_level IN ('Закрытый', 'Ограниченный')\nGROUP BY d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY dataset_count DESC\nLIMIT 4;",
            "gigachat_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    d.number_of_staff, \n    d.budget, \n    COUNT(ds.dataset_id) AS datasets_count, \n    SUM(ds.size) AS total_datasets_size\nFROM \n    Departments d\nJOIN \n    DataSets ds ON d.department_id = ds.project_id AND ds.format IN ('XLSX', 'FASTA') AND ds.access_level IN ('Закрытый', 'Ограниченный')\nWHERE \n    d.building = 'Главное здание'\nGROUP BY \n    d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY \n    datasets_count DESC\nLIMIT 4;",
            "gigachat_response_ru": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    d.number_of_staff, \n    d.budget, \n    SUM(ds.size) AS total_dataset_size, \n    COUNT(*) AS datasets_count\nFROM \n    Departments d\nJOIN \n    DataSets ds ON d.department_id = ds.project_id AND ds.format IN ('XLSX', 'FASTA') AND ds.access_level IN ('Закрытый', 'Ограниченный')\nWHERE \n    d.building = 'Главное здание'\nGROUP BY \n    d.department_id, d.name, d.number_of_staff, d.budget\nORDER BY \n    datasets_count DESC\nLIMIT 4;"
        },
        {
            "question": "Какие 6 образцов в состоянии 'Замороженный' хранятся дольше всего и имеют связанные эксперименты со статусом 'Завершено'? Включите информацию о типе образца, дате сбора, длительности хранения в днях и данных эксперимента. Отсортируйте результаты по длительности хранения в убывающем порядке.",
            "sql_query": "SELECT s.sample_id, s.type, s.condition, s.collection_date, s.storage_location,\n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_days,\n       e.title AS experiment_title, e.status AS experiment_status,\n       r.first_name, r.last_name\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nJOIN Researchers r ON e.lead_researcher_id = r.researcher_id\nWHERE s.condition = 'Замороженный'\nAND e.status = 'Завершено'\nORDER BY storage_days DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT s.sample_id, s.type AS sample_type, s.collection_date, \n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_duration_days,\n       e.title AS experiment_title, e.start_date AS experiment_start_date, \n       e.end_date AS experiment_end_date, e.status AS experiment_status\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.condition = 'Замороженный'\nAND e.status = 'Завершено'\nORDER BY storage_duration_days DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT s.sample_id, s.type AS sample_type, s.collection_date,\n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_duration_days,\n       e.title AS experiment_title, e.start_date, e.end_date, e.status AS experiment_status\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.condition = 'Замороженный'\nAND e.status = 'Завершено'\nORDER BY storage_duration_days DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    s.sample_id,\n    s.type AS sample_type,\n    s.collection_date,\n    e.title AS experiment_title,\n    DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_duration_days,\n    e.status AS experiment_status\nFROM\n    Samples s\nJOIN\n    Experiments e ON s.experiment_id = e.experiment_id\nWHERE\n    s.`condition` = 'Замороженный'\n    AND e.status = 'Завершено'\nORDER BY\n    storage_duration_days DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    s.type AS sample_type,\n    s.collection_date,\n    e.title AS experiment_title,\n    DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_duration_days,\n    e.status AS experiment_status\nFROM\n    Samples s\nJOIN\n    Experiments e ON s.experiment_id = e.experiment_id\nWHERE\n    s.`condition` = 'Замороженный'\n    AND e.status = 'Завершено'\nORDER BY\n    storage_duration_days DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    s.sample_id, \n    s.type, \n    s.collection_date, \n    DATEDIFF(COALESCE(s.storage_end_date, CURRENT_DATE), s.collection_date) AS storage_duration_days,\n    e.title AS experiment_title, \n    e.description AS experiment_description,\n    e.status AS experiment_status\nFROM \n    Samples s\nJOIN \n    Experiments e ON s.experiment_id = e.experiment_id\nWHERE \n    s.condition = 'Замороженный'\nAND \n    e.status = 'Завершено'\nORDER BY \n    storage_duration_days DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT s.sample_id, s.type, s.collection_date, \n       DATEDIFF(COALESCE(s.storage_location, CURRENT_DATE), s.collection_date) AS storage_days,\n       e.title AS experiment_title, e.start_date AS experiment_start, e.end_date AS experiment_end\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.condition = 'Замороженный'\nAND e.status = 'Завершено'\nORDER BY storage_days DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT s.sample_id, s.type AS sample_type, s.collection_date, \n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_duration_days,\n       e.experiment_id, e.title AS experiment_title, e.start_date AS experiment_start_date,\n       e.end_date AS experiment_end_date, e.description AS experiment_description, e.results\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.`condition` = 'Замороженный'\nAND e.status = 'Завершено'\nORDER BY storage_duration_days DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT s.sample_id, s.type AS sample_type, s.collection_date, \n       DATEDIFF(CURRENT_DATE, s.collection_date) AS storage_duration_days,\n       e.experiment_id, e.title AS experiment_title, e.description AS experiment_description,\n       e.start_date AS experiment_start, e.end_date AS experiment_end\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.`condition` = 'Замороженный'\nAND e.status = 'Завершено'\nORDER BY storage_duration_days DESC\nLIMIT 6;",
            "gigachat_response": "SELECT s.sample_id, s.`type`, s.collection_date, \n       DATEDIFF(CURDATE(), s.collection_date) AS days_stored,\n       e.title AS experiment_title, e.results AS experiment_results\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.`status` = 'Замороженный'\nAND e.`status` = 'Завершено'\nORDER BY days_stored DESC\nLIMIT 6;",
            "gigachat_response_ru": "SELECT s.sample_id, s.`type`, s.collection_date, \n       DATEDIFF(CURDATE(), s.collection_date) AS days_stored,\n       e.title AS experiment_title, e.results AS experiment_results\nFROM Samples s\nJOIN Experiments e ON s.experiment_id = e.experiment_id\nWHERE s.`condition` = 'Замороженный'\nAND e.status = 'Завершено'\nORDER BY days_stored DESC\nLIMIT 6;"
        },
        {
            "question": "Какие 8 датасетов со статусом 'Архивный' были созданы в последние 5 лет и имеют размер более 20 ГБ? Включите информацию о названии датасета, проекте, формате, уровне доступа и дате создания. Отсортируйте результаты по размеру в убывающем порядке.",
            "sql_query": "SELECT ds.dataset_id, ds.title, ds.format, ds.access_level, ds.creation_date, ds.size,\n       p.title AS project_title, p.status AS project_status,\n       i.name AS institution_name\nFROM DataSets ds\nJOIN Projects p ON ds.project_id = p.project_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nWHERE ds.status = 'Архивный'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND ds.size > 20\nORDER BY ds.size DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT ds.title AS dataset_title, \n       p.title AS project_title, \n       ds.format, \n       ds.access_level, \n       ds.creation_date, \n       ds.size\nFROM DataSets ds\nJOIN Projects p ON ds.project_id = p.project_id\nWHERE ds.status = 'Архивный'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND ds.size > 20.00\nORDER BY ds.size DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT \n    ds.title AS dataset_title,\n    p.title AS project_title,\n    ds.format,\n    ds.access_level,\n    ds.creation_date,\n    ds.size\nFROM \n    DataSets ds\nJOIN \n    Projects p ON ds.project_id = p.project_id\nWHERE \n    ds.status = 'Архивный'\n    AND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND ds.size > 20\nORDER BY \n    ds.size DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    dataset_id,\n    title,\n    project_id,\n    creation_date,\n    format,\n    size,\n    access_level,\n    description\nFROM\n    DataSets\nWHERE\n    status = 'Архивный'\n    AND creation_date >= DATE_SUB(CURDATE(), INTERVAL 5 YEAR)\n    AND size > 20\nORDER BY\n    size DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    ds.title AS dataset_title,\n    p.title AS project_title,\n    ds.format,\n    ds.access_level,\n    ds.creation_date,\n    ds.size\nFROM\n    DataSets ds\nJOIN\n    Projects p ON ds.project_id = p.project_id\nWHERE\n    ds.status = 'Архивный'\n    AND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    AND ds.size > 20\nORDER BY\n    ds.size DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT ds.dataset_id, ds.title, p.title AS project_title, ds.format, ds.access_level, ds.creation_date, ds.size\nFROM DataSets ds\nJOIN Projects p ON ds.project_id = p.project_id\nWHERE ds.status = 'Архивный'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND ds.size > 20\nORDER BY ds.size DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    ds.dataset_id, \n    ds.title, \n    p.title AS project_title, \n    ds.format, \n    ds.access_level, \n    ds.creation_date, \n    ds.size\nFROM \n    DataSets ds\nJOIN \n    Projects p ON ds.project_id = p.project_id\nWHERE \n    ds.status = 'Архивный' \nAND \n    ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND \n    ds.size > 20\nORDER BY \n    ds.size DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT ds.dataset_id, ds.title AS dataset_title, p.title AS project_title, ds.format, ds.access_level, ds.creation_date, ds.size\nFROM DataSets ds\nJOIN Projects p ON ds.project_id = p.project_id\nWHERE ds.status = 'Архивный'\nAND ds.size > 20\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nORDER BY ds.size DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT ds.title AS dataset_title, p.title AS project_title, ds.format, ds.access_level, ds.creation_date, ds.size\nFROM DataSets ds\nJOIN Projects p ON ds.project_id = p.project_id\nWHERE ds.status = 'Архивный'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND ds.size > 20\nORDER BY ds.size DESC\nLIMIT 8;",
            "gigachat_response": "SELECT ds.dataset_id, ds.title AS dataset_title, prj.title AS project_title, \n       ds.format, ds.access_level, ds.creation_date, ds.size\nFROM DataSets ds\nJOIN Projects prj ON ds.project_id = prj.project_id\nWHERE ds.status = 'Архивный'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND ds.size > 20\nORDER BY ds.size DESC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT ds.dataset_id, ds.title AS dataset_title, prj.title AS project_title, \n       ds.format, ds.access_level, ds.creation_date, ds.size\nFROM DataSets ds\nJOIN Projects prj ON ds.project_id = prj.project_id\nWHERE ds.status = 'Архивный'\nAND ds.creation_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nAND ds.size > 20\nORDER BY ds.size DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 10 патентов со статусом 'Ожидается', поданных за последние 3 года, имеют наибольшее время ожидания? Включите информацию о названии патента, изобретателе, стране и связанном проекте. Отсортируйте результаты по времени ожидания в убывающем порядке.",
            "sql_query": "SELECT pat.patent_id, pat.title, pat.application_date, pat.patent_number, pat.country,\n       DATEDIFF(CURRENT_DATE, pat.application_date) AS waiting_days,\n       r.first_name, r.last_name, r.position,\n       p.title AS project_title\nFROM Patents pat\nJOIN Researchers r ON pat.inventor_id = r.researcher_id\nJOIN Projects p ON pat.project_id = p.project_id\nWHERE pat.status = 'Ожидается'\nAND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY waiting_days DESC\nLIMIT 10;",
            "gpt-4o_response": "SELECT \n    pt.patent_id, \n    pt.title AS patent_title, \n    CONCAT(r.first_name, ' ', r.last_name) AS inventor_name, \n    pt.country, \n    p.title AS project_title, \n    DATEDIFF(CURRENT_DATE, pt.application_date) AS waiting_days\nFROM \n    Patents pt\nJOIN \n    Researchers r ON pt.inventor_id = r.researcher_id\nJOIN \n    Projects p ON pt.project_id = p.project_id\nWHERE \n    pt.status = 'Ожидается'\n    AND pt.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY \n    waiting_days DESC\nLIMIT 10;",
            "gpt-4o_response_ru": "SELECT \n    pt.patent_id, \n    pt.title AS patent_title, \n    CONCAT(r.first_name, ' ', r.last_name) AS inventor_name, \n    pt.country, \n    pr.title AS project_title,\n    DATEDIFF(CURRENT_DATE, pt.application_date) AS waiting_days\nFROM \n    Patents pt\nJOIN \n    Researchers r ON pt.inventor_id = r.researcher_id\nJOIN \n    Projects pr ON pt.project_id = pr.project_id\nWHERE \n    pt.status = 'Ожидается'\n    AND pt.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY \n    waiting_days DESC\nLIMIT 10;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.title AS patent_title,\n    r.first_name AS inventor_first_name,\n    r.last_name AS inventor_last_name,\n    p.country,\n    proj.title AS project_title,\n    DATEDIFF(CURRENT_DATE, p.application_date) AS waiting_time_days\nFROM\n    Patents p\nJOIN\n    Researchers r ON p.inventor_id = r.researcher_id\nJOIN\n    Projects proj ON p.project_id = proj.project_id\nWHERE\n    p.status = 'Ожидается'\n    AND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY\n    waiting_time_days DESC\nLIMIT 10;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.title AS patent_title,\n    r.first_name AS inventor_first_name,\n    r.last_name AS inventor_last_name,\n    p.country AS patent_country,\n    proj.title AS project_title,\n    DATEDIFF(CURRENT_DATE, p.application_date) AS waiting_time\nFROM\n    Patents p\nJOIN\n    Researchers r ON p.inventor_id = r.researcher_id\nJOIN\n    Projects proj ON p.project_id = proj.project_id\nWHERE\n    p.status = 'Ожидается'\n    AND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY\n    waiting_time DESC\nLIMIT 10;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.patent_id, p.title, r.first_name, r.last_name, p.country, \n       TIMESTAMPDIFF(DAY, p.application_date, COALESCE(p.grant_date, CURRENT_DATE)) AS waiting_days,\n       pr.title AS project_title\nFROM Patents p\nJOIN Researchers r ON p.inventor_id = r.researcher_id\nJOIN Projects pr ON p.project_id = pr.project_id\nWHERE p.status = 'Ожидается'\nAND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY waiting_days DESC\nLIMIT 10;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT p.title, r.first_name, r.last_name, p.country, p.patent_number, \n       DATEDIFF(COALESCE(p.grant_date, CURRENT_DATE), p.application_date) AS waiting_days\nFROM Patents p\nJOIN Researchers r ON p.inventor_id = r.researcher_id\nWHERE p.status = 'Ожидается'\nAND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY waiting_days DESC\nLIMIT 10;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.patent_id, p.title AS patent_title, p.country, \n       CONCAT(r.first_name, ' ', r.last_name) AS inventor_name,\n       pr.title AS project_title,\n       DATEDIFF(CURRENT_DATE, p.application_date) AS waiting_days\nFROM Patents p\nJOIN Researchers r ON p.inventor_id = r.researcher_id\nLEFT JOIN Projects pr ON p.project_id = pr.project_id\nWHERE p.status = 'Ожидается'\nAND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY waiting_days DESC\nLIMIT 10;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.patent_id, p.title AS patent_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS inventor, \n       p.country, pr.title AS project_title,\n       DATEDIFF(CURRENT_DATE, p.application_date) AS waiting_days\nFROM Patents p\nJOIN Researchers r ON p.inventor_id = r.researcher_id\nJOIN Projects pr ON p.project_id = pr.project_id\nWHERE p.status = 'Ожидается'\nAND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY waiting_days DESC\nLIMIT 10;",
            "gigachat_response": "SELECT p.patent_id, p.title AS patent_title, CONCAT(r.first_name, ' ', r.last_name) AS inventor_name, \n       p.country, prj.title AS related_project_title,\n       DATEDIFF(NOW(), p.application_date) AS waiting_time_days\nFROM Patents p\nJOIN Researchers r ON p.inventor_id = r.researcher_id\nJOIN Projects prj ON p.project_id = prj.project_id\nWHERE p.status = 'Ожидается'\nAND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY waiting_time_days DESC\nLIMIT 10;",
            "gigachat_response_ru": "SELECT p.title AS патент_название,\n       CONCAT(r.first_name, ' ', r.last_name) AS изобретатель,\n       p.country AS страна,\n       prj.title AS связанный_проект,\n       DATEDIFF(NOW(), p.application_date) AS время_ожидания\nFROM Patents p\nJOIN Researchers r ON p.inventor_id = r.researcher_id\nJOIN Projects prj ON p.project_id = prj.project_id\nWHERE p.status = 'Ожидается'\nAND p.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 3 YEAR)\nORDER BY время_ожидания DESC\nLIMIT 10;"
        },
        {
            "question": "Какие 5 сотрудников мужского пола моложе 35 лет руководят наибольшим количеством проектов со статусом 'Планируется'? Включите информацию о количестве проектов, их общем бюджете, средней продолжительности в днях и отделе, в котором они работают. Отсортируйте результаты по количеству проектов в убывающем порядке.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date, d.name, i.name\nORDER BY project_count DESC\nLIMIT 5;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date, d.name, i.name\nORDER BY project_count DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date, d.name\nORDER BY project_count DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date, d.name\nORDER BY project_count DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT r.first_name, r.last_name, COUNT(p.project_id) AS project_count, SUM(p.budget) AS total_budget, AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_duration, d.name AS department_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Мужской' AND r.birth_date > DATE_SUB(CURDATE(), INTERVAL 35 YEAR) AND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, d.name\nORDER BY project_count DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    SUM(p.budget) AS total_budget,\n    AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n    d.name AS department_name\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nWHERE \n    r.gender = 'Мужской'\nAND \n    TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND \n    p.status = 'Планируется'\nGROUP BY \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.birth_date, \n    d.name\nORDER BY \n    project_count DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position,\n    TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n    COUNT(DISTINCT p.project_id) AS project_count,\n    SUM(p.budget) AS total_budget,\n    AVG(DATEDIFF(COALESCE(p.end_date, CURRENT_DATE), p.start_date)) AS avg_project_duration,\n    d.name AS department_name, \n    i.name AS institution_name\nFROM \n    Researchers r\nJOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nJOIN \n    Departments d ON p.department_id = d.department_id\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nWHERE \n    r.gender = 'Мужской'\nAND \n    TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND \n    p.status = 'Планируется'\nGROUP BY \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    r.birth_date, \n    d.name, \n    i.name\nORDER BY \n    project_count DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n       COUNT(p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date, d.name\nORDER BY project_count DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) AS age,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name, i.name AS institution_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date, d.name, i.name\nORDER BY project_count DESC\nLIMIT 5;",
            "gigachat_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       TIMESTAMPDIFF(YEAR, r.birth_date, CURDATE()) AS age,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURDATE()) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.birth_date, d.name\nORDER BY project_count DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT p.project_id) AS project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(DATEDIFF(p.end_date, p.start_date)) AS avg_project_duration,\n       d.name AS department_name\nFROM Researchers r\nJOIN Projects p ON r.researcher_id = p.project_lead_id\nJOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Мужской'\nAND TIMESTAMPDIFF(YEAR, r.birth_date, CURRENT_DATE) < 35\nAND p.status = 'Планируется'\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY project_count DESC\nLIMIT 5;"
        },
        {
            "question": "Какие 7 коллабораций типа 'Образовательный' связаны с проектами, имеющими наибольшее количество презентаций за последние 2 года? Включите информацию о контактном лице, организации-партнере, длительности коллаборации в месяцах и количестве презентаций. Отсортируйте результаты по количеству презентаций в убывающем порядке.",
            "sql_query": "SELECT c.collaboration_id, c.type, c.description, c.contact_person,\n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n       i.name AS partner_institution, i.country, i.city,\n       COUNT(DISTINCT pres.presentation_id) AS presentation_count,\n       p.title AS project_title\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Presentations pres ON p.project_id = pres.project_id\nWHERE c.type = 'Образовательный'\nAND pres.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, c.type, c.description, c.contact_person, c.start_date, c.end_date, i.name, i.country, i.city, p.title\nORDER BY presentation_count DESC\nLIMIT 7;",
            "gpt-4o_response": "SELECT c.collaboration_id, c.type, c.contact_person, c.contact_email, c.contact_phone,\n       i.name AS partner_institution_name,\n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS duration_months,\n       COUNT(DISTINCT pres.presentation_id) AS presentations_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Presentations pres ON p.project_id = pres.project_id\nWHERE c.type = 'Образовательный'\nAND pres.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, c.type, c.contact_person, c.contact_email, c.contact_phone, i.name, c.start_date, c.end_date\nORDER BY presentations_count DESC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT c.collaboration_id, c.type, c.contact_person, i.name AS partner_institution_name,\n       TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) AS collaboration_duration_months,\n       COUNT(DISTINCT pres.presentation_id) AS presentation_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Presentations pres ON p.project_id = pres.project_id\nWHERE c.type = 'Образовательный'\nAND pres.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, c.type, c.contact_person, i.name, c.start_date, c.end_date\nORDER BY presentation_count DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.contact_person,\n    i.name AS institution_name,\n    TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) AS collaboration_duration_months,\n    COUNT(DISTINCT p.presentation_id) AS presentation_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects proj ON c.project_id = proj.project_id\nLEFT JOIN Presentations p ON proj.project_id = p.project_id\nWHERE c.type = 'Образовательный'\n  AND p.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, c.contact_person, i.name, c.start_date, c.end_date\nORDER BY presentation_count DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    c.contact_person,\n    i.name AS institution_name,\n    TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) AS duration_months,\n    COUNT(DISTINCT p.presentation_id) AS presentation_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects proj ON c.project_id = proj.project_id\nLEFT JOIN Presentations p ON proj.project_id = p.project_id\nWHERE c.type = 'Образовательный'\n  AND p.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, c.contact_person, i.name, c.start_date, c.end_date\nORDER BY presentation_count DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.collaboration_id, c.type, c.contact_person, i.name AS institution_name, \n       TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS collaboration_duration_months,\n       COUNT(DISTINCT pr.presentation_id) AS presentations_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nWHERE c.type = 'Образовательный'\nAND pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, c.type, c.contact_person, i.name, c.start_date, c.end_date\nORDER BY presentations_count DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.collaboration_id, \n    c.type, \n    c.contact_person, \n    i.name AS partner_institution, \n    TIMESTAMPDIFF(MONTH, c.start_date, COALESCE(c.end_date, CURRENT_DATE)) AS collaboration_duration,\n    COUNT(DISTINCT pr.presentation_id) AS presentations_count\nFROM \n    Collaborations c\nJOIN \n    Institutions i ON c.institution_id = i.institution_id\nJOIN \n    Projects p ON c.project_id = p.project_id\nJOIN \n    Presentations pr ON p.project_id = pr.project_id\nWHERE \n    c.type = 'Образовательный'\nAND \n    pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY \n    c.collaboration_id, c.type, c.contact_person, i.name, c.start_date, c.end_date\nORDER BY \n    presentations_count DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.collaboration_id, c.contact_person, i.name AS partner_institution, \n       TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) AS duration_months,\n       COUNT(DISTINCT pr.presentation_id) AS presentations_count\nFROM Collaborations c\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nWHERE c.type = 'Образовательный'\nAND pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, c.contact_person, i.name, c.start_date, c.end_date\nORDER BY presentations_count DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.collaboration_id, \n       i.name AS partner_institution, \n       c.contact_person, \n       TIMESTAMPDIFF(MONTH, c.start_date, c.end_date) AS duration_months,\n       COUNT(DISTINCT pr.presentation_id) AS presentation_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nLEFT JOIN Presentations pr ON p.project_id = pr.project_id\nWHERE c.type = 'Образовательный'\n  AND pr.date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.collaboration_id, i.name, c.contact_person, c.start_date, c.end_date\nORDER BY presentation_count DESC\nLIMIT 7;",
            "gigachat_response": "SELECT \n    c.collaboration_id,\n    c.contact_person,\n    i.name AS partner_institution,\n    TIMESTAMPDIFF(MONTH, c.start_date, LEAST(COALESCE(c.end_date, CURRENT_DATE), ADDDATE(CURRENT_DATE, INTERVAL 2 YEAR))) AS collaboration_duration_months,\n    COUNT(pr.presentation_id) AS presentations_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nWHERE c.type = 'Образовательный'\nAND pr.date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR) AND CURRENT_DATE\nGROUP BY c.collaboration_id, c.contact_person, i.name\nORDER BY presentations_count DESC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT \n    c.collaboration_id,\n    c.type,\n    c.contact_person,\n    i.name AS partner_institution,\n    TIMESTAMPDIFF(MONTH, c.start_date, LEAST(COALESCE(c.end_date, CURRENT_DATE), ADDDATE(CURRENT_DATE, INTERVAL 2 YEAR))) AS collaboration_duration_months,\n    COUNT(pr.presentation_id) AS presentations_count\nFROM Collaborations c\nJOIN Institutions i ON c.institution_id = i.institution_id\nJOIN Projects p ON c.project_id = p.project_id\nJOIN Presentations pr ON p.project_id = pr.project_id\nWHERE c.type = 'Образовательный'\nAND pr.date BETWEEN DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR) AND CURRENT_DATE\nGROUP BY c.collaboration_id, c.type, c.contact_person, i.name\nORDER BY presentations_count DESC\nLIMIT 7;"
        },
        {
            "question": "Какие 12 публикаций с импакт-фактором выше 3.5 были опубликованы исследователями национальности 'Россия' за последние 4 года? Включите информацию о названии журнала, дате публикации, авторе и связанном проекте. Отсортируйте результаты по импакт-фактору в убывающем порядке.",
            "sql_query": "SELECT p.publication_id, p.title, p.journal, p.publication_date, p.doi, p.impact_factor,\n       r.first_name, r.last_name, r.nationality, r.position,\n       pr.title AS project_title, pr.status AS project_status\nFROM Publications p\nJOIN Projects pr ON p.project_id = pr.project_id\nJOIN Researchers r ON pr.project_lead_id = r.researcher_id\nWHERE p.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY p.impact_factor DESC\nLIMIT 12;",
            "gpt-4o_response": "SELECT \n    pub.title AS publication_title,\n    pub.journal,\n    pub.publication_date,\n    CONCAT(r.first_name, ' ', r.last_name) AS author_name,\n    proj.title AS project_title,\n    pub.impact_factor\nFROM \n    Publications pub\nJOIN \n    Projects proj ON pub.project_id = proj.project_id\nJOIN \n    Researchers r ON proj.project_lead_id = r.researcher_id\nWHERE \n    pub.impact_factor > 3.5\n    AND r.nationality = 'Россия'\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY \n    pub.impact_factor DESC\nLIMIT 12;",
            "gpt-4o_response_ru": "SELECT pub.title AS publication_title, \n       pub.publication_date, \n       pub.journal, \n       CONCAT(r.first_name, ' ', r.last_name) AS author_name, \n       p.title AS project_title, \n       pub.impact_factor\nFROM Publications pub\nJOIN Projects p ON pub.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE pub.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY pub.impact_factor DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.title AS publication_title,\n    p.journal,\n    p.publication_date,\n    r.first_name AS researcher_first_name,\n    r.last_name AS researcher_last_name,\n    p.impact_factor,\n    proj.title AS project_title\nFROM\n    Publications p\nJOIN\n    Projects proj ON p.project_id = proj.project_id\nJOIN\n    Researchers r ON proj.project_lead_id = r.researcher_id\nWHERE\n    p.impact_factor > 3.5\n    AND r.nationality = 'Россия'\n    AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY\n    p.impact_factor DESC\nLIMIT 12;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.title AS publication_title,\n    p.journal,\n    p.publication_date,\n    r.first_name AS author_first_name,\n    r.last_name AS author_last_name,\n    p.impact_factor,\n    proj.title AS project_title\nFROM\n    Publications p\nJOIN\n    Projects proj ON p.project_id = proj.project_id\nJOIN\n    Researchers r ON proj.project_lead_id = r.researcher_id\nWHERE\n    p.impact_factor > 3.5\n    AND r.nationality = 'Россия'\n    AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY\n    p.impact_factor DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT pub.publication_id, pub.title, pub.journal, pub.publication_date, \n       r.first_name, r.last_name, \n       p.title AS project_title, \n       pub.impact_factor\nFROM Publications pub\nJOIN Projects p ON pub.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE pub.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY pub.impact_factor DESC\nLIMIT 12;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT pub.publication_id, pub.title, pub.journal, pub.publication_date, \n       CONCAT(r.first_name, ' ', r.last_name) AS author, \n       p.title AS project_title, pub.impact_factor\nFROM Publications pub\nJOIN Projects p ON pub.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE pub.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY pub.impact_factor DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.publication_id, p.title AS publication_title, p.journal, \n       p.publication_date, p.impact_factor,\n       CONCAT(r.first_name, ' ', r.last_name) AS researcher_name,\n       pr.title AS project_title\nFROM Publications p\nJOIN Projects pr ON p.project_id = pr.project_id\nJOIN Researchers r ON pr.project_lead_id = r.researcher_id\nJOIN Departments d ON pr.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nWHERE p.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY p.impact_factor DESC\nLIMIT 12;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.publication_id, p.title AS publication_title, p.journal, \n       p.publication_date, p.impact_factor,\n       CONCAT(r.first_name, ' ', r.last_name) AS researcher_name,\n       pr.title AS project_title\nFROM Publications p\nJOIN Projects pr ON p.project_id = pr.project_id\nJOIN Researchers r ON pr.project_lead_id = r.researcher_id\nWHERE p.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY p.impact_factor DESC\nLIMIT 12;",
            "gigachat_response": "SELECT pub.publication_id, j.journal, pub.publication_date, CONCAT(r.first_name, ' ', r.last_name) AS author, p.title AS project_title\nFROM Publications pub\nJOIN Projects p ON pub.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE pub.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY pub.impact_factor DESC\nLIMIT 12;",
            "gigachat_response_ru": "SELECT pub.publication_id, j.title AS journal_title, pub.publication_date, CONCAT(r.first_name, ' ', r.last_name) AS author, p.title AS project_title\nFROM Publications pub\nJOIN Projects p ON pub.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nJOIN Institutions i ON p.department_id IN (SELECT department_id FROM Departments WHERE institution_id = i.institution_id)\nWHERE pub.impact_factor > 3.5\nAND r.nationality = 'Россия'\nAND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nORDER BY pub.impact_factor DESC\nLIMIT 12;"
        },
        {
            "question": "Какие 8 институтов типа 'Научно-исследовательский институт' имеют наибольшее количество активных проектов с суммарным бюджетом более 5 миллионов рублей? Включите информацию о городе, количестве активных проектов, общем бюджете и среднем бюджете на проект. Отсортируйте результаты по количеству проектов в убывающем порядке.",
            "sql_query": "SELECT i.institution_id, i.name, i.city, i.country, i.established_year,\n       COUNT(DISTINCT p.project_id) AS active_projects_count,\n       SUM(p.budget) AS total_budget,\n       AVG(p.budget) AS avg_project_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE i.type = 'Научно-исследовательский институт'\nAND p.status = 'Активный'\nGROUP BY i.institution_id, i.name, i.city, i.country, i.established_year\nHAVING SUM(p.budget) > 5000000\nORDER BY active_projects_count DESC\nLIMIT 8;",
            "gpt-4o_response": "SELECT i.institution_id, i.name AS institution_name, i.city, \n       COUNT(p.project_id) AS active_projects_count, \n       SUM(p.budget) AS total_budget, \n       AVG(p.budget) AS avg_budget_per_project\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE i.type = 'Научно-исследовательский институт'\nAND p.status = 'Активный'\nGROUP BY i.institution_id, i.name, i.city\nHAVING total_budget > 5000000\nORDER BY active_projects_count DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT i.institution_id, i.name AS institution_name, i.city,\n       COUNT(p.project_id) AS active_project_count,\n       SUM(p.budget) AS total_budget,\n       AVG(p.budget) AS avg_budget_per_project\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE i.type = 'Научно-исследовательский институт'\nAND p.status = 'Активный'\nGROUP BY i.institution_id, i.name, i.city\nHAVING total_budget > 5000000\nORDER BY active_project_count DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    i.name AS institution_name,\n    i.city AS institution_city,\n    COUNT(p.project_id) AS active_project_count,\n    SUM(p.budget) AS total_budget,\n    AVG(p.budget) AS average_budget_per_project\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Projects p ON d.department_id = p.department_id\nWHERE\n    i.type = 'Научно-исследовательский институт'\n    AND p.status = 'Активный'\nGROUP BY\n    i.institution_id, i.name, i.city\nHAVING\n    SUM(p.budget) > 5000000\nORDER BY\n    active_project_count DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    i.name AS institution_name,\n    i.city AS institution_city,\n    COUNT(DISTINCT p.project_id) AS active_projects_count,\n    SUM(p.budget) AS total_budget,\n    AVG(p.budget) AS average_budget_per_project\nFROM\n    Institutions i\nJOIN\n    Departments d ON i.institution_id = d.institution_id\nJOIN\n    Projects p ON d.department_id = p.department_id\nWHERE\n    i.type = 'Научно-исследовательский институт'\n    AND p.status = 'Активный'\nGROUP BY\n    i.institution_id, i.name, i.city\nHAVING\n    SUM(p.budget) > 5000000\nORDER BY\n    active_projects_count DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT i.institution_id, i.name, i.city, \n       COUNT(DISTINCT p.project_id) AS active_projects_count,\n       SUM(p.budget) AS total_budget,\n       AVG(p.budget) AS avg_budget_per_project\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE i.type = 'Научно-исследовательский институт'\nAND p.status = 'Активный'\nAND p.budget > 5000000\nGROUP BY i.institution_id, i.name, i.city\nORDER BY active_projects_count DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT i.name, i.city, COUNT(DISTINCT p.project_id) AS active_projects_count, \n       SUM(p.budget) AS total_budget, AVG(p.budget) AS avg_budget\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE i.type = 'Научно-исследовательский институт'\nAND p.status = 'Активный'\nAND p.budget > 5000000\nGROUP BY i.name, i.city\nORDER BY active_projects_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT i.institution_id, i.name AS institution_name, i.city, \n       COUNT(p.project_id) AS active_projects_count,\n       SUM(p.budget) AS total_budget,\n       AVG(p.budget) AS avg_budget_per_project\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE i.type = 'Научно-исследовательский институт'\nAND p.status = 'Активный'\nGROUP BY i.institution_id, i.name, i.city\nHAVING SUM(p.budget) > 5000000\nORDER BY active_projects_count DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT i.institution_id, i.name, i.city, \n       COUNT(p.project_id) AS active_projects_count,\n       SUM(p.budget) AS total_budget,\n       AVG(p.budget) AS avg_budget_per_project\nFROM Institutions i\nJOIN Departments d ON i.institution_id = d.institution_id\nJOIN Projects p ON d.department_id = p.department_id\nWHERE i.type = 'Научно-исследовательский институт'\nAND p.status = 'Активный'\nGROUP BY i.institution_id, i.name, i.city\nHAVING SUM(p.budget) > 5000000\nORDER BY active_projects_count DESC\nLIMIT 8;",
            "gigachat_response": "SELECT \n    i.institution_id, \n    i.name AS institution_name, \n    i.city, \n    COUNT(p.project_id) AS active_projects_count, \n    SUM(p.budget) AS total_active_budget, \n    AVG(p.budget) AS average_project_budget\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nWHERE \n    i.type = 'Научно-исследовательский институт'\nAND \n    p.status = 'Активный'\nAND \n    p.budget > 5000000\nGROUP BY \n    i.institution_id, i.name, i.city\nORDER BY \n    active_projects_count DESC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT \n    i.institution_id, \n    i.name AS institution_name, \n    i.city, \n    COUNT(p.project_id) AS active_projects_count, \n    SUM(p.budget) AS total_budget, \n    AVG(p.budget) AS average_budget_per_project\nFROM \n    Institutions i\nJOIN \n    Departments d ON i.institution_id = d.institution_id\nJOIN \n    Projects p ON d.department_id = p.department_id\nWHERE \n    i.type = 'Научно-исследовательский институт'\n    AND p.status = 'Активный'\n    AND p.budget > 5000000\nGROUP BY \n    i.institution_id, i.name, i.city\nORDER BY \n    active_projects_count DESC\nLIMIT 8;"
        },
        {
            "question": "Какие 6 презентаций, проведенных в комнате 'Зал A' или 'Зал B', имели наибольшую продолжительность и были связаны с проектами, финансируемыми 'Фондом содействия инновациям' или 'Российским научным фондом'? Включите информацию о названии презентации, докладчике, конференции и длительности. Отсортируйте результаты по длительности в убывающем порядке.",
            "sql_query": "SELECT pres.presentation_id, pres.title, pres.room, pres.duration, pres.date, pres.abstract,\n       r.first_name AS presenter_first_name, r.last_name AS presenter_last_name, r.position,\n       c.name AS conference_name, c.location AS conference_location,\n       p.title AS project_title, g.funding_agency\nFROM Presentations pres\nJOIN Researchers r ON pres.presenter_id = r.researcher_id\nJOIN Conferences c ON pres.conference_id = c.conference_id\nJOIN Projects p ON pres.project_id = p.project_id\nJOIN Grants g ON p.project_id = g.project_id\nWHERE pres.room IN ('Зал A', 'Зал B')\nAND g.funding_agency IN ('Фонд содействия инновациям', 'Российский научный фонд')\nORDER BY pres.duration DESC\nLIMIT 6;",
            "gpt-4o_response": "SELECT pres.title AS presentation_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS presenter_name, \n       conf.name AS conference_name, \n       pres.duration\nFROM Presentations pres\nJOIN Conferences conf ON pres.conference_id = conf.conference_id\nJOIN Researchers r ON pres.presenter_id = r.researcher_id\nJOIN Projects proj ON pres.project_id = proj.project_id\nJOIN Grants g ON proj.project_id = g.project_id\nWHERE (pres.room = 'Зал A' OR pres.room = 'Зал B')\nAND (g.funding_agency = 'Фонд содействия инновациям' OR g.funding_agency = 'Российский научный фонд')\nORDER BY pres.duration DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT \n    pres.title AS presentation_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS presenter_name,\n    conf.name AS conference_name,\n    pres.duration\nFROM Presentations pres\nJOIN Projects proj ON pres.project_id = proj.project_id\nJOIN Grants g ON proj.project_id = g.project_id\nJOIN Researchers r ON pres.presenter_id = r.researcher_id\nJOIN Conferences conf ON pres.conference_id = conf.conference_id\nWHERE (pres.room = 'Зал A' OR pres.room = 'Зал B')\nAND (g.funding_agency = 'Фонд содействия инновациям' OR g.funding_agency = 'Российский научный фонд')\nORDER BY pres.duration DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.title AS presentation_title,\n    r.first_name AS presenter_first_name,\n    r.last_name AS presenter_last_name,\n    c.name AS conference_name,\n    p.duration\nFROM\n    Presentations p\nJOIN\n    Researchers r ON p.presenter_id = r.researcher_id\nJOIN\n    Conferences c ON p.conference_id = c.conference_id\nJOIN\n    Projects proj ON p.project_id = proj.project_id\nWHERE\n    (p.room = 'Зал A' OR p.room = 'Зал B')\n    AND (proj.funding_agency = 'Фонд содействия инновациям' OR proj.funding_agency = 'Российский научный фонд')\nORDER BY\n    p.duration DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.title AS presentation_title,\n    r.first_name || ' ' || r.last_name AS presenter_name,\n    c.name AS conference_name,\n    p.duration\nFROM\n    Presentations p\nJOIN\n    Researchers r ON p.presenter_id = r.researcher_id\nJOIN\n    Conferences c ON p.conference_id = c.conference_id\nJOIN\n    Projects proj ON p.project_id = proj.project_id\nWHERE\n    (p.room = 'Зал A' OR p.room = 'Зал B')\n    AND (proj.funding_agency = 'Фонд содействия инновациям' OR proj.funding_agency = 'Российский научный фонд')\nORDER BY\n    p.duration DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.title AS presentation_title, r.first_name, r.last_name, c.name AS conference_name, p.duration\nFROM Presentations p\nJOIN Researchers r ON p.presenter_id = r.researcher_id\nJOIN Conferences c ON p.conference_id = c.conference_id\nJOIN Projects pr ON p.project_id = pr.project_id\nJOIN Grants g ON pr.project_id = g.project_id\nWHERE (p.room = 'Зал A' OR p.room = 'Зал B')\nAND (g.funding_agency = 'Фонд содействия инновациям' OR g.funding_agency = 'Российский научный фонд')\nORDER BY p.duration DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT p.title AS presentation_title, \n       r.first_name, r.last_name, \n       c.name AS conference_name, \n       p.duration\nFROM Presentations p\nJOIN Researchers r ON p.presenter_id = r.researcher_id\nJOIN Conferences c ON p.conference_id = c.conference_id\nJOIN Projects pr ON p.project_id = pr.project_id\nJOIN Grants g ON pr.project_id = g.project_id\nWHERE (p.room = 'Зал A' OR p.room = 'Зал B')\nAND (g.funding_agency = 'Фонд содействия инновациям' OR g.funding_agency = 'Российский научный фонд')\nORDER BY p.duration DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    pr.title AS presentation_title,\n    CONCAT(r.first_name, ' ', r.last_name) AS presenter_name,\n    c.name AS conference_name,\n    pr.duration\nFROM \n    Presentations pr\nJOIN \n    Projects p ON pr.project_id = p.project_id\nJOIN \n    Grants g ON p.project_id = g.project_id\nJOIN \n    Researchers r ON pr.presenter_id = r.researcher_id\nJOIN \n    Conferences c ON pr.conference_id = c.conference_id\nWHERE \n    (pr.room = 'Зал A' OR pr.room = 'Зал B')\n    AND (g.funding_agency = 'Фонд содействия инновациям' OR g.funding_agency = 'Российский научный фонд')\nORDER BY \n    pr.duration DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT pr.title AS presentation_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS presenter_name,\n       c.name AS conference_name, \n       pr.duration\nFROM Presentations pr\nJOIN Researchers r ON pr.presenter_id = r.researcher_id\nJOIN Conferences c ON pr.conference_id = c.conference_id\nJOIN Projects p ON pr.project_id = p.project_id\nWHERE (pr.room = 'Зал A' OR pr.room = 'Зал B')\nAND (p.funding_agency = 'Фонд содействия инновациям' OR p.funding_agency = 'Российский научный фонд')\nORDER BY pr.duration DESC\nLIMIT 6;",
            "gigachat_response": "SELECT pr.presentation_id, pr.title AS presentation_title, \n       CONCAT(r.first_name, ' ', r.last_name) AS presenter_fullname, \n       co.name AS conference_name, pr.duration\nFROM Presentations pr\nJOIN Researchers r ON pr.presenter_id = r.researcher_id\nJOIN Conferences co ON pr.conference_id = co.conference_id\nJOIN Projects p ON pr.project_id = p.project_id\nJOIN Grants g ON p.project_id = g.project_id\nWHERE pr.room IN ('Зал A', 'Зал B') \n      AND g.funding_agency IN ('Фонд содействия инновациям', 'Российский научный фонд')\nORDER BY pr.duration DESC\nLIMIT 6;",
            "gigachat_response_ru": "SELECT pr.presentation_id, pr.title AS presentation_title, CONCAT(r.first_name, ' ', r.last_name) AS presenter_fullname, \n       co.name AS conference_name, pr.duration\nFROM Presentations pr\nJOIN Projects p ON pr.project_id = p.project_id\nJOIN Grants g ON p.project_id = g.project_id\nJOIN Researchers r ON pr.presenter_id = r.researcher_id\nJOIN Conferences co ON pr.conference_id = co.conference_id\nWHERE (pr.room IN ('Зал A', 'Зал B'))\nAND (g.funding_agency IN ('Фонд содействия инновациям', 'Российский научный фонд'))\nORDER BY pr.duration DESC\nLIMIT 6;"
        },
        {
            "question": "Какие 15 исследователей женского пола с должностью 'Научный сотрудник' или 'Старший научный сотрудник' имеют наибольшее количество публикаций и патентов в сумме за последние 5 лет? Включите информацию о количестве публикаций, патентов, общем импакт-факторе и отделе, в котором они работают. Отсортируйте результаты по общему количеству работ в убывающем порядке.",
            "sql_query": "SELECT r.researcher_id, r.first_name, r.last_name, r.position, r.email,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       COUNT(DISTINCT pat.patent_id) AS patents_count,\n       (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_works,\n       SUM(pub.impact_factor) AS total_impact_factor,\n       d.name AS department_name, i.name AS institution_name\nFROM Researchers r\nLEFT JOIN Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN Departments d ON p.department_id = d.department_id\nJOIN Institutions i ON d.institution_id = i.institution_id\nWHERE r.gender = 'Женский'\nAND r.position IN ('Научный сотрудник', 'Старший научный сотрудник')\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, r.email, d.name, i.name\nHAVING (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) > 0\nORDER BY total_works DESC\nLIMIT 15;",
            "gpt-4o_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       COUNT(DISTINCT pat.patent_id) AS patent_count,\n       (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_works,\n       COALESCE(SUM(pub.impact_factor), 0) AS total_impact_factor,\n       d.name AS department_name\nFROM Researchers r\nLEFT JOIN Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id\nLEFT JOIN Patents pat ON p.project_id = pat.project_id\nLEFT JOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Женский'\nAND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nAND (pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR))\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY total_works DESC\nLIMIT 15;",
            "gpt-4o_response_ru": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pub.publication_id) AS publication_count,\n       COUNT(DISTINCT pat.patent_id) AS patent_count,\n       (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_works,\n       COALESCE(SUM(pub.impact_factor), 0) AS total_impact_factor,\n       d.name AS department_name\nFROM Researchers r\nLEFT JOIN Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN Patents pat ON p.project_id = pat.project_id AND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN Departments d ON p.department_id = d.department_id\nWHERE r.gender = 'Женский'\nAND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY total_works DESC\nLIMIT 15;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    r.position,\n    d.name AS department_name,\n    COUNT(DISTINCT pub.publication_id) AS publication_count,\n    COUNT(DISTINCT pat.patent_id) AS patent_count,\n    SUM(pub.impact_factor) AS total_impact_factor,\n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_works\nFROM\n    Researchers r\nLEFT JOIN\n    Publications pub ON r.researcher_id = (SELECT project_lead_id FROM Projects WHERE project_id = pub.project_id)\n    AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN\n    Patents pat ON r.researcher_id = pat.inventor_id\n    AND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN\n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN\n    Departments d ON p.department_id = d.department_id\nWHERE\n    r.gender = 'Женский'\n    AND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY\n    total_works DESC\nLIMIT 15;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    r.first_name,\n    r.last_name,\n    COUNT(DISTINCT p.publication_id) AS publication_count,\n    COUNT(DISTINCT pa.patent_id) AS patent_count,\n    SUM(COALESCE(p.impact_factor, 0)) AS total_impact_factor,\n    d.name AS department_name,\n    (COUNT(DISTINCT p.publication_id) + COUNT(DISTINCT pa.patent_id)) AS total_works\nFROM\n    Researchers r\nLEFT JOIN\n    Publications p ON r.researcher_id = (SELECT project_lead_id FROM Projects WHERE project_id = p.project_id)\n    AND p.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN\n    Patents pa ON r.researcher_id = pa.inventor_id\n    AND pa.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN\n    Projects pr ON r.researcher_id = pr.project_lead_id\nJOIN\n    Departments d ON pr.department_id = d.department_id\nWHERE\n    r.gender = 'Женский'\n    AND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nGROUP BY\n    r.researcher_id, r.first_name, r.last_name, d.name\nORDER BY\n    total_works DESC\nLIMIT 15;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    SUM(pub.impact_factor) AS total_impact_factor,\n    d.name AS department_name\nFROM \n    Researchers r\nJOIN \n    Departments d ON r.researcher_id = d.head_id\nLEFT JOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id AND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nWHERE \n    r.gender = 'Женский' \n    AND r.position IN ('Научный сотрудник', 'Старший научный сотрудник')\nGROUP BY \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    d.name\nORDER BY \n    (publications_count + patents_count) DESC\nLIMIT 15;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    d.name AS department_name, \n    COUNT(DISTINCT pub.publication_id) AS publications_count, \n    COUNT(DISTINCT pat.patent_id) AS patents_count, \n    SUM(pub.impact_factor) AS total_impact_factor\nFROM \n    Researchers r\nJOIN \n    Departments d ON r.researcher_id = d.head_id\nLEFT JOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN \n    Patents pat ON p.project_id = pat.project_id AND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nWHERE \n    r.gender = 'Женский' \n    AND r.position IN ('Научный сотрудник', 'Старший научный сотрудник')\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY \n    (publications_count + patents_count) DESC\nLIMIT 15;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT r.researcher_id, r.first_name, r.last_name, r.position,\n       COUNT(DISTINCT pub.publication_id) AS publications_count,\n       COUNT(DISTINCT pat.patent_id) AS patents_count,\n       (COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id)) AS total_works,\n       SUM(pub.impact_factor) AS total_impact_factor,\n       d.name AS department_name\nFROM Researchers r\nLEFT JOIN Publications pub ON (\n    pub.project_id IN (\n        SELECT p.project_id \n        FROM Projects p \n        JOIN Experiments e ON p.project_id = e.project_id \n        WHERE e.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n    ) AND (\n        SELECT p.project_lead_id \n        FROM Projects p \n        WHERE p.project_id = pub.project_id\n    ) = r.researcher_id\n)\nLEFT JOIN Patents pat ON pat.inventor_id = r.researcher_id AND pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN Departments d ON d.head_id = r.researcher_id\nWHERE r.gender = 'Женский' AND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY total_works DESC\nLIMIT 15;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    r.researcher_id,\n    r.first_name,\n    r.last_name,\n    r.position,\n    d.name AS department_name,\n    COUNT(DISTINCT pub.publication_id) AS publications_count,\n    COUNT(DISTINCT pat.patent_id) AS patents_count,\n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_works,\n    SUM(pub.impact_factor) AS total_impact_factor\nFROM \n    Researchers r\nJOIN \n    Departments d ON r.researcher_id = d.head_id\nLEFT JOIN \n    Projects p ON r.researcher_id = p.project_lead_id\nLEFT JOIN \n    Publications pub ON p.project_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nLEFT JOIN \n    Patents pat ON r.researcher_id = pat.inventor_id AND (pat.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR) OR pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR))\nWHERE \n    r.gender = 'Женский' \n    AND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nGROUP BY \n    r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY \n    total_works DESC\nLIMIT 15;",
            "gigachat_response": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_works,\n    SUM(pub.impact_factor) AS total_impact_factor,\n    d.name AS department_name\nFROM Researchers r\nJOIN Publications pub ON r.researcher_id = pub.project_id AND pub.publication_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN Patents pat ON r.researcher_id = pat.inventor_id AND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nJOIN Departments d ON r.researcher_id = d.head_id\nWHERE r.gender = 'Женский' \nAND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY total_works DESC\nLIMIT 15;",
            "gigachat_response_ru": "SELECT \n    r.researcher_id, \n    r.first_name, \n    r.last_name, \n    r.position, \n    COUNT(DISTINCT pub.publication_id) + COUNT(DISTINCT pat.patent_id) AS total_works,\n    SUM(pub.impact_factor) AS total_impact_factor,\n    d.name AS department_name\nFROM Researchers r\nJOIN Departments d ON r.researcher_id = d.head_id\nLEFT JOIN Publications pub ON pub.project_id IN (\n    SELECT project_id FROM Projects WHERE project_lead_id = r.researcher_id AND start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\n)\nLEFT JOIN Patents pat ON pat.inventor_id = r.researcher_id AND pat.grant_date >= DATE_SUB(CURRENT_DATE, INTERVAL 5 YEAR)\nWHERE r.gender = 'Женский' \nAND (r.position = 'Научный сотрудник' OR r.position = 'Старший научный сотрудник')\nGROUP BY r.researcher_id, r.first_name, r.last_name, r.position, d.name\nORDER BY total_works DESC\nLIMIT 15;"
        },
        {
            "question": "Какие 13 конференций с наибольшим количеством участников были проведены за последние 2 года и имеют хотя бы 3 презентации с длительностью более 60 минут? Включите информацию о месте проведения, организаторе, общем количестве презентаций и средней продолжительности презентаций. Отсортируйте результаты по количеству участников в убывающем порядке.",
            "sql_query": "SELECT c.conference_id, c.name, c.location, c.organizer, c.start_date, c.end_date,\n       c.number_of_participants,\n       COUNT(DISTINCT pres.presentation_id) AS presentations_count,\n       AVG(pres.duration) AS avg_presentation_duration,\n       COUNT(DISTINCT CASE WHEN pres.duration > 60 THEN pres.presentation_id END) AS long_presentations_count\nFROM Conferences c\nJOIN Presentations pres ON c.conference_id = pres.conference_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.conference_id, c.name, c.location, c.organizer, c.start_date, c.end_date, c.number_of_participants\nHAVING COUNT(DISTINCT CASE WHEN pres.duration > 60 THEN pres.presentation_id END) >= 3\nORDER BY c.number_of_participants DESC\nLIMIT 13;",
            "gpt-4o_response": "SELECT c.conference_id, c.name AS conference_name, c.location, c.organizer,\n       c.number_of_participants, COUNT(p.presentation_id) AS total_presentations,\n       AVG(p.duration) AS avg_presentation_duration\nFROM Conferences c\nJOIN Presentations p ON c.conference_id = p.conference_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND p.duration > 60\nGROUP BY c.conference_id, c.name, c.location, c.organizer, c.number_of_participants\nHAVING COUNT(p.presentation_id) >= 3\nORDER BY c.number_of_participants DESC\nLIMIT 13;",
            "gpt-4o_response_ru": "SELECT c.conference_id, c.name AS conference_name, c.location, c.organizer,\n       c.number_of_participants, COUNT(p.presentation_id) AS total_presentations,\n       AVG(p.duration) AS avg_presentation_duration\nFROM Conferences c\nJOIN Presentations p ON c.conference_id = p.conference_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY c.conference_id, c.name, c.location, c.organizer, c.number_of_participants\nHAVING COUNT(CASE WHEN p.duration > 60 THEN 1 END) >= 3\nORDER BY c.number_of_participants DESC\nLIMIT 13;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.name AS conference_name,\n    c.location,\n    c.organizer,\n    COUNT(p.presentation_id) AS total_presentations,\n    AVG(p.duration) AS average_presentation_duration,\n    c.number_of_participants\nFROM\n    Conferences c\nJOIN\n    Presentations p ON c.conference_id = p.conference_id\nWHERE\n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    c.conference_id, c.name, c.location, c.organizer, c.number_of_participants\nHAVING\n    COUNT(CASE WHEN p.duration > 60 THEN p.presentation_id ELSE NULL END) >= 3\nORDER BY\n    c.number_of_participants DESC\nLIMIT 13;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    c.conference_id,\n    c.name AS conference_name,\n    c.location,\n    c.organizer,\n    c.number_of_participants,\n    COUNT(p.presentation_id) AS total_presentations,\n    AVG(p.duration) AS average_presentation_duration\nFROM\n    Conferences c\nJOIN\n    Presentations p ON c.conference_id = p.conference_id\nWHERE\n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nGROUP BY\n    c.conference_id, c.name, c.location, c.organizer, c.number_of_participants\nHAVING\n    COUNT(CASE WHEN p.duration > 60 THEN p.presentation_id ELSE NULL END) >= 3\nORDER BY\n    c.number_of_participants DESC\nLIMIT 13;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.conference_id, c.name, c.location, c.organizer, \n       COUNT(DISTINCT p.presentation_id) AS total_presentations,\n       AVG(p.duration) AS avg_presentation_duration,\n       c.number_of_participants\nFROM Conferences c\nJOIN Presentations p ON c.conference_id = p.conference_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND p.duration > 60\nGROUP BY c.conference_id, c.name, c.location, c.organizer, c.number_of_participants\nHAVING COUNT(DISTINCT p.presentation_id) >= 3\nORDER BY c.number_of_participants DESC\nLIMIT 13;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.name, c.location, c.organizer, COUNT(p.presentation_id) AS total_presentations, \n       AVG(p.duration) AS avg_presentation_duration, c.number_of_participants\nFROM Conferences c\nJOIN Presentations p ON c.conference_id = p.conference_id\nWHERE c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND p.duration > 60\nGROUP BY c.name, c.location, c.organizer, c.number_of_participants\nHAVING COUNT(p.presentation_id) >= 3\nORDER BY c.number_of_participants DESC\nLIMIT 13;",
            "deepseek/deepseek-chat-v3-0324_response": "",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    c.conference_id,\n    c.name AS conference_name,\n    c.location,\n    c.organizer,\n    c.number_of_participants,\n    COUNT(p.presentation_id) AS total_presentations,\n    AVG(p.duration) AS avg_duration_minutes\nFROM \n    Conferences c\nJOIN \n    Presentations p ON c.conference_id = p.conference_id\nWHERE \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND p.duration > 60\nGROUP BY \n    c.conference_id, c.name, c.location, c.organizer, c.number_of_participants\nHAVING \n    COUNT(p.presentation_id) >= 3\nORDER BY \n    c.number_of_participants DESC\nLIMIT 13;",
            "gigachat_response": "SELECT \n    c.conference_id,\n    c.name AS conference_name,\n    c.location,\n    c.organizer,\n    c.number_of_participants,\n    COUNT(pr.presentation_id) AS presentations_count,\n    AVG(TIME_TO_SEC(TIMEDIFF(pr.duration, SEC_TO_TIME(0)))) / 60 AS average_presentation_minutes\nFROM \n    Conferences c\nJOIN \n    Presentations pr ON c.conference_id = pr.conference_id\nWHERE \n    c.start_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\n    AND pr.duration > 60\nGROUP BY \n    c.conference_id, c.name, c.location, c.organizer, c.number_of_participants\nHAVING \n    COUNT(pr.presentation_id) >= 3\nORDER BY \n    c.number_of_participants DESC\nLIMIT 13;",
            "gigachat_response_ru": "SELECT c.conference_id, c.name AS conference_name, c.location, c.number_of_participants, c.organizer,\n       COUNT(pr.presentation_id) AS presentations_count,\n       AVG(TIME_TO_SEC(TIMEDIFF(pr.time + INTERVAL pr.duration MINUTE, pr.time))/60) AS average_presentation_duration_minutes\nFROM Conferences c\nJOIN Presentations pr ON c.conference_id = pr.conference_id\nWHERE c.end_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nAND pr.duration > 60\nGROUP BY c.conference_id, c.name, c.location, c.number_of_participants, c.organizer\nHAVING COUNT(pr.presentation_id) >= 3\nORDER BY c.number_of_participants DESC\nLIMIT 13;"
        },
        {
            "question": "Какие 9 отделов с наибольшим бюджетом на этаже 2 или 3 имеют самое дорогостоящее оборудование, приобретенное за последние 4 года? Включите информацию о названии отдела, институте, количестве единиц оборудования и общей стоимости оборудования. Отсортируйте результаты по общей стоимости оборудования в убывающем порядке.",
            "sql_query": "SELECT d.department_id, d.name, d.building, d.floor, d.budget,\n       i.name AS institution_name, i.city, i.type,\n       COUNT(DISTINCT eq.equipment_id) AS equipment_count,\n       SUM(eq.cost) AS total_equipment_cost,\n       MAX(eq.cost) AS most_expensive_equipment\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nWHERE d.floor IN (2, 3)\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY d.department_id, d.name, d.building, d.floor, d.budget, i.name, i.city, i.type\nORDER BY total_equipment_cost DESC\nLIMIT 9;",
            "gpt-4o_response": "SELECT d.name AS department_name, \n       i.name AS institution_name, \n       COUNT(e.equipment_id) AS equipment_count, \n       SUM(e.cost) AS total_equipment_cost\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment e ON d.department_id = e.department_id\nWHERE (d.floor = 2 OR d.floor = 3)\nAND e.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY d.department_id, d.name, i.name\nORDER BY total_equipment_cost DESC\nLIMIT 9;",
            "gpt-4o_response_ru": "SELECT \n    d.name AS department_name,\n    i.name AS institution_name,\n    COUNT(e.equipment_id) AS equipment_count,\n    SUM(e.cost) AS total_equipment_cost\nFROM \n    Departments d\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Equipment e ON d.department_id = e.department_id\nWHERE \n    d.floor IN (2, 3)\n    AND e.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    d.department_id, d.name, i.name\nORDER BY \n    total_equipment_cost DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    d.name AS department_name,\n    i.name AS institution_name,\n    COUNT(e.equipment_id) AS equipment_count,\n    SUM(e.cost) AS total_equipment_cost\nFROM\n    Departments d\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nJOIN\n    Equipment e ON d.department_id = e.department_id\nWHERE\n    (d.floor = 2 OR d.floor = 3)\n    AND e.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY\n    d.department_id, d.name, i.name\nORDER BY\n    total_equipment_cost DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    d.name AS department_name,\n    i.name AS institution_name,\n    COUNT(e.equipment_id) AS equipment_count,\n    SUM(e.cost) AS total_equipment_cost\nFROM\n    Departments d\nJOIN\n    Institutions i ON d.institution_id = i.institution_id\nJOIN\n    Equipment e ON d.department_id = e.department_id\nWHERE\n    (d.floor = 2 OR d.floor = 3)\n    AND e.purchase_date >= DATE_SUB(CURDATE(), INTERVAL 4 YEAR)\nGROUP BY\n    d.department_id, d.name, i.name\nORDER BY\n    total_equipment_cost DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT d.name AS department_name, i.name AS institution_name, \n       COUNT(eq.equipment_id) AS equipment_count, \n       SUM(eq.cost) AS total_equipment_cost\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nWHERE d.floor IN (2, 3)\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY d.name, i.name\nORDER BY total_equipment_cost DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    d.name AS department_name, \n    i.name AS institution_name, \n    COUNT(eq.equipment_id) AS equipment_count, \n    SUM(eq.cost) AS total_equipment_cost\nFROM \n    Departments d\nJOIN \n    Institutions i ON d.institution_id = i.institution_id\nJOIN \n    Equipment eq ON d.department_id = eq.department_id\nWHERE \n    d.floor IN (2, 3) \n    AND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY \n    d.name, i.name\nORDER BY \n    total_equipment_cost DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT d.department_id, d.name AS department_name, i.name AS institution_name, \n       d.budget AS department_budget, \n       COUNT(eq.equipment_id) AS equipment_count,\n       SUM(eq.cost) AS total_equipment_cost\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nWHERE (d.floor = 2 OR d.floor = 3)\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY d.department_id, d.name, i.name, d.budget\nORDER BY d.budget DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT d.name AS department_name, i.name AS institution_name, \n       COUNT(eq.equipment_id) AS equipment_count, \n       SUM(eq.cost) AS total_equipment_cost\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nWHERE d.floor IN (2, 3)\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY d.department_id, d.name, i.name\nORDER BY d.budget DESC\nLIMIT 9;",
            "gigachat_response": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    COUNT(eq.equipment_id) AS num_equipment, \n    SUM(eq.cost) AS total_cost\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nWHERE d.floor IN (2, 3)\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY d.department_id, d.name, i.name\nORDER BY total_cost DESC\nLIMIT 9;",
            "gigachat_response_ru": "SELECT \n    d.department_id, \n    d.name AS department_name, \n    i.name AS institution_name, \n    COUNT(eq.equipment_id) AS num_equipment, \n    SUM(eq.cost) AS total_cost\nFROM Departments d\nJOIN Institutions i ON d.institution_id = i.institution_id\nJOIN Equipment eq ON d.department_id = eq.department_id\nWHERE d.floor IN (2, 3)\nAND eq.purchase_date >= DATE_SUB(CURRENT_DATE, INTERVAL 4 YEAR)\nGROUP BY d.department_id, d.name, i.name\nORDER BY total_cost DESC\nLIMIT 9;"
        },
        {
            "question": "Какие 7 этических одобрений со статусом 'Одобрено' или 'Одобрено с условиями' были получены быстрее всего за последние 2 года? Включите информацию о названии комитета, контактном лице, связанном проекте и условиях одобрения. Отсортируйте результаты по скорости одобрения в возрастающем порядке.",
            "sql_query": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person, ea.contact_email,\n       ea.application_date, ea.approval_date,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days,\n       p.title AS project_title, p.status AS project_status,\n       r.first_name AS lead_first_name, r.last_name AS lead_last_name,\n       ea.conditions\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nJOIN Researchers r ON p.project_lead_id = r.researcher_id\nWHERE ea.status IN ('Одобрено', 'Одобрено с условиями')\nAND ea.approval_date IS NOT NULL\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 7;",
            "gpt-4o_response": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, ea.conditions,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, ea.conditions,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    ea.committee_name,\n    ea.contact_person,\n    p.title AS project_title,\n    ea.conditions,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_time_days\nFROM\n    EthicsApprovals ea\nJOIN\n    Projects p ON ea.project_id = p.project_id\nWHERE\n    (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\n    AND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY\n    approval_time_days ASC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    ea.approval_id,\n    ec.committee_name,\n    ec.contact_person,\n    p.title AS project_title,\n    ec.conditions,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM\n    EthicsApprovals ea\nJOIN\n    Projects p ON ea.project_id = p.project_id\nJOIN\n    (SELECT approval_id, committee_name, contact_person, contact_email, contact_phone, conditions FROM EthicsApprovals) AS ec ON ea.approval_id = ec.approval_id\nWHERE\n    (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\n    AND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY\n    approval_days ASC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person, \n       ea.contact_email, ea.conditions, p.title AS project_title, \n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    ea.approval_id, \n    ea.status, \n    ea.committee_name, \n    ea.contact_person, \n    p.title AS project_title,\n    DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM \n    EthicsApprovals ea\nJOIN \n    Projects p ON ea.project_id = p.project_id\nWHERE \n    (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND \n    ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY \n    approval_days ASC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT ea.approval_id, ea.committee_name, ea.contact_person, p.title AS project_title, ea.conditions,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT ea.approval_id, ea.committee_name, ea.contact_person, \n       p.title AS project_title, ea.conditions, \n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_days ASC\nLIMIT 7;",
            "gigachat_response": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, ea.conditions,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_speed_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_speed_days ASC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT ea.approval_id, ea.status, ea.committee_name, ea.contact_person,\n       p.title AS project_title, ea.conditions,\n       DATEDIFF(ea.approval_date, ea.application_date) AS approval_speed_days\nFROM EthicsApprovals ea\nJOIN Projects p ON ea.project_id = p.project_id\nWHERE (ea.status = 'Одобрено' OR ea.status = 'Одобрено с условиями')\nAND ea.application_date >= DATE_SUB(CURRENT_DATE, INTERVAL 2 YEAR)\nORDER BY approval_speed_days ASC\nLIMIT 7;"
        }
    ]
}