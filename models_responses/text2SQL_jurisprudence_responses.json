{
    "queries": [
        {
            "question": "В каких судах, где дела находятся на рассмотрении, работают более одного судьи?",
            "sql_query": "SELECT c.CourtName, COUNT(DISTINCT j.JudgeID) AS TotalJudges FROM Court c JOIN Judge j ON c.CourtID = j.CourtID JOIN `Cases` cs ON c.CourtID = cs.CourtID WHERE cs.Status = 'На рассмотрении' GROUP BY c.CourtName HAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "gpt-4o_response": "SELECT c.CourtName\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Judge j ON c.CourtID = j.CourtID\nWHERE cs.Status = 'На рассмотрении'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "gpt-4o_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Cases cs ON c.CourtID = cs.CourtID\nWHERE cs.Status = 'На рассмотрении'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT c.CourtName\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Cases ca ON c.CourtID = ca.CourtID\nWHERE ca.Status = 'Рассматривается'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Cases ca ON c.CourtID = ca.CourtID\nWHERE ca.Status = 'Рассматривается'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, COUNT(DISTINCT j.JudgeID) AS TotalJudges \nFROM Court c \nJOIN Cases cs ON c.CourtID = cs.CourtID \nJOIN Judge j ON c.CourtID = j.CourtID \nWHERE cs.Status = 'Рассматривается' \nGROUP BY c.CourtName \nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.CourtName, \n    COUNT(DISTINCT j.JudgeID) AS TotalJudges\nFROM \n    Court c\nJOIN \n    Cases cs ON c.CourtID = cs.CourtID\nJOIN \n    Hearing h ON cs.CaseID = h.CaseID\nJOIN \n    Judge j ON h.JudgeID = j.JudgeID\nWHERE \n    cs.Status = 'Рассматривается'\nGROUP BY \n    c.CourtName\nHAVING \n    COUNT(DISTINCT j.JudgeID) > 1",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, c.CourtType, c.Address, COUNT(DISTINCT j.JudgeID) AS JudgeCount \nFROM Court c \nJOIN Judge j ON c.CourtID = j.CourtID \nJOIN Cases cs ON c.CourtID = cs.CourtID \nWHERE cs.Status = 'Рассматривается' \nGROUP BY c.CourtID, c.CourtName, c.CourtType, c.Address \nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, COUNT(DISTINCT j.JudgeID) AS JudgeCount\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN `Cases` cs ON c.CourtID = cs.CourtID\nWHERE cs.Status = 'Рассматривается'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "gigachat_response": "SELECT c.CourtName, COUNT(DISTINCT j.JudgeID) AS NumJudges\nFROM Court c\nJOIN Hearing h ON c.CourtID = h.CourtID\nJOIN Cases ca ON h.CaseID = ca.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nWHERE ca.`Status` IN ('Рассматривается', 'На рассмотрении')\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT j.JudgeID) > 1;",
            "gigachat_response_ru": "SELECT c.CourtName, COUNT(DISTINCT j.JudgeID) AS NumJudges\nFROM Court c\nJOIN Hearing h ON c.CourtID = h.CourtID\nJOIN Cases ca ON h.CaseID = ca.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nWHERE ca.`Status` IN ('Рассматривается', 'На рассмотрении')\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT j.JudgeID) > 1;"
        },
        {
            "question": "Какие юридические фирмы имеют средний опыт адвокатов более 5 лет и работают с юридическими лицами?",
            "sql_query": "SELECT lf.FirmName, AVG(l.ExperienceYears) AS AvgExperience FROM LawFirm lf JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Client cl ON ct.ClientID = cl.ClientID WHERE cl.ClientType = 'Юридическое лицо' GROUP BY lf.FirmName HAVING AVG(l.ExperienceYears) > 5;",
            "gpt-4o_response": "SELECT lf.FirmName, AVG(l.ExperienceYears) AS AvgExperience\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Client cl ON ct.ClientID = cl.ClientID\nWHERE cl.ClientType = 'Юридическое лицо'\nGROUP BY lf.FirmName\nHAVING AVG(l.ExperienceYears) > 5;",
            "gpt-4o_response_ru": "SELECT lf.FirmName, AVG(l.ExperienceYears) AS AvgExperience\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Client cl ON ct.ClientID = cl.ClientID\nWHERE cl.ClientType = 'Юридическое лицо'\nGROUP BY lf.FirmName\nHAVING AVG(l.ExperienceYears) > 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  lf.FirmName\nFROM LawFirm AS lf\nJOIN Lawyer AS l\n  ON lf.LawFirmID = l.LawFirmID\nJOIN Contract AS c\n  ON l.LawyerID = c.LawyerID\nJOIN Client AS cl\n  ON c.ClientID = cl.ClientID\nWHERE\n  cl.ClientType = 'Юридическое лицо'\nGROUP BY\n  lf.FirmName\nHAVING\n  AVG(l.ExperienceYears) > 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    lf.FirmName\nFROM\n    LawFirm lf\nJOIN\n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN\n    `Contract` c ON l.LawyerID = c.LawyerID\nJOIN\n    Client cl ON c.ClientID = cl.ClientID\nWHERE\n    cl.ClientType = 'Юридическое лицо'\nGROUP BY\n    lf.FirmName\nHAVING\n    AVG(l.ExperienceYears) > 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    lf.FirmName, \n    AVG(l.ExperienceYears) AS AvgLawyerExperience, \n    COUNT(DISTINCT c.ClientID) AS TotalClients\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Client c ON ct.ClientID = c.ClientID\nWHERE \n    c.ClientType = 'Юридическое лицо'\nGROUP BY \n    lf.FirmName\nHAVING \n    AVG(l.ExperienceYears) > 5",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    lf.FirmName, \n    AVG(l.ExperienceYears) AS AvgExperience, \n    COUNT(DISTINCT c.ClientID) AS TotalClients\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Client c ON ct.ClientID = c.ClientID\nWHERE \n    c.ClientType = 'Юридическое лицо'\nGROUP BY \n    lf.FirmName\nHAVING \n    AVG(l.ExperienceYears) > 5",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT lf.FirmName, AVG(l.ExperienceYears) AS AvgExperienceYears\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Client cl ON ct.ClientID = cl.ClientID\nWHERE cl.ClientType = 'Юридическое лицо'\nGROUP BY lf.FirmName\nHAVING AVG(l.ExperienceYears) > 5\nORDER BY AvgExperienceYears DESC;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT lf.FirmName, AVG(l.ExperienceYears) AS AvgExperienceYears\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Client cl ON ct.ClientID = cl.ClientID\nWHERE cl.ClientType = 'Юридическое лицо'\nGROUP BY lf.FirmName\nHAVING AVG(l.ExperienceYears) > 5\nORDER BY AvgExperienceYears DESC;",
            "gigachat_response": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract c ON l.LawyerID = c.LawyerID\nJOIN Client cl ON c.ClientID = cl.ClientID\nWHERE cl.ClientType = 'Юридическое лицо'\nGROUP BY lf.FirmName\nHAVING AVG(l.ExperienceYears) > 5;",
            "gigachat_response_ru": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract c ON l.LawyerID = c.LawyerID\nJOIN Client cl ON c.ClientID = cl.ClientID\nWHERE cl.ClientType = 'Юридическое лицо'\nGROUP BY lf.FirmName\nHAVING AVG(l.ExperienceYears) > 5;"
        },
        {
            "question": "Какие женщины-клиенты имеют общую сумму платежей более пяти тысяч?",
            "sql_query": "SELECT p.FirstName, p.LastName, SUM(pmt.Amount) AS TotalPayments FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN Payment pmt ON ct.ContractID = pmt.ContractID WHERE p.Gender = 'Ж' GROUP BY p.FirstName, p.LastName HAVING SUM(pmt.Amount) > 5000;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, SUM(pmt.Amount) AS TotalPayments\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN Contract ct ON cl.ClientID = ct.ClientID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE p.Gender = 'Ж'\nGROUP BY p.FirstName, p.LastName\nHAVING SUM(pmt.Amount) > 5000;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, SUM(pmt.Amount) AS TotalPayments\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN Contract ct ON cl.ClientID = ct.ClientID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE p.Gender = 'Ж'\nGROUP BY p.FirstName, p.LastName\nHAVING SUM(pmt.Amount) > 5000;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  SUM(pmt.Amount) AS TotalPayments\nFROM Person AS p\nJOIN Client AS c\n  ON p.PersonID = c.PersonID\nJOIN `Contract` AS ct\n  ON c.ClientID = ct.ClientID\nJOIN Payment AS pmt\n  ON ct.ContractID = pmt.ContractID\nWHERE\n  p.Gender = 'Ж'\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  SUM(pmt.Amount) > 5000;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT p.FirstName, p.LastName\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN `Contract` ct ON c.ClientID = ct.ClientID\nJOIN Payment pm ON ct.ContractID = pm.ContractID\nWHERE p.Gender = 'Ж'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING SUM(pm.Amount) > 5000;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.FirstName, p.LastName, SUM(pmt.Amount) AS TotalPayments \nFROM Person p \nJOIN Client cl ON p.PersonID = cl.PersonID \nJOIN Contract ct ON cl.ClientID = ct.ClientID \nJOIN Payment pmt ON ct.ContractID = pmt.ContractID \nWHERE p.Gender = 'Ж' \nGROUP BY p.FirstName, p.LastName \nHAVING SUM(pmt.Amount) > 5000;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Person p\nJOIN \n    Client cl ON p.PersonID = cl.PersonID\nJOIN \n    Contract ct ON cl.ClientID = ct.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    p.Gender = 'Ж'\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    SUM(pmt.Amount) > 5000",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, SUM(pmt.Amount) AS TotalPayments \nFROM Person p \nJOIN Client cl ON p.PersonID = cl.PersonID \nJOIN Contract ct ON cl.ClientID = ct.ClientID \nJOIN Payment pmt ON ct.ContractID = pmt.ContractID \nWHERE p.Gender = 'Ж' \nGROUP BY p.FirstName, p.LastName \nHAVING SUM(pmt.Amount) > 5000;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, SUM(pmt.Amount) AS TotalPayments\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Contract ct ON c.ClientID = ct.ClientID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE p.Gender = 'Ж'\nGROUP BY p.FirstName, p.LastName\nHAVING SUM(pmt.Amount) > 5000;",
            "gigachat_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    SUM(pay.Amount) AS TotalPayment\nFROM \n    Person p\nJOIN \n    Client c ON p.PersonID = c.PersonID\nJOIN \n    Contract con ON c.ClientID = con.ClientID\nJOIN \n    Payment pay ON con.ContractID = pay.ContractID\nWHERE \n    p.Gender = 'Ж'\nGROUP BY \n    p.FirstName, p.LastName\nHAVING \n    SUM(pay.Amount) > 5000;",
            "gigachat_response_ru": "SELECT p.FirstName, p.LastName, SUM(pay.Amount) AS TotalPayment\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Contract con ON c.ClientID = con.ClientID\nJOIN Payment pay ON con.ContractID = pay.ContractID\nWHERE p.Gender = 'Ж'\nGROUP BY p.FirstName, p.LastName\nHAVING TotalPayment > 5000;"
        },
        {
            "question": "В каких судах рассмотрено более 2 уголовных дел?",
            "sql_query": "SELECT c.CourtName, COUNT(DISTINCT v.VerdictID) AS TotalVerdicts FROM Court c JOIN `Cases` cs ON c.CourtID = cs.CourtID JOIN Verdict v ON cs.CaseID = v.CaseID WHERE v.VerdictType = 'Уголовное Дело' GROUP BY c.CourtName HAVING COUNT(DISTINCT v.VerdictID) > 2;",
            "gpt-4o_response": "SELECT c.CourtName, COUNT(cs.CaseID) AS CriminalCaseCount\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nWHERE cs.CaseType = 'Уголовное дело'\nGROUP BY c.CourtName\nHAVING COUNT(cs.CaseID) > 2;",
            "gpt-4o_response_ru": "SELECT c.CourtName, COUNT(cs.CaseID) AS CriminalCaseCount\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nWHERE cs.CaseType = 'Уголовное дело'\nGROUP BY c.CourtName\nHAVING COUNT(cs.CaseID) > 2;",
            "google/gemini-2.0-flash-001_response": "SELECT c.CourtName\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nWHERE ca.CaseType = 'Уголовное дело'\nGROUP BY c.CourtName\nHAVING COUNT(ca.CaseID) > 2;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.CourtName\nFROM Cases ca\nJOIN Court c ON ca.CourtID = c.CourtID\nWHERE ca.CaseType = 'Уголовное дело'\nGROUP BY c.CourtName\nHAVING COUNT(ca.CaseID) > 2;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, COUNT(DISTINCT ca.CaseID) AS TotalCases \nFROM Court c \nJOIN Cases ca ON c.CourtID = ca.CourtID \nWHERE ca.CaseType = 'Уголовное дело' \nGROUP BY c.CourtName \nHAVING COUNT(DISTINCT ca.CaseID) > 2;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.CourtName, COUNT(DISTINCT ca.CaseID) AS TotalCases \nFROM Court c \nJOIN `Cases` ca ON c.CourtID = ca.CourtID \nWHERE ca.CaseType = 'Уголовное дело' \nGROUP BY c.CourtName \nHAVING COUNT(DISTINCT ca.CaseID) > 2;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, c.CourtType, COUNT(cs.CaseID) AS CriminalCasesCount \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nWHERE cs.CaseType = 'Уголовное дело' \nGROUP BY c.CourtName, c.CourtType \nHAVING COUNT(cs.CaseID) > 2;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, COUNT(cs.CaseID) AS CriminalCasesCount \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nWHERE cs.CaseType = 'Уголовное дело' \nGROUP BY c.CourtName \nHAVING COUNT(cs.CaseID) > 2;",
            "gigachat_response": "SELECT c.CourtName, COUNT(*) AS NumOfCrimes\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nWHERE cs.CaseType = 'Уголовное дело'\nGROUP BY c.CourtName\nHAVING COUNT(*) > 2;",
            "gigachat_response_ru": "SELECT c.CourtName, COUNT(*) AS CriminalCasesCount\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nWHERE ca.CaseType = 'Уголовное дело'\nGROUP BY c.CourtName\nHAVING COUNT(*) > 2;"
        },
        {
            "question": "Какие специализации адвокатов имеют более 1 контракта с клиентами, зарегистрированными после 2023-01-01?",
            "sql_query": "SELECT l.Specialization, COUNT(DISTINCT ct.ContractID) AS TotalContracts FROM Lawyer l JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Client cl ON ct.ClientID = cl.ClientID WHERE cl.RegistrationDate > '2023-01-01' GROUP BY l.Specialization HAVING COUNT(DISTINCT ct.ContractID) > 1;",
            "gpt-4o_response": "SELECT l.Specialization, COUNT(ct.ContractID) AS TotalContracts\nFROM Lawyer l\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Client cl ON ct.ClientID = cl.ClientID\nWHERE cl.RegistrationDate > '2023-01-01'\nGROUP BY l.Specialization\nHAVING COUNT(ct.ContractID) > 1;",
            "gpt-4o_response_ru": "SELECT l.Specialization\nFROM Lawyer l\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Client cl ON ct.ClientID = cl.ClientID\nWHERE cl.RegistrationDate > '2023-01-01'\nGROUP BY l.Specialization\nHAVING COUNT(ct.ContractID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT l.Specialization\nFROM Lawyer l\nJOIN Contract c ON l.LawyerID = c.LawyerID\nJOIN Client cl ON c.ClientID = cl.ClientID\nWHERE cl.RegistrationDate > '2023-01-01'\nGROUP BY l.Specialization\nHAVING COUNT(DISTINCT c.ContractID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT l.Specialization\nFROM Lawyer l\nJOIN Contract c ON l.LawyerID = c.LawyerID\nJOIN Client cl ON c.ClientID = cl.ClientID\nWHERE cl.RegistrationDate > '2023-01-01'\nGROUP BY l.Specialization\nHAVING COUNT(DISTINCT c.ContractID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT l.Specialization, COUNT(DISTINCT ct.ContractID) AS TotalContracts \nFROM Lawyer l \nJOIN Contract ct ON l.LawyerID = ct.LawyerID \nJOIN Client c ON ct.ClientID = c.ClientID \nWHERE c.RegistrationDate > '2023-01-01' \nGROUP BY l.Specialization \nHAVING COUNT(DISTINCT ct.ContractID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    l.Specialization, \n    COUNT(DISTINCT c.ContractID) AS TotalContracts, \n    COUNT(DISTINCT cl.ClientID) AS TotalClients\nFROM \n    Lawyer l\nJOIN \n    Contract c ON l.LawyerID = c.LawyerID\nJOIN \n    Client cl ON c.ClientID = cl.ClientID\nWHERE \n    cl.RegistrationDate > '2023-01-01'\nGROUP BY \n    l.Specialization\nHAVING \n    COUNT(DISTINCT c.ContractID) > 1",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT l.Specialization, COUNT(DISTINCT ct.ContractID) AS ContractCount \nFROM Lawyer l \nJOIN Contract ct ON l.LawyerID = ct.LawyerID \nJOIN Client cl ON ct.ClientID = cl.ClientID \nWHERE cl.RegistrationDate > '2023-01-01' \nGROUP BY l.Specialization \nHAVING COUNT(DISTINCT ct.ContractID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT l.Specialization, COUNT(DISTINCT c.ContractID) AS ContractCount\nFROM Lawyer l\nJOIN Contract c ON l.LawyerID = c.LawyerID\nJOIN Client cl ON c.ClientID = cl.ClientID\nWHERE cl.RegistrationDate > '2023-01-01'\nGROUP BY l.Specialization\nHAVING COUNT(DISTINCT c.ContractID) > 1;",
            "gigachat_response": "SELECT DISTINCT l.Specialization\nFROM Lawyer l\nJOIN Contract c ON l.LawyerID = c.LawyerID\nWHERE c.ContractDate >= '2023-01-01'\nGROUP BY l.Specialization\nHAVING COUNT(c.ContractID) > 1;",
            "gigachat_response_ru": "SELECT l.Specialization\nFROM Lawyer l\nJOIN Contract c ON l.LawyerID = c.LawyerID\nWHERE c.ContractDate >= '2023-01-01'\nGROUP BY l.Specialization\nHAVING COUNT(c.ContractID) > 1;"
        },
        {
            "question": "Какие лица подали более 1 апелляции по закрытым делам?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT a.AppealID) AS TotalAppeals FROM Person p JOIN Appeal a ON p.PersonID = a.AppellantID JOIN `Cases` c ON a.CaseID = c.CaseID WHERE c.Status = 'Закрыто' GROUP BY p.FirstName, p.LastName HAVING COUNT(DISTINCT a.AppealID) > 1;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS TotalAppeals\nFROM Person p\nJOIN Appeal a ON p.PersonID = a.AppellantID\nJOIN Cases c ON a.CaseID = c.CaseID\nWHERE c.Status = 'Закрыто'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS TotalAppeals\nFROM Person p\nJOIN Appeal a ON p.PersonID = a.AppellantID\nJOIN Cases c ON a.CaseID = c.CaseID\nWHERE c.Status = 'Закрыто'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(a.AppealID) AS TotalAppeals\nFROM Person AS p\nJOIN Appeal AS a\n  ON p.PersonID = a.AppellantID\nJOIN Cases AS c\n  ON a.CaseID = c.CaseID\nWHERE\n  c.Status = 'Закрыто'\nGROUP BY\n  p.PersonID,\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(a.AppealID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS TotalAppeals\nFROM Person p\nJOIN Appeal a ON p.PersonID = a.AppellantID\nJOIN Cases c ON a.CaseID = c.CaseID\nWHERE c.Status = 'Закрыто'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT a.AppealID) AS TotalAppeals \nFROM Person p \nJOIN Appeal a ON p.PersonID = a.AppellantID \nJOIN Cases c ON a.CaseID = c.CaseID \nWHERE c.Status = 'Закрыто' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT a.AppealID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT a.AppealID) AS TotalAppeals \nFROM Person p \nJOIN Appeal a ON p.PersonID = a.AppellantID \nJOIN `Cases` c ON a.CaseID = c.CaseID \nWHERE c.Status = 'Закрыто' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT a.AppealID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS TotalAppeals \nFROM Person p \nJOIN Appeal a ON p.PersonID = a.AppellantID \nJOIN `Cases` c ON a.CaseID = c.CaseID \nWHERE c.Status = 'Закрыто' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(a.AppealID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS TotalAppeals\nFROM Person p\nJOIN Appeal a ON p.PersonID = a.AppellantID\nJOIN `Cases` c ON a.CaseID = c.CaseID\nWHERE c.Status = 'Закрыто'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "gigachat_response": "SELECT p.FirstName, p.LastName, COUNT(ap.AppealID) AS NumberOfAppeals\nFROM Person p\nJOIN Appeal ap ON p.PersonID = ap.AppellantID\nJOIN Cases c ON ap.CaseID = c.CaseID\nWHERE c.Status = 'Закрыто'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(ap.AppealID) > 1;",
            "gigachat_response_ru": "SELECT p.FirstName, p.LastName, COUNT(*) AS NumOfAppeals\nFROM Appeal a\nJOIN Person p ON a.AppellantID = p.PersonID\nWHERE a.CaseID IN (SELECT CaseID FROM Cases WHERE Status = 'Закрыто')\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(*) > 1;"
        },
        {
            "question": "В каких судах средний опыт судей по административным делам превышает 10 лет?",
            "sql_query": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AvgJudgeExperience FROM Court c JOIN Judge j ON c.CourtID = j.CourtID JOIN `Cases` cs ON c.CourtID = cs.CourtID WHERE cs.CaseType = 'Административное дело' GROUP BY c.CourtName HAVING AVG(j.ExperienceYears) > 10;",
            "gpt-4o_response": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AvgExperienceYears\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases cs ON h.CaseID = cs.CaseID\nWHERE cs.CaseType = 'Административное дело'\nGROUP BY c.CourtName\nHAVING AVG(j.ExperienceYears) > 10;",
            "gpt-4o_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases cs ON h.CaseID = cs.CaseID\nWHERE cs.CaseType = 'Административное дело'\nGROUP BY c.CourtName\nHAVING AVG(j.ExperienceYears) > 10;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.CourtName,\n    AVG(j.ExperienceYears) AS AverageJudgeExperience\nFROM\n    Court c\nJOIN\n    Judge j ON c.CourtID = j.CourtID\nJOIN\n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN\n    Cases ca ON h.CaseID = ca.CaseID\nWHERE\n    ca.CaseType = 'Административное дело'\nGROUP BY\n    c.CourtName\nHAVING\n    AVG(j.ExperienceYears) > 10;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  c.CourtName\nFROM Court AS c\nJOIN Judge AS j\n  ON c.CourtID = j.CourtID\nJOIN Cases AS ca\n  ON c.CourtID = ca.CourtID\nWHERE\n  c.CourtID IN (\n    SELECT\n      c.CourtID\n    FROM Court AS c\n    JOIN Judge AS j\n      ON c.CourtID = j.CourtID\n    JOIN Cases AS ca\n      ON c.CourtID = ca.CourtID\n    WHERE\n      ca.CaseType = 'Административное дело'\n    GROUP BY\n      c.CourtID\n    HAVING\n      AVG(j.ExperienceYears) > 10\n  )\nGROUP BY\n  c.CourtName;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AverageJudgeExperience \nFROM Court c \nJOIN Judge j ON c.CourtID = j.CourtID \nJOIN Cases cs ON c.CourtID = cs.CourtID \nWHERE cs.CaseType = 'Административное дело' \nGROUP BY c.CourtName \nHAVING AVG(j.ExperienceYears) > 10;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AverageJudgeExperience \nFROM Court c \nJOIN Judge j ON c.CourtID = j.CourtID \nJOIN Cases cs ON c.CourtID = cs.CourtID \nWHERE cs.CaseType = 'Административное дело' \nGROUP BY c.CourtName \nHAVING AVG(j.ExperienceYears) > 10;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AvgJudgeExperience \nFROM Court c \nJOIN Judge j ON c.CourtID = j.CourtID \nJOIN Cases cs ON c.CourtID = cs.CourtID \nWHERE cs.CaseType = 'Административное дело' \nGROUP BY c.CourtName \nHAVING AVG(j.ExperienceYears) > 10;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AvgJudgeExperience\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Cases cs ON c.CourtID = cs.CourtID\nWHERE cs.CaseType = 'Административное дело'\nGROUP BY c.CourtName\nHAVING AVG(j.ExperienceYears) > 10\nORDER BY AvgJudgeExperience DESC;",
            "gigachat_response": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AverageExperience\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases ca ON h.CaseID = ca.CaseID\nWHERE ca.CaseType = 'Административное дело'\nGROUP BY c.CourtName\nHAVING AVG(j.ExperienceYears) > 10;",
            "gigachat_response_ru": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AverageExperience\nFROM Court c\nJOIN Hearing h ON c.CourtID = h.CourtID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nJOIN Cases ca ON h.CaseID = ca.CaseID\nWHERE ca.CaseType = 'Административное дело'\nGROUP BY c.CourtName\nHAVING AVG(j.ExperienceYears) > 10;"
        },
        {
            "question": "Какие клиенты имеют более 1 документа типа 'Документ' в качестве доказательства?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN Evidence e ON ct.ClientID = e.CaseID WHERE e.EvidenceType = 'Документ' GROUP BY p.FirstName, p.LastName HAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS DocumentCount\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Cases cs ON c.ClientID = cs.LawyerID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Документ'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS DocumentCount\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Contract ct ON c.ClientID = ct.ClientID\nJOIN Cases cs ON ct.ClientID = cs.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Документ'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName\nFROM Person AS p\nJOIN Client AS c\n  ON p.PersonID = c.PersonID\nJOIN `Contract` AS con\n  ON c.ClientID = con.ClientID\nJOIN Cases AS ca\n  ON con.ClientID = ca.CaseID\nJOIN Evidence AS e\n  ON ca.CaseID = e.CaseID\nWHERE\n  e.EvidenceType = 'Документ'\nGROUP BY\n  p.PersonID,\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT p.FirstName, p.LastName\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN `Contract` ct ON c.ClientID = ct.ClientID\nJOIN Cases ca ON ct.ClientID = ca.CaseID\nJOIN Evidence e ON ca.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Документ'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN `Cases` cs ON c.ClientID = cs.CaseID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Документ' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceID) AS TotalDocuments \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN `Cases` cs ON c.ClientID = cs.CaseID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Документ' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS DocumentCount \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN Contract ct ON c.ClientID = ct.ClientID \nJOIN `Cases` cs ON ct.ClientID = cs.LawyerID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Документ' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS DocumentCount \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN Contract ct ON c.ClientID = ct.ClientID \nJOIN Cases cs ON ct.ClientID = cs.CaseID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Документ' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(e.EvidenceID) > 1;",
            "gigachat_response": "SELECT DISTINCT c.ClientID, p.FirstName, p.LastName\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nWHERE c.ClientID IN (\n    SELECT e.CaseID\n    FROM Evidence e\n    WHERE e.EvidenceType = 'Документ'\n    GROUP BY e.CaseID\n    HAVING COUNT(e.EvidenceID) > 1\n)\nORDER BY c.ClientID;",
            "gigachat_response_ru": "SELECT DISTINCT c.ClientID, p.FirstName, p.LastName\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nWHERE c.ClientID IN (\n    SELECT e.CaseID\n    FROM Evidence e\n    WHERE e.EvidenceType = 'Документ'\n    GROUP BY e.CaseID\n    HAVING COUNT(*) > 1\n);"
        },
        {
            "question": "Какие юридические фирмы проводили консультации по семейному праву?",
            "sql_query": "SELECT lf.FirmName, COUNT(DISTINCT la.AdviceID) AS TotalAdvice FROM LawFirm lf JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID JOIN LegalAdvice la ON l.LawyerID = la.LawyerID WHERE la.AdviceType = 'Семейное право' GROUP BY lf.FirmName HAVING COUNT(DISTINCT la.AdviceID) > 0;",
            "gpt-4o_response": "SELECT DISTINCT lf.FirmName \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Семейное право';",
            "gpt-4o_response_ru": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Семейное право';",
            "google/gemini-2.0-flash-001_response": "SELECT DISTINCT\n  lf.FirmName\nFROM LawFirm AS lf\nJOIN Lawyer AS l\n  ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice AS la\n  ON l.LawyerID = la.LawyerID\nWHERE\n  la.AdviceType = 'Семейное право';",
            "google/gemini-2.0-flash-001_response_ru": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Семейное право';",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT DISTINCT lf.FirmName, la.AdviceType \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Семейное право'",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT DISTINCT lf.FirmName \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Семейное право';",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT DISTINCT lf.FirmName \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Семейное право';",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT DISTINCT lf.FirmName \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Семейное право';",
            "gigachat_response": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Семейное право';",
            "gigachat_response_ru": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Семейное право';"
        },
        {
            "question": "Какие юридические фирмы имеют более 1 видео в качестве доказательства?",
            "sql_query": "SELECT lf.FirmName, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence FROM LawFirm lf JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Evidence e ON ct.ClientID = e.CaseID WHERE e.EvidenceType = 'Видео' GROUP BY lf.FirmName HAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "gpt-4o_response": "SELECT lf.FirmName, COUNT(DISTINCT e.EvidenceID) AS TotalVideos\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY lf.FirmName\nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "gpt-4o_response_ru": "SELECT lf.FirmName, COUNT(e.EvidenceID) AS VideoEvidenceCount\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY lf.FirmName\nHAVING COUNT(e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY lf.FirmName\nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases ca ON l.LawyerID = ca.LawyerID\nJOIN Evidence e ON ca.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY lf.FirmName\nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT lf.FirmName, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN `Cases` c ON l.LawyerID = c.LawyerID \nJOIN Evidence e ON c.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Видео' \nGROUP BY lf.FirmName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT lf.FirmName, COUNT(DISTINCT e.EvidenceID) AS TotalVideos \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN `Cases` c ON l.LawyerID = c.LawyerID \nJOIN Evidence e ON c.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Видео' \nGROUP BY lf.FirmName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT lf.FirmName, COUNT(DISTINCT e.EvidenceID) AS VideoEvidenceCount \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN Cases c ON l.LawyerID = c.LawyerID \nJOIN Evidence e ON c.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Видео' \nGROUP BY lf.FirmName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT lf.FirmName, COUNT(e.EvidenceID) AS VideoEvidenceCount \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN `Cases` c ON l.LawyerID = c.LawyerID \nJOIN Evidence e ON c.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Видео' \nGROUP BY lf.FirmName \nHAVING COUNT(e.EvidenceID) > 1;",
            "gigachat_response": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY lf.FirmName\nHAVING COUNT(e.EvidenceID) > 1;",
            "gigachat_response_ru": "SELECT DISTINCT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY lf.FirmName\nHAVING COUNT(e.EvidenceID) > 1;"
        },
        {
            "question": "В каких судах общая сумма платежей по кредитным картам превышает 50,000?",
            "sql_query": "SELECT c.CourtName, SUM(pmt.Amount) AS TotalPayments FROM Court c JOIN `Cases` cs ON c.CourtID = cs.CourtID JOIN Contract ct ON cs.CaseID = ct.ClientID JOIN Payment pmt ON ct.ContractID = pmt.ContractID WHERE pmt.PaymentMethod = 'Кредитная карта' GROUP BY c.CourtName HAVING SUM(pmt.Amount) > 50000;",
            "gpt-4o_response": "SELECT c.CourtName, SUM(pmt.Amount) AS TotalCreditCardPayments\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE pmt.PaymentMethod = 'Кредитная карта'\nGROUP BY c.CourtName\nHAVING SUM(pmt.Amount) > 50000;",
            "gpt-4o_response_ru": "SELECT c.CourtName, SUM(p.Amount) AS TotalCreditCardPayments\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Кредитная карта'\nGROUP BY c.CourtName\nHAVING SUM(p.Amount) > 50000;",
            "google/gemini-2.0-flash-001_response": "SELECT c.CourtName, SUM(p.Amount) AS TotalAmount\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Contract ct ON ca.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Кредитная карта'\nGROUP BY c.CourtName\nHAVING SUM(p.Amount) > 50000;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Lawyer l ON ca.LawyerID = l.LawyerID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Кредитная карта'\nGROUP BY c.CourtName\nHAVING SUM(p.Amount) > 50000;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, SUM(p.Amount) AS TotalAmount \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nJOIN Contract ct ON cs.LawyerID = ct.LawyerID \nJOIN Payment p ON ct.ContractID = p.ContractID \nWHERE p.PaymentMethod = 'Кредитная карта' \nGROUP BY c.CourtName \nHAVING SUM(p.Amount) > 50000;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.CourtName, SUM(p.Amount) AS TotalAmount\nFROM Court c\nJOIN `Cases` cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Кредитная карта'\nGROUP BY c.CourtName\nHAVING SUM(p.Amount) > 50000;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, SUM(p.Amount) AS TotalCreditCardPayments\nFROM Court c\nJOIN `Cases` cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Кредитная карта'\nGROUP BY c.CourtName\nHAVING SUM(p.Amount) > 50000;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, SUM(p.Amount) AS TotalCreditCardPayments\nFROM Court c\nJOIN `Cases` cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Кредитная карта'\nGROUP BY c.CourtName\nHAVING SUM(p.Amount) > 50000;",
            "gigachat_response": "SELECT crt.CourtName, SUM(pmt.Amount) AS TotalCreditCardPayments\nFROM Court crt\nJOIN Cases cs ON crt.CourtID = cs.CourtID\nJOIN Contract cnt ON cs.CaseID = cnt.CaseID\nJOIN Payment pmt ON cnt.ContractID = pmt.ContractID\nWHERE pmt.PaymentMethod = 'Кредитная карта'\nGROUP BY crt.CourtName\nHAVING SUM(pmt.Amount) > 50000;",
            "gigachat_response_ru": "SELECT crt.CourtName, SUM(pmt.Amount) AS TotalPaymentByCreditCard\nFROM Court crt\nJOIN Cases cs ON crt.CourtID = cs.CourtID\nJOIN Contract cnt ON cs.CaseID = cnt.CaseID\nJOIN Payment pmt ON cnt.ContractID = pmt.ContractID\nWHERE pmt.PaymentMethod = 'Кредитная карта'\nGROUP BY crt.CourtName\nHAVING SUM(pmt.Amount) > 50000;"
        },
        {
            "question": "Какие клиенты имеют решение суда в качестве документа и сколько?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN LegalDocument ld ON ct.ClientID = ld.CaseID WHERE ld.DocumentType = 'Решение суда' GROUP BY p.FirstName, p.LastName HAVING COUNT(DISTINCT ld.DocumentID) > 0;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(ld.DocumentID) AS TotalCourtDecisions\nFROM Client cl\nJOIN Person p ON cl.PersonID = p.PersonID\nJOIN Contract ct ON cl.ClientID = ct.ClientID\nJOIN Cases c ON ct.ClientID = c.CaseID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE ld.DocumentType = 'Решение суда'\nGROUP BY p.FirstName, p.LastName;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, COUNT(ld.DocumentID) AS TotalDocuments\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Contract ct ON c.ClientID = ct.ClientID\nJOIN `Cases` cs ON ct.ClientID = cs.CaseID\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE ld.DocumentType = 'Решение суда'\nGROUP BY p.FirstName, p.LastName;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT ld.DocumentID) AS NumberOfCourtDecisions\nFROM Person AS p\nJOIN Client AS c\n  ON p.PersonID = c.PersonID\nJOIN `Contract` AS ct\n  ON c.ClientID = ct.ClientID\nJOIN Cases AS ca\n  ON ct.ClientID = ca.CaseID\nJOIN LegalDocument AS ld\n  ON ca.CaseID = ld.CaseID\nWHERE\n  ld.DocumentType = 'Решение суда'\nGROUP BY\n  p.FirstName,\n  p.LastName;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT ld.DocumentID) AS NumberOfCourtDecisions\nFROM Client AS c\nJOIN Person AS p\n  ON c.PersonID = p.PersonID\nJOIN `Contract` AS con\n  ON c.ClientID = con.ClientID\nJOIN LegalDocument AS ld\n  ON ld.CaseID = con.ClientID\nWHERE\n  ld.DocumentType = 'Решение суда'\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT ld.DocumentID) > 0;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN `Cases` cs ON c.ClientID = cs.LawyerID \nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID \nWHERE ld.DocumentType = 'Решение суда' \nGROUP BY p.FirstName, p.LastName;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM \n    Person p\nJOIN \n    Client c ON p.PersonID = c.PersonID\nJOIN \n    `Contract` ct ON c.ClientID = ct.ClientID\nJOIN \n    `Cases` cs ON ct.LawyerID = cs.LawyerID\nJOIN \n    LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE \n    ld.DocumentType = 'Решение суда'\nGROUP BY \n    p.FirstName, p.LastName",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN Cases cs ON c.ClientID = cs.CaseID \nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID \nWHERE ld.DocumentType = 'Решение суда' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT ld.DocumentID) > 0;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, COUNT(ld.DocumentID) AS TotalVerdictDocuments \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN `Contract` ct ON c.ClientID = ct.ClientID \nJOIN Cases cs ON ct.LawyerID = cs.LawyerID \nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID \nWHERE ld.DocumentType = 'Решение суда' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(ld.DocumentID) > 0;",
            "gigachat_response": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(*) AS NumberOfVerdicts\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Cases cs ON c.ClientID = cs.CaseID\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE ld.DocumentType = 'Решение суда'\nGROUP BY c.ClientID, p.FirstName, p.LastName;",
            "gigachat_response_ru": "SELECT c.ClientID, CONCAT(p.FirstName, ' ', p.LastName) AS FullName, COUNT(*) AS NumberOfVerdicts\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Cases ca ON c.ClientID = ca.CaseID\nJOIN LegalDocument ld ON ca.CaseID = ld.CaseID\nWHERE ld.DocumentType = 'Решение суда'\nGROUP BY c.ClientID, FullName;"
        },
        {
            "question": "В каких судах находится на рассмотрении более 1 апелляции?",
            "sql_query": "SELECT c.CourtName, COUNT(DISTINCT a.AppealID) AS TotalAppeals FROM Court c JOIN Cases cs ON c.CourtID = cs.CourtID JOIN Appeal a ON cs.CaseID = a.CaseID WHERE a.AppealStatus = 'В ожидании' GROUP BY c.CourtName HAVING COUNT(DISTINCT a.AppealID) > 1;",
            "gpt-4o_response": "SELECT c.CourtName, COUNT(a.AppealID) AS TotalAppeals\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(a.AppealID) > 1;",
            "gpt-4o_response_ru": "SELECT c.CourtName, COUNT(a.AppealID) AS TotalAppeals\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(a.AppealID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.CourtName\nFROM\n    Court c\nJOIN\n    Cases ca ON c.CourtID = ca.CourtID\nJOIN\n    Appeal a ON ca.CaseID = a.CaseID\nGROUP BY\n    c.CourtName\nHAVING\n    COUNT(a.AppealID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Appeal a ON ca.CaseID = a.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(a.AppealID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, COUNT(DISTINCT a.AppealID) AS TotalAppeals \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nJOIN Appeal a ON cs.CaseID = a.CaseID \nGROUP BY c.CourtName \nHAVING COUNT(DISTINCT a.AppealID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.CourtName, COUNT(a.AppealID) AS TotalAppeals\nFROM Court c\nJOIN `Cases` cs ON c.CourtID = cs.CourtID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(a.AppealID) > 1",
            "deepseek/deepseek-chat-v3-0324_response": "",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, COUNT(a.AppealID) AS AppealCount \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nJOIN Appeal a ON cs.CaseID = a.CaseID \nGROUP BY c.CourtName \nHAVING COUNT(a.AppealID) > 1;",
            "gigachat_response": "SELECT c.CourtName, COUNT(ap.AppealID) AS NumOfAppeals\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Appeal ap ON ca.CaseID = ap.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(ap.AppealID) > 1;",
            "gigachat_response_ru": "SELECT c.CourtName, COUNT(ap.AppealID) AS NumOfAppeals\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Appeal ap ON ca.CaseID = ap.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(ap.AppealID) > 1;"
        },
        {
            "question": "В каких судах средняя сумма платежей наличными превышает 1500?",
            "sql_query": "SELECT c.CourtName, AVG(pmt.Amount) AS AvgPaymentAmount FROM Court c JOIN Cases cs ON c.CourtID = cs.CourtID JOIN Contract ct ON cs.CaseID = ct.ClientID JOIN Payment pmt ON ct.ContractID = pmt.ContractID WHERE pmt.PaymentMethod = 'Наличные' GROUP BY c.CourtName HAVING AVG(pmt.Amount) > 1500;",
            "gpt-4o_response": "SELECT c.CourtName, AVG(pmt.Amount) AS AvgCashPayment\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE pmt.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(pmt.Amount) > 1500;",
            "gpt-4o_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE pmt.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(pmt.Amount) > 1500;",
            "google/gemini-2.0-flash-001_response": "SELECT c.CourtName\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Lawyer l ON ca.LawyerID = l.LawyerID\nJOIN `Contract` ct ON l.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(p.Amount) > 1500;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Contract ct ON ca.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(p.Amount) > 1500;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT ct.CourtName, AVG(pmt.Amount) AS AveragePayment \nFROM Court ct \nJOIN `Cases` cs ON ct.CourtID = cs.CourtID \nJOIN Contract c ON cs.LawyerID = c.LawyerID \nJOIN Payment pmt ON c.ContractID = pmt.ContractID \nWHERE pmt.PaymentMethod = 'Наличные' \nGROUP BY ct.CourtName \nHAVING AVG(pmt.Amount) > 1500;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.CourtName, AVG(p.Amount) AS AveragePayment\nFROM Court c\nJOIN `Cases` cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(p.Amount) > 1500;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, AVG(p.Amount) AS AvgCashPayment\nFROM Court c\nJOIN `Cases` cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(p.Amount) > 1500;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, AVG(p.Amount) AS AverageCashPayment\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON ct.ClientID = cs.CaseID\nJOIN Payment p ON p.ContractID = ct.ContractID\nWHERE p.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(p.Amount) > 1500;",
            "gigachat_response": "SELECT c.CourtName, AVG(p.Amount) AS AveragePayment\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Contract ct ON cs.CaseID = ct.ClientID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(p.Amount) > 1500;",
            "gigachat_response_ru": "SELECT c.CourtName, AVG(p.Amount) AS AveragePayment\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Payment p ON ca.CaseID = p.ContractID\nWHERE p.PaymentMethod = 'Наличные'\nGROUP BY c.CourtName\nHAVING AVG(p.Amount) > 1500;"
        },
        {
            "question": "Какие клиенты имеют более 1 консультации по трудовому праву?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT la.AdviceID) AS TotalAdvice FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN LegalAdvice la ON cl.ClientID = la.ClientID WHERE la.AdviceType = 'Трудовое право' GROUP BY p.FirstName, p.LastName HAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(la.AdviceID) AS TotalAdvice\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN LegalAdvice la ON cl.ClientID = la.ClientID\nWHERE la.AdviceType = 'Трудовое право'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(la.AdviceID) > 1;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, COUNT(la.AdviceID) AS TotalAdvices\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN LegalAdvice la ON cl.ClientID = la.ClientID\nWHERE la.AdviceType = 'Трудовое право'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(la.AdviceID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT p.FirstName, p.LastName\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN LegalAdvice la ON c.ClientID = la.ClientID\nWHERE la.AdviceType = 'Трудовое право'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING COUNT(la.AdviceID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT p.FirstName, p.LastName\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN LegalAdvice la ON c.ClientID = la.ClientID\nWHERE la.AdviceType = 'Трудовое право'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING COUNT(la.AdviceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT la.AdviceID) AS TotalAdvice \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN LegalAdvice la ON c.ClientID = la.ClientID \nWHERE la.AdviceType = 'Трудовое право' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT la.AdviceID) AS TotalConsultations \nFROM Person p \nJOIN Client cl ON p.PersonID = cl.PersonID \nJOIN LegalAdvice la ON cl.ClientID = la.ClientID \nWHERE la.AdviceType = 'Трудовое право' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(la.AdviceID) AS TotalAdvice \nFROM Person p \nJOIN Client cl ON p.PersonID = cl.PersonID \nJOIN LegalAdvice la ON cl.ClientID = la.ClientID \nWHERE la.AdviceType = 'Трудовое право' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(la.AdviceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, COUNT(la.AdviceID) AS TotalAdvices \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN LegalAdvice la ON c.ClientID = la.ClientID \nWHERE la.AdviceType = 'Трудовое право' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(la.AdviceID) > 1;",
            "gigachat_response": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(*) AS NumLaborAdvices\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN LegalAdvice la ON c.ClientID = la.ClientID\nWHERE la.AdviceType = 'Трудовое право'\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(*) > 1;",
            "gigachat_response_ru": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(*) AS ConsultationCount\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN LegalAdvice la ON c.ClientID = la.ClientID\nWHERE la.AdviceType = 'Трудовое право'\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(*) > 1;"
        },
        {
            "question": "В каких судах имеется более 1 отчета в качестве доказательства?",
            "sql_query": "SELECT c.CourtName, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence FROM Court c JOIN Cases cs ON c.CourtID = cs.CourtID JOIN Evidence e ON cs.CaseID = e.CaseID WHERE e.EvidenceType = 'Отчет' GROUP BY c.CourtName HAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "gpt-4o_response": "SELECT c.CourtName, COUNT(e.EvidenceID) AS EvidenceCount\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(e.EvidenceID) > 1;",
            "gpt-4o_response_ru": "SELECT c.CourtName, COUNT(e.EvidenceID) AS EvidenceCount\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT c.CourtName\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Evidence e ON ca.CaseID = e.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.CourtName\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Evidence e ON ca.CaseID = e.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, COUNT(e.EvidenceID) AS TotalEvidence \nFROM Court c \nJOIN Cases cs ON c.CourtID = cs.CourtID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Отчет' \nGROUP BY c.CourtName \nHAVING COUNT(e.EvidenceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.CourtName, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Отчет' \nGROUP BY c.CourtName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, c.CourtType, COUNT(e.EvidenceID) AS EvidenceCount \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nGROUP BY c.CourtName, c.CourtType \nHAVING COUNT(e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, COUNT(e.EvidenceID) AS EvidenceCount \nFROM Court c \nJOIN `Cases` cs ON c.CourtID = cs.CourtID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nGROUP BY c.CourtName \nHAVING COUNT(e.EvidenceID) > 1;",
            "gigachat_response": "SELECT c.CourtName, COUNT(e.EvidenceID) AS NumOfReports\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.Description LIKE '%отчет%'\nGROUP BY c.CourtName\nHAVING COUNT(e.EvidenceID) > 1;",
            "gigachat_response_ru": "SELECT c.CourtName, COUNT(e.EvidenceID) AS NumOfReports\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Evidence e ON ca.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Отчет'\nGROUP BY c.CourtName\nHAVING COUNT(e.EvidenceID) > 1;"
        },
        {
            "question": "Какие юридические фирмы имеют более 1 консультации по интеллектуальной собственности?",
            "sql_query": "SELECT lf.FirmName, COUNT(DISTINCT la.AdviceID) AS TotalAdvice FROM LawFirm lf JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID JOIN LegalAdvice la ON l.LawyerID = la.LawyerID WHERE la.AdviceType = 'Интеллектуальная собственность' GROUP BY lf.FirmName HAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "gpt-4o_response": "SELECT lf.FirmName, COUNT(la.AdviceID) AS TotalAdvices\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Интеллектуальная собственность'\nGROUP BY lf.FirmName\nHAVING COUNT(la.AdviceID) > 1;",
            "gpt-4o_response_ru": "SELECT lf.FirmName, COUNT(la.AdviceID) AS TotalAdvices\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Интеллектуальная собственность'\nGROUP BY lf.FirmName\nHAVING COUNT(la.AdviceID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Интеллектуальная собственность'\nGROUP BY lf.FirmName\nHAVING COUNT(la.AdviceID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT lf.FirmName\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Интеллектуальная собственность'\nGROUP BY lf.FirmName\nHAVING COUNT(la.AdviceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT lf.FirmName, COUNT(DISTINCT la.AdviceID) AS TotalConsultations \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Интеллектуальная собственность' \nGROUP BY lf.FirmName \nHAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    lf.FirmName, \n    COUNT(DISTINCT la.AdviceID) AS TotalConsultations\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE \n    la.AdviceType = 'Интеллектуальная собственность'\nGROUP BY \n    lf.FirmName\nHAVING \n    COUNT(DISTINCT la.AdviceID) > 1",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT lf.FirmName, COUNT(la.AdviceID) AS TotalIntellectualPropertyAdvice \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Интеллектуальная собственность' \nGROUP BY lf.FirmName \nHAVING COUNT(la.AdviceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT lf.FirmName, COUNT(la.AdviceID) AS TotalConsultations \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Интеллектуальная собственность' \nGROUP BY lf.FirmName \nHAVING COUNT(la.AdviceID) > 1;",
            "gigachat_response": "SELECT lf.FirmName, COUNT(*) AS IntellectualPropertyConsultations\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Интеллектуальная собственность'\nGROUP BY lf.FirmName\nHAVING COUNT(*) > 1;",
            "gigachat_response_ru": "SELECT lf.FirmName, COUNT(*) AS IntellectualPropertyConsultations\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Интеллектуальная собственность'\nGROUP BY lf.FirmName\nHAVING COUNT(*) > 1;"
        },
        {
            "question": "Какие клиенты имеют более 1 удовлетворенной апелляции?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT a.AppealID) AS TotalAppeals FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Appeal a ON cl.ClientID = a.CaseID WHERE a.AppealStatus = 'Принято' GROUP BY p.FirstName, p.LastName HAVING COUNT(DISTINCT a.AppealID) > 1;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS SatisfiedAppeals\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN Appeal a ON cl.ClientID = a.AppellantID\nWHERE a.AppealStatus = 'Принято'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS SatisfiedAppeals\nFROM Person p\nJOIN Appeal a ON p.PersonID = a.AppellantID\nWHERE a.AppealStatus = 'Принято'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT p.FirstName, p.LastName\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Appeal a ON p.PersonID = a.AppellantID\nWHERE a.AppealStatus = 'Принято'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT p.FirstName, p.LastName\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Appeal a ON p.PersonID = a.AppellantID\nWHERE a.AppealStatus = 'Принято'\nGROUP BY p.PersonID, p.FirstName, p.LastName\nHAVING COUNT(a.AppealID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT a.AppealID) AS TotalAppeals \nFROM Person p \nJOIN Appeal a ON p.PersonID = a.AppellantID \nWHERE a.AppealStatus = 'Принято' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT a.AppealID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT a.AppealID) AS TotalAppeals \nFROM Person p \nJOIN Appeal a ON p.PersonID = a.AppellantID \nWHERE a.AppealStatus = 'Принято' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT a.AppealID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS SatisfiedAppeals \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN Appeal a ON c.ClientID = a.AppellantID \nWHERE a.AppealStatus = 'Принято' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(a.AppealID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, COUNT(a.AppealID) AS SatisfiedAppeals \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN Appeal a ON c.ClientID = a.AppellantID \nWHERE a.AppealStatus = 'Принято' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(a.AppealID) > 1;",
            "gigachat_response": "SELECT c.FirstName, c.LastName, COUNT(ap.AppealID) AS NumOfSuccessfulAppeals\nFROM Person c\nJOIN Client cli ON c.PersonID = cli.PersonID\nJOIN Appeal ap ON cli.ClientID = ap.AppellantID\nWHERE ap.AppealStatus = 'Принято'\nGROUP BY c.FirstName, c.LastName\nHAVING COUNT(ap.AppealID) > 1;",
            "gigachat_response_ru": "SELECT c.FirstName, c.LastName, COUNT(ap.AppealID) AS NumOfSuccessfulAppeals\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN Appeal ap ON cl.ClientID = ap.AppellantID\nWHERE ap.AppealStatus = 'Принято'\nGROUP BY c.FirstName, c.LastName\nHAVING COUNT(ap.AppealID) > 1;"
        },
        {
            "question": "Какие юридические фирмы имеют общую сумму платежей через банковский перевод более 60,000?",
            "sql_query": "SELECT lf.FirmName, SUM(pmt.Amount) AS TotalPayments FROM LawFirm lf JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Payment pmt ON ct.ContractID = pmt.ContractID WHERE pmt.PaymentMethod = 'Банковский перевод' GROUP BY lf.FirmName HAVING SUM(pmt.Amount) > 60000;",
            "gpt-4o_response": "SELECT lf.FirmName, SUM(pmt.Amount) AS TotalAmount\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE pmt.PaymentMethod = 'Банковский перевод'\nGROUP BY lf.FirmName\nHAVING SUM(pmt.Amount) > 60000;",
            "gpt-4o_response_ru": "SELECT lf.FirmName, SUM(pmt.Amount) AS TotalAmount\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE pmt.PaymentMethod = 'Банковский перевод'\nGROUP BY lf.FirmName\nHAVING SUM(pmt.Amount) > 60000;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    lf.FirmName,\n    SUM(p.Amount) AS TotalPayments\nFROM\n    LawFirm lf\nJOIN\n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN\n    `Contract` c ON l.LawyerID = c.LawyerID\nJOIN\n    Payment p ON c.ContractID = p.ContractID\nWHERE\n    p.PaymentMethod = 'Банковский перевод'\nGROUP BY\n    lf.FirmName\nHAVING\n    SUM(p.Amount) > 60000;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT lf.FirmName, SUM(p.Amount) AS TotalAmount\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN `Contract` c ON l.LawyerID = c.LawyerID\nJOIN Payment p ON c.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Банковский перевод'\nGROUP BY lf.FirmName\nHAVING SUM(p.Amount) > 60000;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT lf.FirmName, SUM(pmt.Amount) AS TotalAmount \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN Contract ct ON l.LawyerID = ct.LawyerID \nJOIN Payment pmt ON ct.ContractID = pmt.ContractID \nWHERE pmt.PaymentMethod = 'Банковский перевод' \nGROUP BY lf.FirmName \nHAVING SUM(pmt.Amount) > 60000;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    lf.FirmName, \n    SUM(pmt.Amount) AS TotalAmount\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    pmt.PaymentMethod = 'Банковский перевод'\nGROUP BY \n    lf.FirmName\nHAVING \n    SUM(pmt.Amount) > 60000;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT lf.FirmName, SUM(p.Amount) AS TotalBankTransferPayments\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Банковский перевод'\nGROUP BY lf.FirmName\nHAVING SUM(p.Amount) > 60000;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT lf.FirmName, SUM(p.Amount) AS TotalBankTransferPayments\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN `Contract` c ON l.LawyerID = c.LawyerID\nJOIN Payment p ON c.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Банковский перевод'\nGROUP BY lf.FirmName\nHAVING SUM(p.Amount) > 60000;",
            "gigachat_response": "SELECT lf.FirmName, SUM(p.Amount) AS TotalBankTransferPayment\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract c ON l.LawyerID = c.LawyerID\nJOIN Payment p ON c.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Банковский перевод'\nGROUP BY lf.FirmName\nHAVING SUM(p.Amount) > 60000;",
            "gigachat_response_ru": "SELECT lf.FirmName, SUM(p.Amount) AS TotalBankTransferPayment\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Contract c ON l.LawyerID = c.LawyerID\nJOIN Payment p ON c.ContractID = p.ContractID\nWHERE p.PaymentMethod = 'Банковский перевод'\nGROUP BY lf.FirmName\nHAVING SUM(p.Amount) > 60000;"
        },
        {
            "question": "В каких судах имеются протоколы судебного заседания и сколько?",
            "sql_query": "SELECT c.CourtName, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments FROM Court c JOIN Cases cs ON c.CourtID = cs.CourtID JOIN LegalDocument ld ON cs.CaseID = ld.CaseID WHERE ld.DocumentType = 'Протокол судебного заседания' GROUP BY c.CourtName HAVING COUNT(DISTINCT ld.DocumentID) > 0;",
            "gpt-4o_response": "SELECT c.CourtName, COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM Court c\nJOIN Hearing h ON c.CourtID = h.CourtID\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT h.HearingID) > 0;",
            "gpt-4o_response_ru": "SELECT c.CourtName, COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Hearing h ON cs.CaseID = h.CaseID\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT h.HearingID) > 0;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.CourtName,\n    COUNT(h.HearingID) AS NumberOfHearings\nFROM\n    Court c\nJOIN\n    Hearing h ON c.CourtID = h.JudgeID\nGROUP BY\n    c.CourtName\nHAVING\n    COUNT(h.HearingID) > 0;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT c.CourtName, COUNT(h.HearingID) AS NumberOfHearings\nFROM Court c\nJOIN Hearing h ON c.CourtID = h.JudgeID\nWHERE h.HearingType = 'Разбирательство'\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 0;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, COUNT(ld.DocumentID) AS TotalProtocols \nFROM Court c \nJOIN Cases cs ON c.CourtID = cs.CourtID \nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID \nWHERE ld.DocumentType = 'Протокол судебного заседания' \nGROUP BY c.CourtName;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT c.CourtName, COUNT(ld.DocumentID) AS TotalProtocols\nFROM Court c\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE ld.DocumentType = 'Протокол судебного заседания'\nGROUP BY c.CourtName",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, COUNT(DISTINCT h.HearingID) AS TotalHearings \nFROM Court c \nJOIN Hearing h ON c.CourtID = h.JudgeID \nWHERE h.HearingType = 'Разбирательство' \nGROUP BY c.CourtName;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM Court c\nJOIN Hearing h ON c.CourtID = h.JudgeID\nWHERE h.HearingType = 'Разбирательство'\nGROUP BY c.CourtName;",
            "gigachat_response": "SELECT c.CourtName, COUNT(h.HearingID) AS NumberOfProtocols\nFROM Court c\nJOIN Hearing h ON c.CourtID = h.CourtID\nGROUP BY c.CourtName;",
            "gigachat_response_ru": "SELECT c.CourtName, COUNT(h.HearingID) AS NumberOfProtocols\nFROM Court c\nLEFT JOIN Hearing h ON c.CourtID = h.CourtID\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 0;"
        },
        {
            "question": "Какие специализации адвокатов имеют более 1 консультации по административному праву?",
            "sql_query": "SELECT l.Specialization, COUNT(DISTINCT la.AdviceID) AS TotalAdvice FROM Lawyer l JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN LegalAdvice la ON ct.ClientID = la.ClientID WHERE la.AdviceType = 'Административное право' GROUP BY l.Specialization HAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "gpt-4o_response": "SELECT l.Specialization, COUNT(la.AdviceID) AS TotalAdvice\nFROM Lawyer l\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Административное право'\nGROUP BY l.Specialization\nHAVING COUNT(la.AdviceID) > 1;",
            "gpt-4o_response_ru": "SELECT l.Specialization\nFROM Lawyer l\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Административное право'\nGROUP BY l.Specialization\nHAVING COUNT(la.AdviceID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT l.Specialization\nFROM Lawyer l\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Административное право'\nGROUP BY l.Specialization\nHAVING COUNT(la.AdviceID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT l.Specialization\nFROM Lawyer l\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Административное право'\nGROUP BY l.Specialization\nHAVING COUNT(la.AdviceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT l.Specialization, COUNT(DISTINCT la.AdviceID) AS TotalConsultations \nFROM Lawyer l \nJOIN Contract ct ON l.LawyerID = ct.LawyerID \nJOIN LegalAdvice la ON ct.ClientID = la.ClientID \nWHERE la.AdviceType = 'Административное право' \nGROUP BY l.Specialization \nHAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT l.Specialization, COUNT(DISTINCT la.AdviceID) AS TotalConsultations \nFROM Lawyer l \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Административное право' \nGROUP BY l.Specialization \nHAVING COUNT(DISTINCT la.AdviceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT l.Specialization, COUNT(la.AdviceID) AS TotalAdvice \nFROM Lawyer l \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Административное право' \nGROUP BY l.Specialization \nHAVING COUNT(la.AdviceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT l.Specialization, COUNT(la.AdviceID) AS TotalAdvices \nFROM Lawyer l \nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID \nWHERE la.AdviceType = 'Административное право' \nGROUP BY l.Specialization \nHAVING COUNT(la.AdviceID) > 1;",
            "gigachat_response": "SELECT l.Specialization, COUNT(*) AS ConsultationCount\nFROM Lawyer l\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Административное право'\nGROUP BY l.Specialization\nHAVING COUNT(*) > 1;",
            "gigachat_response_ru": "SELECT l.Specialization, COUNT(*) AS ConsultationCount\nFROM Lawyer l\nJOIN LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE la.AdviceType = 'Административное право'\nGROUP BY l.Specialization\nHAVING COUNT(*) > 1;"
        },
        {
            "question": "Какие клиенты имеют более 1 видео в качестве доказательства?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN Evidence e ON ct.ClientID = e.CaseID WHERE e.EvidenceType = 'Видео' GROUP BY p.FirstName, p.LastName HAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS VideoEvidenceCount\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Cases cs ON c.ClientID = cs.LawyerID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS VideoCount\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Contract ct ON c.ClientID = ct.ClientID\nJOIN Cases cs ON ct.ClientID = cs.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceID) AS TotalVideoEvidence\nFROM Person AS p\nJOIN Client AS c\n  ON p.PersonID = c.PersonID\nJOIN `Contract` AS ct\n  ON c.ClientID = ct.ClientID\nJOIN Cases AS ca\n  ON ct.ClientID = ca.CaseID\nJOIN Evidence AS e\n  ON ca.CaseID = e.CaseID\nWHERE\n  e.EvidenceType = 'Видео'\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceID) > 1;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT p.FirstName, p.LastName\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nWHERE c.ClientID IN (\n    SELECT ca.ClientID\n    FROM Client ca\n    JOIN `Contract` co ON ca.ClientID = co.ClientID\n    JOIN Cases cs ON co.LawyerID = cs.LawyerID\n    JOIN Evidence e ON cs.CaseID = e.CaseID\n    WHERE e.EvidenceType = 'Видео'\n    GROUP BY ca.ClientID\n    HAVING COUNT(e.EvidenceID) > 1\n);",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceID) AS TotalVideos \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN `Cases` cs ON c.ClientID = cs.LawyerID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Видео' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceID) AS TotalVideos \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN `Cases` cs ON c.ClientID = cs.CaseID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Видео' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS VideoEvidenceCount \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN Contract ct ON c.ClientID = ct.ClientID \nJOIN Cases cs ON ct.ClientID = cs.CaseID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nWHERE e.EvidenceType = 'Видео' \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(e.EvidenceID) > 1;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, COUNT(e.EvidenceID) AS VideoEvidenceCount\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN `Cases` cs ON c.ClientID = cs.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;",
            "gigachat_response": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(e.EvidenceID) AS VideoCount\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Cases cs ON c.ClientID = cs.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;",
            "gigachat_response_ru": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(e.EvidenceID) AS VideoCount\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Cases cs ON c.ClientID = cs.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE e.EvidenceType = 'Видео'\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 1;"
        },
        {
            "question": "Какие топ-5 судей с опытом более 8 лет рассматривали дела с общим количеством доказательств более 2, включая видео и документы, за последние 3 месяца? (отсортировано по количеству доказательств)",
            "sql_query": "SELECT DISTINCT p.FirstName, p.LastName, j.ExperienceYears, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence FROM Judge j JOIN Person p ON j.PersonID = p.PersonID JOIN Cases cs ON j.CourtID = cs.CourtID JOIN Evidence e ON cs.CaseID = e.CaseID WHERE j.ExperienceYears > 8 AND e.EvidenceType IN ('Видео', 'Документ') AND e.SubmissionDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY p.FirstName, p.LastName, j.ExperienceYears HAVING COUNT(DISTINCT e.EvidenceID) > 2 ORDER BY TotalEvidence DESC LIMIT 5;",
            "gpt-4o_response": "SELECT j.JudgeID, p.FirstName, p.LastName, COUNT(e.EvidenceID) AS TotalEvidence\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE j.ExperienceYears > 8\nAND e.EvidenceType IN ('Видео', 'Документ')\nAND e.SubmissionDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)\nGROUP BY j.JudgeID, p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 2\nORDER BY TotalEvidence DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears, \n    COUNT(e.EvidenceID) AS TotalEvidence\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8\n    AND e.EvidenceType IN ('Видео', 'Документ')\n    AND e.SubmissionDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)\nGROUP BY \n    j.JudgeID\nHAVING \n    COUNT(e.EvidenceID) > 2\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceID) AS TotalEvidenceCount\nFROM Judge AS j\nJOIN Person AS p\n  ON j.PersonID = p.PersonID\nJOIN Hearing AS h\n  ON j.JudgeID = h.JudgeID\nJOIN Cases AS c\n  ON h.CaseID = c.CaseID\nJOIN Evidence AS e\n  ON c.CaseID = e.CaseID\nWHERE\n  j.ExperienceYears > 8\n  AND e.SubmissionDate >= DATE('now', '-3 months')\n  AND e.EvidenceType IN ('Видео', 'Документ')\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY\n  TotalEvidenceCount DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceID) AS TotalEvidence\nFROM Judge AS j\nJOIN Person AS p\n  ON j.PersonID = p.PersonID\nJOIN Hearing AS h\n  ON j.JudgeID = h.JudgeID\nJOIN Cases AS c\n  ON h.CaseID = c.CaseID\nJOIN Evidence AS e\n  ON c.CaseID = e.CaseID\nWHERE\n  j.ExperienceYears > 8\n  AND e.EvidenceType IN ('Видео', 'Документ')\n  AND e.SubmissionDate >= DATE('now', '-3 months')\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY\n  TotalEvidence DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.JudgeID, \n    COUNT(e.EvidenceID) AS TotalEvidence, \n    SUM(CASE WHEN e.EvidenceType = 'Видео' THEN 1 ELSE 0 END) AS VideoEvidence, \n    SUM(CASE WHEN e.EvidenceType = 'Документ' THEN 1 ELSE 0 END) AS DocumentEvidence\nFROM \n    Person p\nJOIN \n    Judge j ON p.PersonID = j.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8 \n    AND h.HearingDate > NOW() - INTERVAL 3 MONTH\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    j.JudgeID\nHAVING \n    COUNT(e.EvidenceID) > 2\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT e.EvidenceID) AS TotalEvidence\nFROM \n    Person p\nJOIN \n    Judge j ON p.PersonID = j.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8 \n    AND e.EvidenceType IN ('Документ', 'Видео')\n    AND h.HearingDate >= NOW() - INTERVAL 3 MONTH\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, j.JudgeID, j.ExperienceYears, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Evidence e ON h.CaseID = e.CaseID\nWHERE j.ExperienceYears > 8 \n  AND e.SubmissionDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH)\n  AND e.EvidenceType IN ('Документ', 'Видео')\nGROUP BY p.FirstName, p.LastName, j.JudgeID, j.ExperienceYears\nHAVING COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY TotalEvidence DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears,\n    COUNT(DISTINCT e.EvidenceID) AS TotalEvidenceCount\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Evidence e ON h.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8\n    AND e.SubmissionDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH)\n    AND e.EvidenceType IN ('Видео', 'Документ')\nGROUP BY \n    p.FirstName, p.LastName, j.ExperienceYears\nHAVING \n    COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY \n    TotalEvidenceCount DESC\nLIMIT 5;",
            "gigachat_response": "SELECT j.JudgeID, CONCAT(p.FirstName, ' ', p.MiddleName, ' ', p.LastName) AS FullName, COUNT(e.EvidenceID) AS NumOfEvidence\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE j.ExperienceYears > 8 \nAND e.SubmissionDate >= DATE_SUB(NOW(), INTERVAL 3 MONTH)\nAND e.EvidenceType IN ('Видео', 'Документ')\nGROUP BY j.JudgeID\nHAVING COUNT(e.EvidenceID) > 2\nORDER BY NumOfEvidence DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT j.JudgeID, CONCAT(p.FirstName, ' ', p.LastName) AS FullName, COUNT(e.EvidenceID) AS NumOfEvidence\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE j.ExperienceYears > 8 \nAND e.EvidenceType IN ('Видео', 'Документ')\nAND h.HearingDate >= CURDATE() - INTERVAL 3 MONTH\nGROUP BY j.JudgeID\nHAVING COUNT(e.EvidenceID) > 2\nORDER BY NumOfEvidence DESC\nLIMIT 5;"
        },
        {
            "question": "Какие топ-4 клиента, зарегистрированные в 2023 году, имеют дела с более чем одним типом доказательств и общим количеством документов более 2? (отсортировано по количеству документов)",
            "sql_query": "SELECT p.FirstName, p.LastName, cl.RegistrationDate, COUNT(DISTINCT e.EvidenceType) AS EvidenceTypes, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN Evidence e ON ct.ClientID = e.CaseID JOIN LegalDocument ld ON ct.ClientID = ld.CaseID WHERE YEAR(cl.RegistrationDate) = 2023 GROUP BY p.FirstName, p.LastName, cl.RegistrationDate HAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2 ORDER BY TotalDocuments DESC LIMIT 4;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM Client cl\nJOIN Person p ON cl.PersonID = p.PersonID\nJOIN Contract ct ON cl.ClientID = ct.ClientID\nJOIN `Cases` c ON ct.ClientID = c.LawyerID\nJOIN Evidence e ON c.CaseID = e.CaseID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE cl.RegistrationDate BETWEEN '2023-01-01' AND '2023-12-31'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY TotalDocuments DESC\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Contract ct ON c.ClientID = ct.ClientID\nJOIN `Cases` cs ON ct.ClientID = cs.LawyerID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE c.RegistrationDate BETWEEN '2023-01-01' AND '2023-12-31'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY TotalDocuments DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    COUNT(DISTINCT e.EvidenceType) AS NumberOfEvidenceTypes,\n    COUNT(DISTINCT ld.DocumentID) AS NumberOfDocuments\nFROM\n    Client c\nJOIN\n    Person p ON c.PersonID = p.PersonID\nJOIN\n    `Contract` ct ON c.ClientID = ct.ClientID\nJOIN\n    Cases ca ON ct.ClientID = ca.CaseID\nJOIN\n    Evidence e ON ca.CaseID = e.CaseID\nJOIN\n    LegalDocument ld ON ca.CaseID = ld.CaseID\nWHERE\n    c.RegistrationDate BETWEEN '2023-01-01' AND '2023-12-31'\nGROUP BY\n    p.FirstName,\n    p.LastName\nHAVING\n    COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY\n    NumberOfDocuments DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceType) AS NumberOfEvidenceTypes,\n  COUNT(DISTINCT ld.DocumentID) AS NumberOfDocuments\nFROM Client AS c\nJOIN Person AS p\n  ON c.PersonID = p.PersonID\nJOIN `Contract` AS con\n  ON c.ClientID = con.ClientID\nJOIN Cases AS ca\n  ON con.LawyerID = ca.LawyerID\nJOIN Evidence AS e\n  ON ca.CaseID = e.CaseID\nJOIN LegalDocument AS ld\n  ON ca.CaseID = ld.CaseID\nWHERE\n  c.RegistrationDate LIKE '2023%'\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY\n  NumberOfDocuments DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM \n    Person p\nJOIN \n    Client c ON p.PersonID = c.PersonID\nJOIN \n    `Cases` cs ON c.ClientID = cs.CaseID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE \n    YEAR(c.RegistrationDate) = 2023\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 1 AND \n    COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY \n    TotalDocuments DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM \n    Person p\nJOIN \n    Client cl ON p.PersonID = cl.PersonID\nJOIN \n    `Cases` c ON cl.ClientID = c.LawyerID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    YEAR(cl.RegistrationDate) = 2023\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 1 AND \n    COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY \n    TotalDocuments DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceType) AS EvidenceTypesCount, COUNT(DISTINCT ld.DocumentID) AS DocumentsCount \nFROM Person p \nJOIN Client c ON p.PersonID = c.PersonID \nJOIN `Cases` cs ON c.ClientID = cs.LawyerID \nJOIN Evidence e ON cs.CaseID = e.CaseID \nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID \nWHERE YEAR(c.RegistrationDate) = 2023 \nGROUP BY p.FirstName, p.LastName \nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2 \nORDER BY DocumentsCount DESC \nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT e.EvidenceType) AS EvidenceTypesCount, \n    COUNT(DISTINCT ld.DocumentID) AS DocumentsCount\nFROM \n    Person p\n    JOIN Client c ON p.PersonID = c.PersonID\n    JOIN `Cases` cs ON c.ClientID = cs.CaseID\n    JOIN Evidence e ON cs.CaseID = e.CaseID\n    JOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE \n    YEAR(c.RegistrationDate) = 2023\nGROUP BY \n    p.PersonID, p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 1 \n    AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY \n    DocumentsCount DESC\nLIMIT 4;",
            "gigachat_response": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceType) AS NumEvidenceTypes, COUNT(*) AS TotalDocuments\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Cases cs ON c.ClientID = cs.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE c.RegistrationDate >= '2023-01-01' AND c.RegistrationDate <= '2023-12-31'\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(*) > 2\nORDER BY TotalDocuments DESC\nLIMIT 4;",
            "gigachat_response_ru": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceType) AS NumEvidenceTypes, COUNT(*) AS TotalDocuments\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Cases ca ON c.ClientID = ca.CaseID\nJOIN Evidence e ON ca.CaseID = e.CaseID\nWHERE YEAR(c.RegistrationDate) = 2023\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(*) > 2\nORDER BY TotalDocuments DESC\nLIMIT 4;"
        },
        {
            "question": "В каких топ-3 судах рассматриваются дела с апелляциями, где средний опыт судей превышает 10 лет, и количество разбирательств более 1? (отсортировано по количеству апелляций)",
            "sql_query": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AvgJudgeExperience, COUNT(DISTINCT h.HearingID) AS TotalHearings, COUNT(DISTINCT a.AppealID) AS TotalAppeals FROM Court c JOIN Judge j ON c.CourtID = j.CourtID JOIN Cases cs ON c.CourtID = cs.CourtID JOIN Hearing h ON cs.CaseID = h.CaseID JOIN Appeal a ON cs.CaseID = a.CaseID WHERE h.HearingType = 'Разбирательство' GROUP BY c.CourtName HAVING AVG(j.ExperienceYears) > 10 AND COUNT(DISTINCT h.HearingID) > 1 ORDER BY TotalAppeals DESC LIMIT 3;",
            "gpt-4o_response": "SELECT c.CourtName, COUNT(a.AppealID) AS TotalAppeals\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases cs ON h.CaseID = cs.CaseID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 1\nORDER BY TotalAppeals DESC\nLIMIT 3;",
            "gpt-4o_response_ru": "SELECT \n    crt.CourtName, \n    COUNT(DISTINCT a.AppealID) AS TotalAppeals\nFROM \n    Court crt\nJOIN \n    Cases cs ON crt.CourtID = cs.CourtID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nJOIN \n    Hearing h ON cs.CaseID = h.CaseID\nJOIN \n    Judge j ON h.JudgeID = j.JudgeID\nWHERE \n    j.ExperienceYears > 10\nGROUP BY \n    crt.CourtName\nHAVING \n    COUNT(DISTINCT h.HearingID) > 1\nORDER BY \n    TotalAppeals DESC\nLIMIT 3;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.CourtName,\n    COUNT(DISTINCT a.AppealID) AS TotalAppeals,\n    AVG(j.ExperienceYears) AS AvgJudgeExperience,\n    COUNT(CASE WHEN h.HearingType = 'Разбирательство' THEN 1 END) AS TotalHearings\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Hearing h ON ca.CaseID = h.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nLEFT JOIN Appeal a ON ca.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(CASE WHEN h.HearingType = 'Разбирательство' THEN 1 END) > 1\nORDER BY TotalAppeals DESC\nLIMIT 3;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  c.CourtName,\n  COUNT(DISTINCT a.AppealID) AS TotalAppeals,\n  AVG(j.ExperienceYears) AS AvgJudgeExperience,\n  COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM Court AS c\nJOIN Cases AS ca\n  ON c.CourtID = ca.CourtID\nJOIN Appeal AS a\n  ON ca.CaseID = a.CaseID\nJOIN Hearing AS h\n  ON ca.CaseID = h.CaseID\nJOIN Judge AS j\n  ON h.JudgeID = j.JudgeID\nWHERE\n  j.ExperienceYears > 10\nGROUP BY\n  c.CourtName\nHAVING\n  COUNT(DISTINCT h.HearingID) > 1\nORDER BY\n  TotalAppeals DESC\nLIMIT 3;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    c.CourtName, \n    COUNT(a.AppealID) AS TotalAppeals, \n    AVG(j.ExperienceYears) AS AvgJudgeExperience, \n    COUNT(h.HearingID) AS TotalHearings\nFROM \n    Court c\nJOIN \n    Judge j ON c.CourtID = j.CourtID\nJOIN \n    Cases cs ON c.CourtID = cs.CourtID\nJOIN \n    Hearing h ON cs.CaseID = h.CaseID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nGROUP BY \n    c.CourtName\nHAVING \n    AVG(j.ExperienceYears) > 10 AND COUNT(h.HearingID) > 1\nORDER BY \n    TotalAppeals DESC\nLIMIT 3;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.CourtName, \n    COUNT(DISTINCT a.AppealID) AS TotalAppeals, \n    AVG(j.ExperienceYears) AS AvgJudgeExperience, \n    COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM \n    Court c\nJOIN \n    Judge j ON c.CourtID = j.CourtID\nJOIN \n    Hearing h ON c.CourtID = h.CaseID\nJOIN \n    `Cases` cs ON h.CaseID = cs.CaseID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nGROUP BY \n    c.CourtName\nHAVING \n    AVG(j.ExperienceYears) > 10 AND COUNT(DISTINCT h.HearingID) > 1\nORDER BY \n    TotalAppeals DESC\nLIMIT 3;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, COUNT(a.AppealID) AS TotalAppeals\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases cs ON h.CaseID = cs.CaseID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10 AND h.HearingType = 'Разбирательство'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT h.HearingID) > 1\nORDER BY TotalAppeals DESC\nLIMIT 3;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, COUNT(a.AppealID) AS AppealCount\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases cs ON h.CaseID = cs.CaseID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT h.HearingID) > 1\nORDER BY AppealCount DESC\nLIMIT 3;",
            "gigachat_response": "SELECT c.CourtName, COUNT(ap.AppealID) AS NumAppeals\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Hearing h ON ca.CaseID = h.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nJOIN Appeal ap ON ca.CaseID = ap.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 1\nORDER BY NumAppeals DESC\nLIMIT 3;",
            "gigachat_response_ru": "SELECT c.CourtName, COUNT(ap.AppealID) AS NumAppeals\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Hearing h ON ca.CaseID = h.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nJOIN Appeal ap ON ca.CaseID = ap.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 1\nORDER BY NumAppeals DESC\nLIMIT 3;"
        },
        {
            "question": "Какие топ-4 адвоката с опытом более 5 лет работают над делами с общим количеством платежей более 3 и суммарной стоимостью более 15000, включая дела с разными типами документов? (отсортировано по общей сумме платежей)",
            "sql_query": "SELECT p.FirstName, p.LastName, l.ExperienceYears, l.Specialization, COUNT(DISTINCT pmt.PaymentID) AS TotalPayments, SUM(pmt.Amount) AS TotalAmount, COUNT(DISTINCT ld.DocumentType) AS DocumentTypes FROM Person p JOIN Lawyer l ON p.PersonID = l.PersonID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Payment pmt ON ct.ContractID = pmt.ContractID JOIN LegalDocument ld ON ct.ClientID = ld.CaseID WHERE l.ExperienceYears > 5 GROUP BY p.FirstName, p.LastName, l.ExperienceYears, l.Specialization HAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000 AND COUNT(DISTINCT ld.DocumentType) > 1 ORDER BY TotalAmount DESC LIMIT 4;",
            "gpt-4o_response": "SELECT l.LawyerID, p.FirstName, p.LastName, l.ExperienceYears, SUM(pmt.Amount) AS TotalPayments, COUNT(DISTINCT pmt.PaymentID) AS TotalPaymentsCount\nFROM Lawyer l\nJOIN Person p ON l.PersonID = p.PersonID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE l.ExperienceYears > 5\nGROUP BY l.LawyerID, p.FirstName, p.LastName, l.ExperienceYears\nHAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY TotalPayments DESC\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    l.Specialization, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nGROUP BY \n    l.LawyerID\nHAVING \n    l.ExperienceYears > 5 \n    AND COUNT(pmt.PaymentID) > 3 \n    AND SUM(pmt.Amount) > 15000\nORDER BY \n    TotalPayments DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    l.ExperienceYears,\n    COUNT(DISTINCT pmt.PaymentID) AS TotalPaymentsCount,\n    SUM(pmt.Amount) AS TotalPaymentsAmount\nFROM\n    Lawyer l\nJOIN\n    Person p ON l.PersonID = p.PersonID\nJOIN\n    `Contract` ct ON l.LawyerID = ct.LawyerID\nJOIN\n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE\n    l.ExperienceYears > 5\nGROUP BY\n    p.FirstName,\n    p.LastName,\n    l.ExperienceYears\nHAVING\n    COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY\n    TotalPaymentsAmount DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT pmt.PaymentID) AS TotalPaymentsCount,\n  SUM(pmt.Amount) AS TotalPaymentsAmount,\n  l.ExperienceYears\nFROM Lawyer AS l\nJOIN Person AS p\n  ON l.PersonID = p.PersonID\nJOIN `Contract` AS c\n  ON l.LawyerID = c.LawyerID\nJOIN Payment AS pmt\n  ON c.ContractID = pmt.ContractID\nGROUP BY\n  p.FirstName,\n  p.LastName,\n  l.ExperienceYears\nHAVING\n  l.ExperienceYears > 5 AND COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY\n  TotalPaymentsAmount DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n  l.LawyerID, \n  p.FirstName, \n  p.LastName, \n  l.ExperienceYears, \n  COUNT(DISTINCT ld.DocumentType) AS UniqueDocumentTypes, \n  SUM(pmt.Amount) AS TotalPayments\nFROM \n  Lawyer l \n  JOIN Contract ct ON l.LawyerID = ct.LawyerID \n  JOIN Payment pmt ON ct.ContractID = pmt.ContractID \n  JOIN Client cl ON ct.ClientID = cl.ClientID \n  JOIN Person p ON cl.PersonID = p.PersonID \n  JOIN Cases c ON ct.ClientID = c.LawyerID \n  JOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n  l.ExperienceYears > 5 \n  AND pmt.Amount > 0 \nGROUP BY \n  l.LawyerID, \n  p.FirstName, \n  p.LastName, \n  l.ExperienceYears\nHAVING \n  COUNT(DISTINCT ld.DocumentType) > 1 \n  AND SUM(pmt.Amount) > 15000 \n  AND COUNT(pmt.PaymentID) > 3\nORDER BY \n  TotalPayments DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.ExperienceYears, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    `Cases` c ON ct.ClientID = c.LawyerID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    l.ExperienceYears > 5\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    l.ExperienceYears\nHAVING \n    COUNT(DISTINCT pmt.PaymentID) > 3 AND \n    SUM(pmt.Amount) > 15000\nORDER BY \n    TotalPayments DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, l.Specialization, l.ExperienceYears, COUNT(DISTINCT pmt.PaymentID) AS TotalPayments, SUM(pmt.Amount) AS TotalAmount\nFROM Person p\nJOIN Lawyer l ON p.PersonID = l.PersonID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN `Cases` c ON l.LawyerID = c.LawyerID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE l.ExperienceYears > 5\nGROUP BY p.FirstName, p.LastName, l.Specialization, l.ExperienceYears\nHAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY TotalAmount DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT p.FirstName, p.LastName, l.LicenseNumber, l.Specialization, l.ExperienceYears, \n       COUNT(DISTINCT pmt.PaymentID) AS TotalPayments, SUM(pmt.Amount) AS TotalAmount\nFROM Person p\nJOIN Lawyer l ON p.PersonID = l.PersonID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN Contract ct ON c.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE l.ExperienceYears > 5\nGROUP BY p.FirstName, p.LastName, l.LicenseNumber, l.Specialization, l.ExperienceYears\nHAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY TotalAmount DESC\nLIMIT 4;",
            "gigachat_response": "SELECT DISTINCT TOP 4 \n       lw.FirstName + ' ' + lw.LastName AS FullName,\n       SUM(py.Amount) OVER(PARTITION BY py.ContractID) AS TotalPaymentSum,\n       COUNT(*) OVER(PARTITION BY py.ContractID) AS NumOfPayments,\n       COUNT(DISTINCT doc.DocumentType) OVER(PARTITION BY py.ContractID) AS NumDistinctDocTypes\nFROM   Lawyer lr\nJOIN   Person lw ON lr.PersonID = lw.PersonID\nJOIN   Contract c ON lr.LawyerID = c.LawyerID\nJOIN   Payment py ON c.ContractID = py.ContractID\nLEFT JOIN LegalDocument doc ON c.ContractID = doc.CaseID\nWHERE  lr.ExperienceYears > 5\nGROUP BY lw.FirstName, lw.LastName, py.ContractID\nHAVING COUNT(*) >= 3 AND SUM(py.Amount) > 15000\nORDER BY TotalPaymentSum DESC;",
            "gigachat_response_ru": "SELECT \n    CONCAT(p.FirstName, ' ', p.LastName) AS FullName,\n    l.ExperienceYears,\n    COUNT(DISTINCT pmt.PaymentID) AS NumPayments,\n    SUM(pmt.Amount) AS TotalPaymentAmount,\n    COUNT(DISTINCT ld.DocumentType) AS NumDocTypes\nFROM Lawyer l\nJOIN Person p ON l.PersonID = p.PersonID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN Contract ct ON c.CaseID = ct.ContractID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE l.ExperienceYears > 5\nGROUP BY l.LawyerID\nHAVING COUNT(DISTINCT pmt.PaymentID) > 3 \nAND SUM(pmt.Amount) > 15000\nORDER BY TotalPaymentAmount DESC\nLIMIT 4;"
        },
        {
            "question": "Какие топ-5 судей с опытом более 8 лет рассматривали дела с общим количеством доказательств более 2, включая видео и документы, за последние 3 месяца? (отсортировано по количеству доказательств)",
            "sql_query": "SELECT DISTINCT p.FirstName, p.LastName, j.ExperienceYears, COUNT(DISTINCT e.EvidenceID) AS TotalEvidence FROM Judge j JOIN Person p ON j.PersonID = p.PersonID JOIN Cases cs ON j.CourtID = cs.CourtID JOIN Evidence e ON cs.CaseID = e.CaseID WHERE j.ExperienceYears > 8 AND e.EvidenceType IN ('Видео', 'Документ') AND e.SubmissionDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY p.FirstName, p.LastName, j.ExperienceYears HAVING COUNT(DISTINCT e.EvidenceID) > 2 ORDER BY TotalEvidence DESC LIMIT 5;",
            "gpt-4o_response": "SELECT j.JudgeID, p.FirstName, p.LastName, COUNT(e.EvidenceID) AS TotalEvidence\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE j.ExperienceYears > 8\nAND e.EvidenceType IN ('Видео', 'Документ')\nAND e.SubmissionDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)\nGROUP BY j.JudgeID, p.FirstName, p.LastName\nHAVING COUNT(e.EvidenceID) > 2\nORDER BY TotalEvidence DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears, \n    COUNT(e.EvidenceID) AS TotalEvidence\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8\n    AND e.EvidenceType IN ('Видео', 'Документ')\n    AND e.SubmissionDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH)\nGROUP BY \n    j.JudgeID\nHAVING \n    COUNT(e.EvidenceID) > 2\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceID) AS TotalEvidenceCount\nFROM Judge AS j\nJOIN Person AS p\n  ON j.PersonID = p.PersonID\nJOIN Hearing AS h\n  ON j.JudgeID = h.JudgeID\nJOIN Cases AS c\n  ON h.CaseID = c.CaseID\nJOIN Evidence AS e\n  ON c.CaseID = e.CaseID\nWHERE\n  j.ExperienceYears > 8\n  AND e.SubmissionDate >= DATE('now', '-3 months')\n  AND e.EvidenceType IN ('Видео', 'Документ')\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY\n  TotalEvidenceCount DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceID) AS TotalEvidence\nFROM Judge AS j\nJOIN Person AS p\n  ON j.PersonID = p.PersonID\nJOIN Hearing AS h\n  ON j.JudgeID = h.JudgeID\nJOIN Cases AS c\n  ON h.CaseID = c.CaseID\nJOIN Evidence AS e\n  ON c.CaseID = e.CaseID\nWHERE\n  j.ExperienceYears > 8\n  AND e.EvidenceType IN ('Видео', 'Документ')\n  AND e.SubmissionDate >= DATE('now', '-3 months')\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY\n  TotalEvidence DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.JudgeID, \n    j.ExperienceYears, \n    COUNT(DISTINCT e.EvidenceID) AS TotalEvidence\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    `Cases` c ON h.CaseID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8 \n    AND e.EvidenceType IN ('Документ', 'Видео') \n    AND h.HearingDate >= NOW() - INTERVAL 3 MONTH\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    j.JudgeID, \n    j.ExperienceYears\nHAVING \n    COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT e.EvidenceID) AS TotalEvidence\nFROM \n    Person p\nJOIN \n    Judge j ON p.PersonID = j.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8 \n    AND e.EvidenceType IN ('Документ', 'Видео') \n    AND h.HearingDate >= NOW() - INTERVAL 3 MONTH\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears, \n    COUNT(DISTINCT e.EvidenceID) AS TotalEvidence\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Evidence e ON h.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8\n    AND e.SubmissionDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH)\n    AND e.EvidenceType IN ('Видео', 'Документ')\nGROUP BY \n    p.FirstName, p.LastName, j.ExperienceYears\nHAVING \n    COUNT(DISTINCT e.EvidenceID) > 2\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears,\n    COUNT(DISTINCT e.EvidenceID) AS TotalEvidence,\n    SUM(CASE WHEN e.EvidenceType = 'Видео' THEN 1 ELSE 0 END) AS VideoEvidence,\n    SUM(CASE WHEN e.EvidenceType = 'Документ' THEN 1 ELSE 0 END) AS DocumentEvidence\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Evidence e ON h.CaseID = e.CaseID\nWHERE \n    j.ExperienceYears > 8\n    AND e.SubmissionDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH)\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName, j.ExperienceYears\nHAVING \n    COUNT(DISTINCT e.EvidenceID) > 2\n    AND (VideoEvidence > 0 AND DocumentEvidence > 0)\nORDER BY \n    TotalEvidence DESC\nLIMIT 5;",
            "gigachat_response": "SELECT j.JudgeID, CONCAT(p.FirstName, ' ', p.MiddleName, ' ', p.LastName) AS FullName, COUNT(e.EvidenceID) AS NumOfEvidence\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE j.ExperienceYears > 8 \nAND e.SubmissionDate >= CURDATE() - INTERVAL 3 MONTH\nAND e.EvidenceType IN ('Видео', 'Документ')\nGROUP BY j.JudgeID\nHAVING COUNT(e.EvidenceID) > 2\nORDER BY NumOfEvidence DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT j.JudgeID, CONCAT(p.FirstName, ' ', p.LastName) AS FullName, COUNT(e.EvidenceID) AS NumOfEvidence\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Evidence e ON c.CaseID = e.CaseID\nWHERE j.ExperienceYears > 8 \nAND e.EvidenceType IN ('Видео', 'Документ')\nAND h.HearingDate >= DATE_SUB(NOW(), INTERVAL 3 MONTH)\nGROUP BY j.JudgeID\nHAVING COUNT(e.EvidenceID) > 2\nORDER BY NumOfEvidence DESC\nLIMIT 5;"
        },
        {
            "question": "Какие топ-4 клиента, зарегистрированные в 2023 году, имеют дела с более чем одним типом доказательств и общим количеством документов более 2? (отсортировано по количеству документов)",
            "sql_query": "SELECT p.FirstName, p.LastName, cl.RegistrationDate, COUNT(DISTINCT e.EvidenceType) AS EvidenceTypes, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN Evidence e ON ct.ClientID = e.CaseID JOIN LegalDocument ld ON ct.ClientID = ld.CaseID WHERE YEAR(cl.RegistrationDate) = 2023 GROUP BY p.FirstName, p.LastName, cl.RegistrationDate HAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2 ORDER BY TotalDocuments DESC LIMIT 4;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM Client cl\nJOIN Person p ON cl.PersonID = p.PersonID\nJOIN Contract ct ON cl.ClientID = ct.ClientID\nJOIN Cases c ON ct.ClientID = c.LawyerID\nJOIN Evidence e ON c.CaseID = e.CaseID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE cl.RegistrationDate >= '2023-01-01'\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY TotalDocuments DESC\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM \n    Client cl\nJOIN \n    Person p ON cl.PersonID = p.PersonID\nJOIN \n    Contract ct ON cl.ClientID = ct.ClientID\nJOIN \n    `Cases` c ON ct.ClientID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    cl.RegistrationDate BETWEEN '2023-01-01' AND '2023-12-31'\nGROUP BY \n    p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 1 \n    AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY \n    TotalDocuments DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    COUNT(DISTINCT e.EvidenceType) AS NumberOfEvidenceTypes,\n    COUNT(DISTINCT ld.DocumentID) AS NumberOfDocuments\nFROM\n    Client c\nJOIN\n    Person p ON c.PersonID = p.PersonID\nJOIN\n    `Contract` ct ON c.ClientID = ct.ClientID\nJOIN\n    Cases ca ON ct.ClientID = ca.CaseID\nJOIN\n    Evidence e ON ca.CaseID = e.CaseID\nJOIN\n    LegalDocument ld ON ca.CaseID = ld.CaseID\nWHERE\n    c.RegistrationDate BETWEEN '2023-01-01' AND '2023-12-31'\nGROUP BY\n    p.FirstName,\n    p.LastName\nHAVING\n    COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY\n    NumberOfDocuments DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceType) AS NumberOfEvidenceTypes,\n  COUNT(DISTINCT ld.DocumentID) AS NumberOfDocuments\nFROM Client AS c\nJOIN Person AS p\n  ON c.PersonID = p.PersonID\nJOIN `Contract` AS ct\n  ON c.ClientID = ct.ClientID\nJOIN Cases AS ca\n  ON ct.LawyerID = ca.LawyerID\nJOIN Evidence AS e\n  ON ca.CaseID = e.CaseID\nJOIN LegalDocument AS ld\n  ON ca.CaseID = ld.CaseID\nWHERE\n  c.RegistrationDate LIKE '2023%'\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY\n  NumberOfDocuments DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes\nFROM \n    Person p\nJOIN \n    Client cl ON p.PersonID = cl.PersonID\nJOIN \n    `Cases` c ON cl.ClientID = c.LawyerID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nWHERE \n    YEAR(cl.RegistrationDate) = 2023\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    COUNT(DISTINCT ld.DocumentID) > 2 AND \n    COUNT(DISTINCT e.EvidenceType) > 1\nORDER BY \n    TotalDocuments DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments\nFROM \n    Person p\nJOIN \n    Client cl ON p.PersonID = cl.PersonID\nJOIN \n    `Cases` c ON cl.ClientID = c.LawyerID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    YEAR(cl.RegistrationDate) = 2023\nGROUP BY \n    p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY \n    TotalDocuments DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceType) AS EvidenceTypesCount, COUNT(DISTINCT ld.DocumentID) AS DocumentsCount\nFROM Person p\nJOIN Client c ON p.PersonID = c.PersonID\nJOIN Contract ct ON c.ClientID = ct.ClientID\nJOIN Cases cs ON ct.LawyerID = cs.LawyerID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE YEAR(c.RegistrationDate) = 2023\nGROUP BY p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(DISTINCT ld.DocumentID) > 2\nORDER BY DocumentsCount DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "",
            "gigachat_response": "SELECT c.ClientID, p.FirstName, p.LastName, COUNT(DISTINCT e.EvidenceType) AS NumEvidenceTypes, COUNT(*) AS TotalDocuments\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Cases cs ON c.ClientID = cs.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nWHERE c.RegistrationDate >= '2023-01-01' AND c.RegistrationDate <= '2023-12-31'\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(*) > 2\nORDER BY TotalDocuments DESC\nLIMIT 4;",
            "gigachat_response_ru": "SELECT c.FirstName, c.LastName, COUNT(DISTINCT e.EvidenceType) AS NumEvidenceTypes, COUNT(d.DocumentID) AS NumDocuments\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN Cases cs ON cl.ClientID = cs.LawyerID OR cl.ClientID = cs.CourtID -- Предположим связь Клиента с делом через адвоката или суд\nJOIN LegalDocument d ON cs.CaseID = d.CaseID\nJOIN Evidence e ON cs.CaseID = e.CaseID\nWHERE YEAR(cl.RegistrationDate) = 2023\nGROUP BY c.FirstName, c.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) > 1 AND COUNT(d.DocumentID) > 2\nORDER BY NumDocuments DESC\nLIMIT 4;"
        },
        {
            "question": "В каких топ-3 судах рассматриваются дела с апелляциями, где средний опыт судей превышает 10 лет, и количество разбирательств более 1? (отсортировано по количеству апелляций)",
            "sql_query": "SELECT c.CourtName, AVG(j.ExperienceYears) AS AvgJudgeExperience, COUNT(DISTINCT h.HearingID) AS TotalHearings, COUNT(DISTINCT a.AppealID) AS TotalAppeals FROM Court c JOIN Judge j ON c.CourtID = j.CourtID JOIN Cases cs ON c.CourtID = cs.CourtID JOIN Hearing h ON cs.CaseID = h.CaseID JOIN Appeal a ON cs.CaseID = a.CaseID WHERE h.HearingType = 'Разбирательство' GROUP BY c.CourtName HAVING AVG(j.ExperienceYears) > 10 AND COUNT(DISTINCT h.HearingID) > 1 ORDER BY TotalAppeals DESC LIMIT 3;",
            "gpt-4o_response": "SELECT c.CourtName, COUNT(a.AppealID) AS TotalAppeals\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases cs ON h.CaseID = cs.CaseID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 1\nORDER BY TotalAppeals DESC\nLIMIT 3;",
            "gpt-4o_response_ru": "SELECT crt.CourtName, COUNT(a.AppealID) AS TotalAppeals\nFROM Court crt\nJOIN Judge j ON crt.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Appeal a ON c.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY crt.CourtName\nHAVING COUNT(h.HearingID) > 1\nORDER BY TotalAppeals DESC\nLIMIT 3;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.CourtName,\n    COUNT(a.AppealID) AS TotalAppeals,\n    AVG(j.ExperienceYears) AS AverageJudgeExperience,\n    SUM(CASE WHEN h.HearingType = 'Разбирательство' THEN 1 ELSE 0 END) AS TotalHearings\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Appeal a ON ca.CaseID = a.CaseID\nJOIN Hearing h ON ca.CaseID = h.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nWHERE h.HearingType = 'Разбирательство'\nGROUP BY c.CourtName\nHAVING AVG(j.ExperienceYears) > 10 AND SUM(CASE WHEN h.HearingType = 'Разбирательство' THEN 1 ELSE 0 END) > 1\nORDER BY TotalAppeals DESC\nLIMIT 3;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  c.CourtName,\n  COUNT(DISTINCT a.AppealID) AS TotalAppeals,\n  AVG(j.ExperienceYears) AS AvgJudgeExperience,\n  COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM Court AS c\nJOIN Cases AS ca\n  ON c.CourtID = ca.CourtID\nJOIN Appeal AS a\n  ON ca.CaseID = a.CaseID\nJOIN Hearing AS h\n  ON ca.CaseID = h.CaseID\nJOIN Judge AS j\n  ON h.JudgeID = j.JudgeID\nWHERE\n  j.ExperienceYears > 10\nGROUP BY\n  c.CourtName\nHAVING\n  COUNT(DISTINCT h.HearingID) > 1\nORDER BY\n  TotalAppeals DESC\nLIMIT 3;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT c.CourtName, COUNT(a.AppealID) AS TotalAppeals, AVG(j.ExperienceYears) AS AvgJudgeExperience, COUNT(h.HearingID) AS TotalHearings\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Cases cs ON c.CourtID = cs.CourtID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nJOIN Hearing h ON cs.CaseID = h.CaseID\nGROUP BY c.CourtName\nHAVING AVG(j.ExperienceYears) > 10 AND COUNT(h.HearingID) > 1\nORDER BY TotalAppeals DESC\nLIMIT 3;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.CourtName, \n    COUNT(a.AppealID) AS TotalAppeals, \n    AVG(j.ExperienceYears) AS AvgJudgeExperience, \n    COUNT(h.HearingID) AS TotalHearings\nFROM \n    Court c\nJOIN \n    Judge j ON c.CourtID = j.CourtID\nJOIN \n    Cases cs ON c.CourtID = cs.CourtID\nJOIN \n    Hearing h ON cs.CaseID = h.CaseID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nGROUP BY \n    c.CourtName\nHAVING \n    AVG(j.ExperienceYears) > 10 AND COUNT(h.HearingID) > 1\nORDER BY \n    TotalAppeals DESC\nLIMIT 3;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT c.CourtName, COUNT(a.AppealID) AS AppealCount\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Appeal a ON h.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10 AND h.HearingType = 'Разбирательство'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT h.HearingID) > 1\nORDER BY AppealCount DESC\nLIMIT 3;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT c.CourtName, COUNT(a.AppealID) AS AppealCount\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Appeal a ON h.CaseID = a.CaseID\nWHERE j.ExperienceYears > 10\nAND h.HearingType = 'Разбирательство'\nGROUP BY c.CourtName\nHAVING COUNT(DISTINCT h.HearingID) > 1\nORDER BY AppealCount DESC\nLIMIT 3;",
            "gigachat_response": "SELECT c.CourtName, COUNT(ap.AppealID) AS NumAppeals\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Hearing h ON ca.CaseID = h.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nJOIN Appeal ap ON ca.CaseID = ap.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 1\nORDER BY NumAppeals DESC\nLIMIT 3;",
            "gigachat_response_ru": "SELECT c.CourtName, COUNT(ap.AppealID) AS NumAppeals\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Hearing h ON ca.CaseID = h.CaseID\nJOIN Judge j ON h.JudgeID = j.JudgeID\nJOIN Appeal ap ON ca.CaseID = ap.CaseID\nWHERE j.ExperienceYears > 10\nGROUP BY c.CourtName\nHAVING COUNT(h.HearingID) > 1\nORDER BY NumAppeals DESC\nLIMIT 3;"
        },
        {
            "question": "Какие топ-4 адвоката с опытом более 5 лет работают над делами с общим количеством платежей более 3 и суммарной стоимостью более 15000, включая дела с разными типами документов? (отсортировано по общей сумме платежей)",
            "sql_query": "SELECT p.FirstName, p.LastName, l.ExperienceYears, l.Specialization, COUNT(DISTINCT pmt.PaymentID) AS TotalPayments, SUM(pmt.Amount) AS TotalAmount, COUNT(DISTINCT ld.DocumentType) AS DocumentTypes FROM Person p JOIN Lawyer l ON p.PersonID = l.PersonID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Payment pmt ON ct.ContractID = pmt.ContractID JOIN LegalDocument ld ON ct.ClientID = ld.CaseID WHERE l.ExperienceYears > 5 GROUP BY p.FirstName, p.LastName, l.ExperienceYears, l.Specialization HAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000 AND COUNT(DISTINCT ld.DocumentType) > 1 ORDER BY TotalAmount DESC LIMIT 4;",
            "gpt-4o_response": "SELECT l.LawyerID, p.FirstName, p.LastName, SUM(pmt.Amount) AS TotalPayments, COUNT(DISTINCT pmt.PaymentID) AS TotalPaymentsCount\nFROM Lawyer l\nJOIN Person p ON l.PersonID = p.PersonID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE l.ExperienceYears > 5\nGROUP BY l.LawyerID, p.FirstName, p.LastName\nHAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY TotalPayments DESC\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    l.Specialization, \n    l.ExperienceYears, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nGROUP BY \n    l.LawyerID\nHAVING \n    l.ExperienceYears > 5 \n    AND COUNT(pmt.PaymentID) > 3 \n    AND SUM(pmt.Amount) > 15000\nORDER BY \n    TotalPayments DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    l.ExperienceYears,\n    COUNT(DISTINCT pmt.PaymentID) AS TotalPaymentsCount,\n    SUM(pmt.Amount) AS TotalPaymentsAmount\nFROM\n    Lawyer l\nJOIN\n    Person p ON l.PersonID = p.PersonID\nJOIN\n    `Contract` ct ON l.LawyerID = ct.LawyerID\nJOIN\n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE\n    l.ExperienceYears > 5\nGROUP BY\n    p.FirstName,\n    p.LastName,\n    l.ExperienceYears\nHAVING\n    COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY\n    TotalPaymentsAmount DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT pmt.PaymentID) AS TotalPaymentsCount,\n  SUM(pmt.Amount) AS TotalPaymentsAmount\nFROM Lawyer AS l\nJOIN Person AS p\n  ON l.PersonID = p.PersonID\nJOIN `Contract` AS c\n  ON l.LawyerID = c.LawyerID\nJOIN Payment AS pmt\n  ON c.ContractID = pmt.ContractID\nWHERE\n  l.ExperienceYears > 5\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY\n  TotalPaymentsAmount DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    l.LawyerID, \n    p.FirstName, \n    p.LastName, \n    l.ExperienceYears, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments, \n    COUNT(DISTINCT pmt.PaymentID) AS TotalPayments, \n    SUM(pmt.Amount) AS TotalAmount\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    `Cases` c ON ct.ClientID = c.LawyerID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    l.ExperienceYears > 5\nGROUP BY \n    l.LawyerID, p.FirstName, p.LastName, l.ExperienceYears\nHAVING \n    COUNT(DISTINCT ld.DocumentType) > 1 AND \n    COUNT(DISTINCT pmt.PaymentID) > 3 AND \n    SUM(pmt.Amount) > 15000\nORDER BY \n    TotalAmount DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.ExperienceYears, \n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    `Cases` c ON ct.ClientID IN (SELECT ClientID FROM Client WHERE ClientID = c.LawyerID)\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    l.ExperienceYears > 5\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    l.ExperienceYears\nHAVING \n    COUNT(DISTINCT ld.DocumentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY \n    TotalPayments DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT p.FirstName, p.LastName, l.Specialization, l.ExperienceYears, COUNT(DISTINCT pmt.PaymentID) AS TotalPayments, SUM(pmt.Amount) AS TotalAmount\nFROM Person p\nJOIN Lawyer l ON p.PersonID = l.PersonID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN `Cases` c ON l.LawyerID = c.LawyerID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE l.ExperienceYears > 5\nGROUP BY p.FirstName, p.LastName, l.Specialization, l.ExperienceYears\nHAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY TotalAmount DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.Specialization, \n    l.ExperienceYears, \n    SUM(pmt.Amount) AS TotalPayments,\n    COUNT(DISTINCT pmt.PaymentID) AS PaymentCount,\n    COUNT(DISTINCT ld.DocumentType) AS DocumentTypesCount\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    l.ExperienceYears > 5\nGROUP BY \n    p.FirstName, p.LastName, l.Specialization, l.ExperienceYears\nHAVING \n    COUNT(DISTINCT pmt.PaymentID) > 3 \n    AND SUM(pmt.Amount) > 15000\n    AND COUNT(DISTINCT ld.DocumentType) > 1\nORDER BY \n    TotalPayments DESC\nLIMIT 4;",
            "gigachat_response": "SELECT \n    lw.FirstName, \n    lw.LastName, \n    lw.ExperienceYears, \n    SUM(p.Amount) AS TotalPaymentSum, \n    COUNT(DISTINCT d.DocumentType) AS NumDistinctDocTypes\nFROM \n    Lawyer l\nJOIN \n    Person lw ON l.PersonID = lw.PersonID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    Contract ct ON c.CaseID = ct.CaseID\nJOIN \n    Payment p ON ct.ContractID = p.ContractID\nLEFT JOIN \n    LegalDocument d ON c.CaseID = d.CaseID\nWHERE \n    l.ExperienceYears > 5\nGROUP BY \n    lw.FirstName, lw.LastName, lw.ExperienceYears\nHAVING \n    COUNT(DISTINCT p.PaymentID) > 3 \nAND \n    SUM(p.Amount) > 15000\nORDER BY \n    TotalPaymentSum DESC\nLIMIT 4;",
            "gigachat_response_ru": "SELECT \n    CONCAT(p.FirstName, ' ', p.LastName) AS FullName,\n    l.ExperienceYears,\n    COUNT(DISTINCT pmt.PaymentID) AS NumPayments,\n    SUM(pmt.Amount) AS TotalPaymentAmount,\n    COUNT(DISTINCT ld.DocumentType) AS NumDocTypes\nFROM Lawyer l\nJOIN Person p ON l.PersonID = p.PersonID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN Contract ct ON c.CaseID = ct.ContractID\nJOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE l.ExperienceYears > 5\nGROUP BY l.LawyerID\nHAVING COUNT(DISTINCT pmt.PaymentID) > 3 AND SUM(pmt.Amount) > 15000\nORDER BY TotalPaymentAmount DESC\nLIMIT 4;"
        },
        {
            "question": "Какие топ-5 судей с опытом более 7 лет рассматривали дела с апелляциями, где сумма платежей превышает 8000, и количество разбирательств более 2? (отсортировано по общей сумме платежей)",
            "sql_query": "SELECT DISTINCT p.FirstName, p.LastName, j.ExperienceYears, COUNT(DISTINCT h.HearingID) AS TotalHearings, SUM(pmt.Amount) AS TotalPayments FROM Judge j JOIN Person p ON j.PersonID = p.PersonID JOIN Cases cs ON j.CourtID = cs.CourtID JOIN Hearing h ON cs.CaseID = h.CaseID JOIN Contract ct ON cs.CaseID = ct.ClientID JOIN Payment pmt ON ct.ContractID = pmt.ContractID WHERE j.ExperienceYears > 7 AND h.HearingType = 'Разбирательство' GROUP BY p.FirstName, p.LastName, j.ExperienceYears HAVING COUNT(DISTINCT h.HearingID) > 2 AND SUM(pmt.Amount) > 8000 ORDER BY TotalPayments DESC LIMIT 5;",
            "gpt-4o_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears, \n    COUNT(DISTINCT h.HearingID) AS TotalHearings, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    j.ExperienceYears > 7\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName, j.ExperienceYears\nHAVING \n    SUM(pmt.Amount) > 8000 AND COUNT(DISTINCT h.HearingID) > 2\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    j.ExperienceYears > 7\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName\nHAVING \n    SUM(pmt.Amount) > 8000 AND COUNT(h.HearingID) > 2\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    j.ExperienceYears,\n    SUM(pmt.Amount) AS TotalPaymentAmount,\n    COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM\n    Judge j\nJOIN\n    Person p ON j.PersonID = p.PersonID\nJOIN\n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN\n    Cases c ON h.CaseID = c.CaseID\nLEFT JOIN\n    Appeal a ON c.CaseID = a.CaseID\nLEFT JOIN\n    Contract ct ON c.LawyerID = ct.LawyerID\nLEFT JOIN\n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE\n    j.ExperienceYears > 7\nGROUP BY\n    p.FirstName,\n    p.LastName,\n    j.ExperienceYears\nHAVING\n    SUM(pmt.Amount) > 8000 AND COUNT(DISTINCT h.HearingID) > 2\nORDER BY\n    TotalPaymentAmount DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  SUM(pmt.Amount) AS TotalPayments,\n  COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM Judge AS j\nJOIN Person AS p\n  ON j.PersonID = p.PersonID\nJOIN Hearing AS h\n  ON j.JudgeID = h.JudgeID\nJOIN Cases AS ca\n  ON h.CaseID = ca.CaseID\nJOIN Appeal AS a\n  ON ca.CaseID = a.CaseID\nJOIN Contract AS ct\n  ON ca.CaseID = ct.ClientID\nJOIN Payment AS pmt\n  ON ct.ContractID = pmt.ContractID\nWHERE\n  j.ExperienceYears > 7\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  SUM(pmt.Amount) > 8000 AND COUNT(DISTINCT h.HearingID) > 2\nORDER BY\n  TotalPayments DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    j.JudgeID, \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears, \n    SUM(pmt.Amount) AS TotalPayments, \n    COUNT(DISTINCT h.HearingID) AS TotalHearings\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Verdict v ON j.JudgeID = v.JudgeID\nJOIN \n    `Cases` c ON v.CaseID = c.CaseID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Contract ct ON c.CaseID = ct.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    j.ExperienceYears > 7 AND pmt.Amount > 8000 AND h.HearingType = 'Разбирательство'\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName, j.ExperienceYears\nHAVING \n    COUNT(DISTINCT h.HearingID) > 2\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears, \n    SUM(py.Amount) AS TotalPayments\nFROM \n    Judge j\nJOIN \n    Person p ON j.JudgeID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    `Cases` c ON h.CaseID = c.CaseID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Payment py ON ct.ContractID = py.ContractID\nWHERE \n    j.ExperienceYears > 7 AND \n    a.AppellantID IS NOT NULL AND \n    h.HearingType = 'Разбирательство' AND \n    py.Amount > 8000\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears\nHAVING \n    COUNT(DISTINCT h.HearingID) > 2\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears,\n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    `Cases` c ON h.CaseID = c.CaseID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    j.ExperienceYears > 7\nGROUP BY \n    p.FirstName, p.LastName, j.ExperienceYears\nHAVING \n    SUM(pmt.Amount) > 8000 AND COUNT(DISTINCT h.HearingID) > 2\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.ExperienceYears,\n    SUM(pmt.Amount) AS TotalPayments,\n    COUNT(DISTINCT h.HearingID) AS HearingsCount\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    `Cases` c ON h.CaseID = c.CaseID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    j.ExperienceYears > 7\n    AND pmt.Amount > 8000\nGROUP BY \n    p.FirstName, p.LastName, j.ExperienceYears\nHAVING \n    COUNT(DISTINCT h.HearingID) > 2\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "gigachat_response": "SELECT j.JudgeID, CONCAT(p.FirstName, ' ', p.MiddleName, ' ', p.LastName) AS FullName, COUNT(h.HearingID) AS NumHearings, SUM(pmt.Amount) AS TotalPayment\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Appeal ap ON c.CaseID = ap.CaseID\nJOIN Payment pmt ON c.CaseID = pmt.ContractID -- Assuming payment relates directly to case ID\nWHERE j.ExperienceYears > 7\nGROUP BY j.JudgeID, p.FirstName, p.MiddleName, p.LastName\nHAVING COUNT(h.HearingID) > 2 AND SUM(pmt.Amount) > 8000\nORDER BY TotalPayment DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT j.PersonID, CONCAT(p.FirstName, ' ', p.LastName) AS FullName, COUNT(h.HearingID) AS NumHearings, SUM(pmt.Amount) AS TotalPayment\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Appeal ap ON c.CaseID = ap.CaseID\nJOIN Payment pmt ON c.CaseID = pmt.ContractID\nWHERE j.ExperienceYears > 7\nGROUP BY j.PersonID, p.FirstName, p.LastName\nHAVING COUNT(h.HearingID) > 2 AND SUM(pmt.Amount) > 8000\nORDER BY TotalPayment DESC\nLIMIT 5;"
        },
        {
            "question": "Какие топ-5 адвокатов с опытом более 6 лет работают над делами с более чем 2 типами доказательств и общим количеством платежей более 4, включая дела с разными типами документов и консультациями? (отсортировано по количеству платежей)",
            "sql_query": "SELECT p.FirstName, p.LastName, l.ExperienceYears, l.Specialization, COUNT(DISTINCT e.EvidenceType) AS EvidenceTypes, COUNT(DISTINCT pmt.PaymentID) AS TotalPayments, COUNT(DISTINCT ld.DocumentType) AS DocumentTypes, COUNT(DISTINCT la.AdviceID) AS TotalAdvice FROM Person p JOIN Lawyer l ON p.PersonID = l.PersonID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Evidence e ON ct.ClientID = e.CaseID JOIN Payment pmt ON ct.ContractID = pmt.ContractID JOIN LegalDocument ld ON ct.ClientID = ld.CaseID JOIN LegalAdvice la ON l.LawyerID = la.LawyerID WHERE l.ExperienceYears > 6 GROUP BY p.FirstName, p.LastName, l.ExperienceYears, l.Specialization HAVING COUNT(DISTINCT e.EvidenceType) > 2 AND COUNT(DISTINCT pmt.PaymentID) > 4 AND COUNT(DISTINCT ld.DocumentType) > 1 ORDER BY TotalPayments DESC LIMIT 5;",
            "gpt-4o_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    l.Specialization, \n    l.ExperienceYears, \n    COUNT(DISTINCT pmt.PaymentID) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    LegalAdvice la ON ct.ClientID = la.ClientID\nWHERE \n    l.ExperienceYears > 6\nGROUP BY \n    l.LawyerID\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 2 \n    AND COUNT(DISTINCT pmt.PaymentID) > 4\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    l.Specialization, \n    l.ExperienceYears, \n    COUNT(DISTINCT pmt.PaymentID) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    LegalAdvice la ON ct.ClientID = la.ClientID\nWHERE \n    l.ExperienceYears > 6\nGROUP BY \n    l.LawyerID\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 2 \n    AND COUNT(DISTINCT pmt.PaymentID) > 4\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceType) AS NumberOfEvidenceTypes,\n  SUM(pmt.Amount) AS TotalPayments,\n  COUNT(DISTINCT ld.DocumentType) AS NumberOfDocumentTypes,\n  COUNT(DISTINCT la.AdviceID) AS NumberOfAdvices\nFROM Lawyer AS l\nJOIN Person AS p\n  ON l.PersonID = p.PersonID\nJOIN Cases AS ca\n  ON l.LawyerID = ca.LawyerID\nJOIN Evidence AS e\n  ON ca.CaseID = e.CaseID\nJOIN `Contract` AS ct\n  ON l.LawyerID = ct.LawyerID\nJOIN Payment AS pmt\n  ON ct.ContractID = pmt.ContractID\nJOIN LegalDocument AS ld\n  ON ca.CaseID = ld.CaseID\nJOIN LegalAdvice AS la\n  ON l.LawyerID = la.LawyerID\nWHERE\n  l.ExperienceYears > 6\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  NumberOfEvidenceTypes > 2 AND SUM(pmt.Amount) > 4\nORDER BY\n  TotalPayments DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT e.EvidenceType) AS NumberOfEvidenceTypes,\n  SUM(pmt.Amount) AS TotalPayments,\n  COUNT(DISTINCT ld.DocumentType) AS NumberOfDocumentTypes,\n  COUNT(DISTINCT la.AdviceID) AS NumberOfAdvices\nFROM Lawyer AS l\nJOIN Person AS p\n  ON l.PersonID = p.PersonID\nJOIN Cases AS c\n  ON l.LawyerID = c.LawyerID\nJOIN Evidence AS e\n  ON c.CaseID = e.CaseID\nJOIN `Contract` AS ct\n  ON l.LawyerID = ct.LawyerID\nJOIN Payment AS pmt\n  ON ct.ContractID = pmt.ContractID\nLEFT JOIN LegalDocument AS ld\n  ON c.CaseID = ld.CaseID\nLEFT JOIN LegalAdvice AS la\n  ON ct.ClientID = la.ClientID\nWHERE\n  l.ExperienceYears > 6\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  NumberOfEvidenceTypes > 2 AND COUNT(DISTINCT pmt.PaymentID) > 4\nORDER BY\n  TotalPayments DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    l.LawyerID, \n    p.FirstName, \n    p.LastName, \n    l.Specialization, \n    l.ExperienceYears, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes, \n    COUNT(DISTINCT ld.DocumentType) AS UniqueDocumentTypes, \n    COUNT(DISTINCT la.AdviceType) AS UniqueAdviceTypes, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    LegalAdvice la ON l.LawyerID = la.LawyerID\nWHERE \n    l.ExperienceYears > 6 AND \n    COUNT(DISTINCT e.EvidenceType) > 2 AND \n    COUNT(pmt.PaymentID) > 4\nGROUP BY \n    l.LawyerID, p.FirstName, p.LastName, l.Specialization, l.ExperienceYears\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.ExperienceYears, \n    COUNT(DISTINCT e.EvidenceType) AS TotalEvidenceTypes, \n    COUNT(DISTINCT ld.DocumentType) AS TotalDocumentTypes, \n    COUNT(DISTINCT la.AdviceType) AS TotalAdviceTypes, \n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    `Cases` c ON ct.ClientID = c.LawyerID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    LegalAdvice la ON ct.ClientID = la.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    l.ExperienceYears > 6\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    l.ExperienceYears\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 2 \n    AND COUNT(DISTINCT ld.DocumentType) > 1 \n    AND COUNT(DISTINCT la.AdviceType) > 1 \n    AND SUM(pmt.Amount) > 4\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.Specialization, \n    l.ExperienceYears,\n    COUNT(DISTINCT pmt.PaymentID) AS TotalPayments\nFROM \n    Person p\nJOIN \n    Lawyer l ON p.PersonID = l.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases c ON ct.ClientID = c.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    LegalAdvice la ON ct.ClientID = la.ClientID AND ct.LawyerID = la.LawyerID\nWHERE \n    l.ExperienceYears > 6\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    l.Specialization, \n    l.ExperienceYears,\n    c.CaseID\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 2 AND \n    COUNT(DISTINCT pmt.PaymentID) > 4 AND\n    COUNT(DISTINCT ld.DocumentType) > 1 AND\n    COUNT(DISTINCT la.AdviceType) > 0\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    l.Specialization, \n    COUNT(DISTINCT pmt.PaymentID) AS TotalPayments\nFROM \n    Person p\nJOIN \n    Lawyer l ON p.PersonID = l.PersonID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    LegalAdvice la ON l.LawyerID = la.LawyerID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    l.ExperienceYears > 6\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    l.Specialization\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 2 \n    AND COUNT(DISTINCT pmt.PaymentID) > 4 \n    AND COUNT(DISTINCT ld.DocumentType) > 1 \n    AND COUNT(DISTINCT la.AdviceType) > 1\nORDER BY \n    TotalPayments DESC\nLIMIT 5;",
            "gigachat_response": "WITH LawyersWithMultipleTypesOfEvidence AS (\n    SELECT DISTINCT e.CaseID, l.LawyerID\n    FROM Evidence e\n    INNER JOIN Cases c ON e.CaseID = c.CaseID\n    INNER JOIN Lawyer l ON c.LawyerID = l.LawyerID\n    GROUP BY e.CaseID, l.LawyerID\n    HAVING COUNT(DISTINCT e.EvidenceType) > 2\n), LawyersWithDifferentDocumentTypes AS (\n    SELECT DISTINCT d.CaseID, l.LawyerID\n    FROM LegalDocument d\n    INNER JOIN Cases c ON d.CaseID = c.CaseID\n    INNER JOIN Lawyer l ON c.LawyerID = l.LawyerID\n    GROUP BY d.CaseID, l.LawyerID\n    HAVING COUNT(DISTINCT d.DocumentType) > 1\n), LawyersWithConsultations AS (\n    SELECT DISTINCT la.AdviceID, l.LawyerID\n    FROM LegalAdvice la\n    INNER JOIN Lawyer l ON la.LawyerID = l.LawyerID\n), LawyersWithMoreThanFourPayments AS (\n    SELECT l.LawyerID, COUNT(*) AS NumPayments\n    FROM Payment p\n    INNER JOIN Contract c ON p.ContractID = c.ContractID\n    INNER JOIN Lawyer l ON c.LawyerID = l.LawyerID\n    GROUP BY l.LawyerID\n    HAVING COUNT(*) > 4\n)\nSELECT TOP 5\n    CONCAT(p.FirstName, ' ', p.MiddleName, ' ', p.LastName) AS FullName,\n    l.ExperienceYears,\n    lw.NumPayments\nFROM Lawyer l\nINNER JOIN Person p ON l.PersonID = p.PersonID\nINNER JOIN LawyersWithMultipleTypesOfEvidence le ON l.LawyerID = le.LawyerID\nINNER JOIN LawyersWithDifferentDocumentTypes ld ON l.LawyerID = ld.LawyerID\nINNER JOIN LawyersWithConsultations lc ON l.LawyerID = lc.LawyerID\nINNER JOIN LawyersWithMoreThanFourPayments lw ON l.LawyerID = lw.LawyerID\nWHERE l.ExperienceYears > 6\nORDER BY lw.NumPayments DESC;",
            "gigachat_response_ru": "SELECT DISTINCT \n       CONCAT(p.FirstName, ' ', p.LastName) AS FullName,\n       COUNT(DISTINCT e.EvidenceType) AS NumEvidenceTypes,\n       COUNT(DISTINCT d.DocumentType) AS NumDocTypes,\n       COUNT(DISTINCT adv.AdviceType) AS NumAdvices,\n       COUNT(DISTINCT pmt.PaymentID) AS NumPayments\nFROM Lawyer lw\nJOIN Person p ON lw.PersonID = p.PersonID\nJOIN Cases c ON lw.LawyerID = c.LawyerID\nLEFT JOIN Evidence e ON c.CaseID = e.CaseID\nLEFT JOIN LegalDocument d ON c.CaseID = d.CaseID\nLEFT JOIN LegalAdvice adv ON lw.LawyerID = adv.LawyerID\nLEFT JOIN Contract ct ON lw.LawyerID = ct.LawyerID\nLEFT JOIN Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE lw.ExperienceYears > 6\nGROUP BY lw.LawyerID\nHAVING COUNT(DISTINCT e.EvidenceType) > 2\n   AND COUNT(DISTINCT pmt.PaymentID) > 4\nORDER BY COUNT(DISTINCT pmt.PaymentID) DESC\nLIMIT 5;"
        },
        {
            "question": "Найдите топ-7 судей, которые рассмотрели наибольшее количество гражданских дел за последние 2 года, имеющих более 3 документов и минимум 2 разбирательства, отсортированных по дате назначения судьи",
            "sql_query": "SELECT p.FirstName, p.LastName, j.AppointmentDate, COUNT(DISTINCT cs.CaseID) AS TotalCases, COUNT(DISTINCT ld.DocumentID) AS TotalDocuments, COUNT(DISTINCT h.HearingID) AS TotalHearings FROM Judge j JOIN Person p ON j.PersonID = p.PersonID JOIN Hearing h ON j.JudgeID = h.JudgeID JOIN Cases cs ON h.CaseID = cs.CaseID JOIN LegalDocument ld ON cs.CaseID = ld.CaseID WHERE cs.CaseType = 'Гражданское дело' AND cs.FilingDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR) GROUP BY p.FirstName, p.LastName, j.AppointmentDate HAVING COUNT(DISTINCT ld.DocumentID) > 3 AND COUNT(DISTINCT h.HearingID) >= 2 ORDER BY j.AppointmentDate, TotalCases DESC LIMIT 7;",
            "gpt-4o_response": "SELECT j.JudgeID, p.FirstName, p.LastName, COUNT(DISTINCT c.CaseID) AS CivilCaseCount, j.AppointmentDate\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE c.CaseType = 'Гражданское дело'\nAND c.FilingDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)\nGROUP BY j.JudgeID, p.FirstName, p.LastName, j.AppointmentDate\nHAVING COUNT(DISTINCT ld.DocumentID) > 3\nAND COUNT(DISTINCT CASE WHEN h.HearingType = 'Разбирательство' THEN h.HearingID END) >= 2\nORDER BY j.AppointmentDate\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.JudgeID, \n    j.AppointmentDate, \n    COUNT(DISTINCT c.CaseID) AS CivilCaseCount\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    c.CaseType = 'Гражданское дело'\n    AND c.FilingDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName, j.AppointmentDate\nHAVING \n    COUNT(DISTINCT ld.DocumentID) > 3\n    AND COUNT(DISTINCT h.HearingID) >= 2\nORDER BY \n    j.AppointmentDate\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    j.AppointmentDate,\n    COUNT(DISTINCT c.CaseID) AS TotalCivilCases\nFROM\n    Judge AS j\nJOIN\n    Person AS p ON j.PersonID = p.PersonID\nJOIN\n    Hearing AS h ON j.JudgeID = h.JudgeID\nJOIN\n    Cases AS c ON h.CaseID = c.CaseID\nJOIN\n    LegalDocument AS ld ON c.CaseID = ld.CaseID\nWHERE\n    c.CaseType = 'Гражданское дело'\n    AND c.FilingDate >= DATE('now', '-2 year')\nGROUP BY\n    p.FirstName,\n    p.LastName,\n    j.AppointmentDate,\n    c.CaseID\nHAVING\n    COUNT(DISTINCT ld.DocumentID) > 3\n    AND SUM(CASE WHEN h.HearingType = 'Разбирательство' THEN 1 ELSE 0 END) >= 2\nGROUP BY\n    p.FirstName,\n    p.LastName,\n    j.AppointmentDate\nORDER BY\n    j.AppointmentDate\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  j.AppointmentDate,\n  COUNT(DISTINCT c.CaseID) AS TotalCases\nFROM Judge AS j\nJOIN Person AS p\n  ON j.PersonID = p.PersonID\nJOIN Hearing AS h\n  ON j.JudgeID = h.JudgeID\nJOIN Cases AS c\n  ON h.CaseID = c.CaseID\nJOIN LegalDocument AS ld\n  ON c.CaseID = ld.CaseID\nWHERE\n  c.CaseType = 'Гражданское дело'\n  AND c.FilingDate >= DATE('now', '-2 year')\nGROUP BY\n  p.FirstName,\n  p.LastName,\n  j.AppointmentDate,\n  c.CaseID\nHAVING\n  COUNT(DISTINCT ld.DocumentID) > 3\n  AND SUM(CASE WHEN h.HearingType = 'Разбирательство' THEN 1 ELSE 0 END) >= 2\nGROUP BY\n  p.FirstName,\n  p.LastName,\n  j.AppointmentDate\nORDER BY\n  j.AppointmentDate\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    j.JudgeID,\n    p.FirstName,\n    p.LastName,\n    COUNT(DISTINCT c.CaseID) AS TotalCases,\n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments,\n    COUNT(DISTINCT h.HearingID) AS TotalHearings,\n    j.AppointmentDate\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    `Cases` c ON j.JudgeID = c.JudgeID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Гражданское дело'\n    AND c.FilingDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)\n    AND ld.DocumentType IN ('Исковое заявление', 'Постановление', 'Апелляционная жалоба')\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName, j.AppointmentDate\nHAVING \n    COUNT(DISTINCT ld.DocumentID) > 3\n    AND COUNT(DISTINCT h.HearingID) >= 2\nORDER BY \n    j.AppointmentDate\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    j.JudgeID,\n    p.FirstName,\n    p.LastName,\n    COUNT(DISTINCT c.CaseID) AS TotalCases,\n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments,\n    COUNT(DISTINCT h.HearingID) AS TotalHearings,\n    j.AppointmentDate\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Court ct ON j.CourtID = ct.CourtID\nJOIN \n    Cases c ON ct.CourtID = c.CourtID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Гражданское дело'\n    AND c.FilingDate > NOW() - INTERVAL 2 YEAR\n    AND ld.DocumentType IN ('Исковое заявление', 'Постановление', 'Апелляционная жалоба')\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName, j.AppointmentDate\nHAVING \n    COUNT(DISTINCT ld.DocumentID) > 3\n    AND COUNT(DISTINCT h.HearingID) >= 2\nORDER BY \n    j.AppointmentDate\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    j.AppointmentDate,\n    COUNT(DISTINCT c.CaseID) AS TotalCivilCases\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    (SELECT \n         CaseID, \n         COUNT(DocumentID) AS DocCount \n     FROM \n         LegalDocument \n     GROUP BY \n         CaseID \n     HAVING \n         COUNT(DocumentID) > 3\n    ) AS docs ON c.CaseID = docs.CaseID\nJOIN \n    (SELECT \n         CaseID, \n         COUNT(HearingID) AS HearingCount \n     FROM \n         Hearing \n     WHERE \n         HearingType = 'Разбирательство' \n     GROUP BY \n         CaseID \n     HAVING \n         COUNT(HearingID) >= 2\n    ) AS hearings ON c.CaseID = hearings.CaseID\nWHERE \n    c.CaseType = 'Гражданское дело'\n    AND c.FilingDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)\nGROUP BY \n    j.JudgeID, p.FirstName, p.LastName, j.AppointmentDate\nORDER BY \n    TotalCivilCases DESC, j.AppointmentDate\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT c.CaseID) AS TotalCivilCases,\n    COUNT(DISTINCT ld.DocumentID) AS TotalDocuments,\n    COUNT(DISTINCT h.HearingID) AS TotalHearings,\n    j.AppointmentDate\nFROM \n    Judge j\nJOIN \n    Person p ON j.PersonID = p.PersonID\nJOIN \n    Verdict v ON j.JudgeID = v.JudgeID\nJOIN \n    Cases c ON v.CaseID = c.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Гражданское дело'\n    AND c.FilingDate >= DATE_SUB(NOW(), INTERVAL 2 YEAR)\n    AND h.HearingType = 'Разбирательство'\nGROUP BY \n    p.FirstName, \n    p.LastName,\n    j.AppointmentDate\nHAVING \n    COUNT(DISTINCT ld.DocumentID) > 3\n    AND COUNT(DISTINCT h.HearingID) >= 2\nORDER BY \n    j.AppointmentDate DESC,\n    TotalCivilCases DESC\nLIMIT 7;",
            "gigachat_response": "SELECT j.JudgeID, CONCAT(p.FirstName, ' ', p.MiddleName, ' ', p.LastName) AS FullName, COUNT(c.CaseID) AS CivilCasesCount, j.AppointmentDate\nFROM Judge j\nJOIN Person p ON j.PersonID = p.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nWHERE c.CaseType = 'Гражданское дело'\nAND c.FilingDate >= DATE_SUB(NOW(), INTERVAL 2 YEAR)\nGROUP BY j.JudgeID\nHAVING COUNT(DISTINCT h.HearingID) >= 2\nAND (SELECT COUNT(*) FROM LegalDocument ld WHERE ld.CaseID = c.CaseID) > 3\nORDER BY j.AppointmentDate ASC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT j.JudgeID, CONCAT(p.FirstName, ' ', p.LastName) AS FullName, COUNT(c.CaseID) AS CivilCasesCount, j.AppointmentDate\nFROM Judge j\nINNER JOIN Person p ON j.PersonID = p.PersonID\nINNER JOIN Hearing h ON j.JudgeID = h.JudgeID\nINNER JOIN Cases c ON h.CaseID = c.CaseID\nWHERE c.CaseType = 'Гражданское дело'\nAND c.FilingDate >= NOW() - INTERVAL 2 YEAR\nGROUP BY j.JudgeID\nHAVING COUNT(DISTINCT ld.DocumentID) > 3 -- Проверка наличия более 3 документов\nAND COUNT(h.HearingID) >= 2 -- Минимум два разбирательства\nORDER BY j.AppointmentDate ASC\nLIMIT 7;"
        },
        {
            "question": "Определите топ-6 адвокатов из юридических фирм, основанных до 2005 года, которые вели дела с отклоненными апелляциями и общей суммой платежей более 7000, отсортированных по соотношению успешных решений к общему количеству дел",
            "sql_query": "SELECT p.FirstName, p.LastName, lf.FirmName, lf.EstablishedYear, SUM(pmt.Amount) AS TotalPayments, COUNT(DISTINCT v.VerdictID) AS SuccessfulVerdicts, COUNT(DISTINCT cs.CaseID) AS TotalCases, (COUNT(DISTINCT v.VerdictID) / COUNT(DISTINCT cs.CaseID)) AS SuccessRatio FROM Lawyer l JOIN Person p ON l.PersonID = p.PersonID JOIN LawFirm lf ON l.LawFirmID = lf.LawFirmID JOIN Cases cs ON l.LawyerID = cs.LawyerID JOIN Appeal a ON cs.CaseID = a.CaseID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Payment pmt ON ct.ContractID = pmt.ContractID LEFT JOIN Verdict v ON cs.CaseID = v.CaseID WHERE lf.EstablishedYear < 2005 AND a.AppealStatus = 'Отказано' GROUP BY p.FirstName, p.LastName, lf.FirmName, lf.EstablishedYear HAVING SUM(pmt.Amount) > 7000 ORDER BY SuccessRatio DESC, TotalPayments DESC LIMIT 6;",
            "gpt-4o_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    lf.FirmName, \n    COUNT(DISTINCT v.VerdictID) / COUNT(DISTINCT c.CaseID) AS SuccessRatio,\n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    LawFirm lf ON l.LawFirmID = lf.LawFirmID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    lf.EstablishedYear < 2005\n    AND a.AppealStatus = 'Отказано'\nGROUP BY \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    lf.FirmName\nHAVING \n    SUM(pmt.Amount) > 7000\nORDER BY \n    SuccessRatio DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    lf.FirmName, \n    COUNT(DISTINCT c.CaseID) AS TotalCases, \n    SUM(CASE WHEN v.VerdictType = 'Успешное' THEN 1 ELSE 0 END) / COUNT(DISTINCT c.CaseID) AS SuccessRatio\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    LawFirm lf ON l.LawFirmID = lf.LawFirmID\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nLEFT JOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    lf.EstablishedYear < 2005\n    AND a.AppealStatus = 'Отказано'\nGROUP BY \n    l.LawyerID\nHAVING \n    SUM(pmt.Amount) > 7000\nORDER BY \n    SuccessRatio DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    lf.FirmName,\n    CAST(SUM(CASE WHEN v.VerdictType IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT ca.CaseID) AS SuccessRatio\nFROM\n    Lawyer l\nJOIN\n    Person p ON l.PersonID = p.PersonID\nJOIN\n    LawFirm lf ON l.LawFirmID = lf.LawFirmID\nJOIN\n    Cases ca ON l.LawyerID = ca.LawyerID\nLEFT JOIN\n    Verdict v ON ca.CaseID = v.CaseID\nJOIN\n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN\n    Payment pay ON ct.ContractID = pay.ContractID\nLEFT JOIN\n    Appeal a ON ca.CaseID = a.CaseID\nWHERE\n    lf.EstablishedYear < 2005 AND a.AppealStatus = 'Отказано'\nGROUP BY\n    p.FirstName,\n    p.LastName,\n    lf.FirmName\nHAVING SUM(pay.Amount) > 7000\nORDER BY\n    SuccessRatio DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  lf.FirmName,\n  (\n    SUM(\n      CASE\n        WHEN v.VerdictType IS NOT NULL\n        THEN 1\n        ELSE 0\n      END\n    ) * 1.0\n  ) / COUNT(DISTINCT ca.CaseID) AS SuccessRatio,\n  SUM(pm.Amount) AS TotalPayments\nFROM Lawyer AS l\nJOIN Person AS p\n  ON l.PersonID = p.PersonID\nJOIN LawFirm AS lf\n  ON l.LawFirmID = lf.LawFirmID\nJOIN Cases AS ca\n  ON l.LawyerID = ca.LawyerID\nLEFT JOIN Verdict AS v\n  ON ca.CaseID = v.CaseID\nJOIN Contract AS co\n  ON l.LawyerID = co.LawyerID\nJOIN Payment AS pm\n  ON co.ContractID = pm.ContractID\nJOIN Appeal AS ap\n  ON ca.CaseID = ap.CaseID\nWHERE\n  lf.EstablishedYear < 2005 AND ap.AppealStatus = 'Отказано'\nGROUP BY\n  l.LawyerID,\n  p.FirstName,\n  p.LastName,\n  lf.FirmName\nHAVING\n  SUM(pm.Amount) > 7000\nORDER BY\n  SuccessRatio DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    l.LawyerID,\n    p.FirstName,\n    p.LastName,\n    lf.FirmName,\n    COUNT(DISTINCT c.CaseID) AS TotalCases,\n    SUM(CASE WHEN v.VerdictType = 'Уголовное Дело' AND v.Details LIKE '%признан виновным%' THEN 1 ELSE 0 END) AS SuccessfulVerdicts,\n    SUM(pmt.Amount) AS TotalPayments,\n    (SUM(CASE WHEN v.VerdictType = 'Уголовное Дело' AND v.Details LIKE '%признан виновным%' THEN 1 ELSE 0 END) / COUNT(DISTINCT c.CaseID)) AS SuccessRatio\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    LawFirm lf ON l.LawFirmID = lf.LawFirmID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    `Cases` c ON ct.ClientID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nWHERE \n    lf.EstablishedYear < 2005 AND \n    a.AppealStatus = 'Отказано'\nGROUP BY \n    l.LawyerID, p.FirstName, p.LastName, lf.FirmName\nHAVING \n    SUM(pmt.Amount) > 7000\nORDER BY \n    SuccessRatio DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    l.LawyerID,\n    p.FirstName,\n    p.LastName,\n    lf.FirmName,\n    SUM(CASE WHEN v.VerdictType = 'Уголовное Дело' AND v.Details LIKE '%признан виновным%' THEN 1 ELSE 0 END) AS SuccessfulVerdicts,\n    COUNT(DISTINCT c.CaseID) AS TotalCases,\n    SUM(pmt.Amount) AS TotalPayments,\n    (SUM(CASE WHEN v.VerdictType = 'Уголовное Дело' AND v.Details LIKE '%признан виновным%' THEN 1 ELSE 0 END) * 1.0 / COUNT(DISTINCT c.CaseID)) AS SuccessRatio\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    LawFirm lf ON l.LawFirmID = lf.LawFirmID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    `Cases` c ON ct.ClientID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nWHERE \n    lf.EstablishedYear < 2005 AND a.AppealStatus = 'Отказано'\nGROUP BY \n    l.LawyerID, p.FirstName, p.LastName, lf.FirmName\nHAVING \n    SUM(pmt.Amount) > 7000\nORDER BY \n    SuccessRatio DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName,\n    p.LastName,\n    l.LicenseNumber,\n    l.Specialization,\n    COUNT(DISTINCT v.CaseID) AS SuccessfulVerdicts,\n    COUNT(DISTINCT c.CaseID) AS TotalCases,\n    COUNT(DISTINCT v.CaseID) / COUNT(DISTINCT c.CaseID) AS SuccessRatio,\n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    LawFirm lf ON l.LawFirmID = lf.LawFirmID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID AND v.VerdictType NOT LIKE '%Отказано%'\nJOIN \n    `Contract` ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    lf.EstablishedYear < 2005\n    AND a.AppealStatus = 'Отказано'\nGROUP BY \n    p.FirstName, p.LastName, l.LicenseNumber, l.Specialization\nHAVING \n    SUM(pmt.Amount) > 7000\nORDER BY \n    SuccessRatio DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName,\n    p.LastName,\n    l.Specialization,\n    COUNT(DISTINCT v.CaseID) AS TotalCases,\n    COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Отказано' THEN v.CaseID END) AS RejectedAppeals,\n    CASE \n        WHEN COUNT(DISTINCT v.CaseID) > 0 THEN \n            ROUND(COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Отказано' THEN v.CaseID END) / COUNT(DISTINCT v.CaseID), 2) \n        ELSE 0 \n    END AS SuccessRatio,\n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Lawyer l\nJOIN \n    LawFirm lf ON l.LawFirmID = lf.LawFirmID\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nLEFT JOIN \n    Verdict v ON c.CaseID = v.CaseID\nLEFT JOIN \n    Appeal a ON c.CaseID = a.CaseID AND a.AppealStatus = 'Отказано'\nLEFT JOIN \n    `Contract` ct ON l.LawyerID = ct.LawyerID\nLEFT JOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    lf.EstablishedYear < 2005\nGROUP BY \n    p.FirstName, p.LastName, l.Specialization\nHAVING \n    SUM(pmt.Amount) > 7000\nORDER BY \n    SuccessRatio DESC\nLIMIT 6;",
            "gigachat_response": "WITH RejectedAppeals AS (\n    SELECT DISTINCT c.CaseID\n    FROM Appeal a\n    JOIN Cases c ON a.CaseID = c.CaseID\n    WHERE a.AppealStatus = 'Отказано'\n), SuccessfulVerdicts AS (\n    SELECT v.JudgeID, COUNT(*) AS SuccessCount\n    FROM Verdict v\n    WHERE v.VerdictType IN ('Уголовное Дело', 'Гражданское Дело')\n      AND v.Details LIKE '%признан%'\n    GROUP BY v.JudgeID\n), AllCases AS (\n    SELECT l.LawyerID, COUNT(*) AS TotalCases\n    FROM Cases c\n    JOIN Lawyer l ON c.LawyerID = l.LawyerID\n    GROUP BY l.LawyerID\n), PaymentsByLawyers AS (\n    SELECT l.LawyerID, SUM(p.Amount) AS TotalPayment\n    FROM Lawyer l\n    JOIN Contract ct ON l.LawyerID = ct.LawyerID\n    JOIN Payment p ON ct.ContractID = p.ContractID\n    GROUP BY l.LawyerID\n), FinalResult AS (\n    SELECT \n        p.FirstName || ' ' || p.MiddleName || ' ' || p.LastName AS FullName,\n        l.LicenseNumber,\n        lf.FirmName,\n        COALESCE(SuccessfulVerdicts.SuccessCount, 0) / CAST(AllCases.TotalCases AS FLOAT) * 100 AS SuccessRate,\n        PaymentsByLawyers.TotalPayment\n    FROM Lawyer l\n    JOIN Person p ON l.PersonID = p.PersonID\n    JOIN LawFirm lf ON l.LawFirmID = lf.LawFirmID\n    LEFT JOIN SuccessfulVerdicts ON l.LawyerID = SuccessfulVerdicts.JudgeID\n    JOIN AllCases ON l.LawyerID = AllCases.LawyerID\n    JOIN PaymentsByLawyers ON l.LawyerID = PaymentsByLawyers.LawyerID\n    WHERE lf.EstablishedYear < 2005\n      AND l.LawyerID IN (SELECT LawyerID FROM Cases WHERE CaseID IN (SELECT CaseID FROM RejectedAppeals))\n      AND PaymentsByLawyers.TotalPayment > 7000\n)\nSELECT *\nFROM FinalResult\nORDER BY SuccessRate DESC\nLIMIT 6;",
            "gigachat_response_ru": "WITH RejectedAppeals AS (\n    SELECT DISTINCT c.CaseID\n    FROM Appeal a\n    JOIN Cases c ON a.CaseID = c.CaseID\n    WHERE a.AppealStatus = 'Отказано'\n), SuccessfulVerdicts AS (\n    SELECT v.JudgeID, COUNT(*) AS SuccessCount\n    FROM Verdict v\n    WHERE v.VerdictType IN ('Признан невиновным', 'Решение в пользу истца')\n    GROUP BY v.JudgeID\n), AllCasesPerLawyer AS (\n    SELECT l.LawyerID, COUNT(c.CaseID) AS TotalCases\n    FROM Lawyer l\n    LEFT JOIN Cases c ON l.LawyerID = c.LawyerID\n    GROUP BY l.LawyerID\n), PaymentsByLawyers AS (\n    SELECT l.LawyerID, SUM(p.Amount) AS TotalPayment\n    FROM Lawyer l\n    JOIN Contract c ON l.LawyerID = c.LawyerID\n    JOIN Payment p ON c.ContractID = p.ContractID\n    GROUP BY l.LawyerID\n    HAVING SUM(p.Amount) > 7000\n), FinalResult AS (\n    SELECT \n        CONCAT(p.FirstName, ' ', p.MiddleName, ' ', p.LastName) AS FullName,\n        l.LicenseNumber,\n        lf.FirmName,\n        COALESCE(SuccessfulVerdicts.SuccessCount / NULLIF(AllCasesPerLawyer.TotalCases, 0), 0) * 100 AS SuccessRate,\n        PaymentsByLawyers.TotalPayment\n    FROM Lawyer l\n    JOIN Person p ON l.PersonID = p.PersonID\n    JOIN LawFirm lf ON l.LawFirmID = lf.LawFirmID\n    JOIN RejectedAppeals ra ON l.LawyerID = ra.CaseID\n    JOIN PaymentsByLawyers ON l.LawyerID = PaymentsByLawyers.LawyerID\n    LEFT JOIN SuccessfulVerdicts ON l.LawyerID = SuccessfulVerdicts.JudgeID\n    LEFT JOIN AllCasesPerLawyer ON l.LawyerID = AllCasesPerLawyer.LawyerID\n    WHERE lf.EstablishedYear < 2005\n)\nSELECT *\nFROM FinalResult\nORDER BY SuccessRate DESC\nLIMIT 6;"
        },
        {
            "question": "Выявите топ-5 судов с наибольшим процентом удовлетворенных апелляций по уголовным делам, где сумма платежей адвокатам превышает 12000 и имеется более 3 типов доказательств, отсортированных по проценту удовлетворенных апелляций",
            "sql_query": "SELECT c.CourtName, c.CourtType, COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) AS AcceptedAppeals, COUNT(DISTINCT a.AppealID) AS TotalAppeals, (COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) / COUNT(DISTINCT a.AppealID) * 100) AS AcceptanceRate, SUM(pmt.Amount) AS TotalPayments, COUNT(DISTINCT e.EvidenceType) AS EvidenceTypes FROM Court c JOIN Cases cs ON c.CourtID = cs.CourtID JOIN Appeal a ON cs.CaseID = a.CaseID JOIN Verdict v ON cs.CaseID = v.CaseID JOIN Evidence e ON cs.CaseID = e.CaseID JOIN Contract ct ON cs.LawyerID = ct.LawyerID JOIN Payment pmt ON ct.ContractID = pmt.ContractID WHERE v.VerdictType = 'Уголовное Дело' GROUP BY c.CourtName, c.CourtType HAVING SUM(pmt.Amount) > 12000 AND COUNT(DISTINCT e.EvidenceType) > 3 ORDER BY AcceptanceRate DESC, TotalPayments DESC LIMIT 5;",
            "gpt-4o_response": "SELECT \n    crt.CourtName,\n    COUNT(DISTINCT a.AppealID) AS TotalAppeals,\n    COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) AS ApprovedAppeals,\n    ROUND((COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) / COUNT(DISTINCT a.AppealID)) * 100, 2) AS ApprovalPercentage\nFROM \n    Court crt\nJOIN \n    Cases c ON crt.CourtID = c.CourtID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    c.CaseType = 'Уголовное дело'\n    AND pmt.Amount > 12000\nGROUP BY \n    crt.CourtName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 3\nORDER BY \n    ApprovalPercentage DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT \n    crt.CourtName,\n    COUNT(DISTINCT a.AppealID) AS TotalAppeals,\n    COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) AS ApprovedAppeals,\n    ROUND((COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) / COUNT(DISTINCT a.AppealID)) * 100, 2) AS ApprovalPercentage\nFROM \n    Court crt\nJOIN \n    Cases c ON crt.CourtID = c.CourtID\nJOIN \n    Appeal a ON c.CaseID = a.CaseID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nWHERE \n    c.CaseType = 'Уголовное дело'\n    AND pmt.Amount > 12000\nGROUP BY \n    crt.CourtName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 3\nORDER BY \n    ApprovalPercentage DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.CourtName,\n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) * 100.0 / COUNT(a.AppealID) AS PercentageAppealsAccepted\nFROM\n    Court c\nJOIN\n    Cases ca ON c.CourtID = ca.CourtID\nJOIN\n    Appeal a ON ca.CaseID = a.CaseID\nJOIN\n    Contract ct ON ca.LawyerID = ct.LawyerID\nJOIN\n    Payment p ON ct.ContractID = p.ContractID\nJOIN\n    Evidence e ON ca.CaseID = e.CaseID\nWHERE\n    ca.CaseType = 'Уголовное дело'\nGROUP BY\n    c.CourtName\nHAVING\n    SUM(p.Amount) > 12000 AND COUNT(DISTINCT e.EvidenceType) > 3\nORDER BY\n    PercentageAppealsAccepted DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    c.CourtName,\n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) * 100.0 / COUNT(a.AppealID) AS PercentageAppealsAccepted\nFROM Court c\nJOIN Cases ca ON c.CourtID = ca.CourtID\nJOIN Appeal a ON ca.CaseID = a.CaseID\nJOIN Lawyer l ON ca.LawyerID = l.LawyerID\nJOIN Contract ct ON l.LawyerID = ct.LawyerID\nJOIN Payment p ON ct.ContractID = p.ContractID\nJOIN Evidence e ON ca.CaseID = e.CaseID\nWHERE ca.CaseType = 'Уголовное дело'\nGROUP BY c.CourtName\nHAVING SUM(p.Amount) > 12000 AND COUNT(DISTINCT e.EvidenceType) > 3\nORDER BY PercentageAppealsAccepted DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    c.CourtName, \n    COUNT(DISTINCT a.AppealID) AS TotalAppeals, \n    COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) AS AcceptedAppeals,\n    ROUND(COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) / COUNT(DISTINCT a.AppealID) * 100, 2) AS PercentageAccepted,\n    SUM(pmt.Amount) AS TotalPayments\nFROM \n    Court c\nJOIN \n    Cases cs ON c.CourtID = cs.CourtID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nJOIN \n    Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nWHERE \n    cs.CaseType = 'Уголовное дело' \n    AND pmt.Amount > 12000\n    AND cs.CaseID IN (\n        SELECT \n            CaseID \n        FROM \n            Evidence \n        GROUP BY \n            CaseID \n        HAVING \n            COUNT(DISTINCT EvidenceType) > 3\n    )\nGROUP BY \n    c.CourtName\nORDER BY \n    PercentageAccepted DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.CourtName, \n    COUNT(DISTINCT a.AppealID) AS TotalAppeals, \n    SUM(IF(a.AppealStatus = 'Принято', 1, 0)) / COUNT(DISTINCT a.AppealID) * 100 AS PercentAccepted,\n    SUM(p.Amount) AS TotalPayments,\n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes\nFROM \n    Court c\nJOIN \n    `Cases` cs ON c.CourtID = cs.CourtID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nJOIN \n    Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN \n    Payment p ON ct.ContractID = p.ContractID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nWHERE \n    cs.CaseType = 'Уголовное дело' \n    AND p.Amount > 12000 \n    AND e.EvidenceType IS NOT NULL\nGROUP BY \n    c.CourtName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 3\nORDER BY \n    PercentAccepted DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    c.CourtName,\n    COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) * 100.0 / COUNT(DISTINCT a.AppealID) AS AppealSuccessRate\nFROM \n    Court c\nJOIN \n    `Cases` cs ON c.CourtID = cs.CourtID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nJOIN \n    Contract ct ON cs.LawyerID = ct.LawyerID\nJOIN \n    Payment p ON ct.ContractID = p.ContractID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nWHERE \n    cs.CaseType = 'Уголовное дело'\n    AND p.Amount > 12000\nGROUP BY \n    c.CourtID, c.CourtName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) > 3\nORDER BY \n    AppealSuccessRate DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "WITH AppealStats AS (\n    SELECT \n        c.CourtID,\n        co.CourtName,\n        COUNT(a.AppealID) AS TotalAppeals,\n        SUM(CASE WHEN a.AppealStatus = 'Принято' THEN 1 ELSE 0 END) AS AcceptedAppeals,\n        (SUM(CASE WHEN a.AppealStatus = 'Принято' THEN 1 ELSE 0 END) / COUNT(a.AppealID)) * 100 AS AcceptancePercentage\n    FROM \n        `Cases` c\n    JOIN \n        Appeal a ON c.CaseID = a.CaseID\n    JOIN \n        Court co ON c.CourtID = co.CourtID\n    WHERE \n        c.CaseType = 'Уголовное дело'\n    GROUP BY \n        c.CourtID, co.CourtName\n),\nPaymentStats AS (\n    SELECT \n        c.CourtID,\n        SUM(p.Amount) AS TotalPayments\n    FROM \n        `Cases` cs\n    JOIN \n        Lawyer l ON cs.LawyerID = l.LawyerID\n    JOIN \n        `Contract` ct ON l.LawyerID = ct.LawyerID\n    JOIN \n        Payment p ON ct.ContractID = p.ContractID\n    JOIN \n        Court c ON cs.CourtID = c.CourtID\n    WHERE \n        cs.CaseType = 'Уголовное дело'\n    GROUP BY \n        c.CourtID\n    HAVING \n        SUM(p.Amount) > 12000\n),\nEvidenceStats AS (\n    SELECT \n        c.CourtID,\n        COUNT(DISTINCT e.EvidenceType) AS EvidenceTypesCount\n    FROM \n        `Cases` cs\n    JOIN \n        Evidence e ON cs.CaseID = e.CaseID\n    JOIN \n        Court c ON cs.CourtID = c.CourtID\n    WHERE \n        cs.CaseType = 'Уголовное дело'\n    GROUP BY \n        c.CourtID\n    HAVING \n        COUNT(DISTINCT e.EvidenceType) > 3\n)\nSELECT \n    a.CourtName,\n    a.AcceptancePercentage\nFROM \n    AppealStats a\nJOIN \n    PaymentStats p ON a.CourtID = p.CourtID\nJOIN \n    EvidenceStats e ON a.CourtID = e.CourtID\nORDER BY \n    a.AcceptancePercentage DESC\nLIMIT 5;",
            "gigachat_response": "WITH CriminalAppeals AS (\n    -- Подсчет количества успешных апелляций по каждому суду\n    SELECT c.CourtID, COUNT(*) AS SuccessfulAppeals\n    FROM Appeal a\n    JOIN Cases ca ON a.CaseID = ca.CaseID\n    JOIN Court c ON ca.CourtID = c.CourtID\n    WHERE a.AppealStatus = 'Принято'\n      AND ca.CaseType = 'Уголовное дело'\n    GROUP BY c.CourtID\n), AllAppeals AS (\n    -- Общее количество апелляций по каждому суду\n    SELECT c.CourtID, COUNT(*) AS TotalAppeals\n    FROM Appeal a\n    JOIN Cases ca ON a.CaseID = ca.CaseID\n    JOIN Court c ON ca.CourtID = c.CourtID\n    WHERE ca.CaseType = 'Уголовное дело'\n    GROUP BY c.CourtID\n), PaymentsByCourts AS (\n    -- Суммы платежей адвокату по каждому суду\n    SELECT c.CourtID, SUM(p.Amount) AS TotalPayment\n    FROM Payment p\n    JOIN Contract co ON p.ContractID = co.ContractID\n    JOIN Lawyer lw ON co.LawyerID = lw.LawyerID\n    JOIN Cases ca ON lw.LawyerID = ca.LawyerID\n    JOIN Court c ON ca.CourtID = c.CourtID\n    GROUP BY c.CourtID\n), EvidencesByCourts AS (\n    -- Количество различных видов доказательств по каждому суду\n    SELECT e.CaseID, COUNT(DISTINCT e.EvidenceType) AS NumOfEvidences\n    FROM Evidence e\n    JOIN Cases ca ON e.CaseID = ca.CaseID\n    GROUP BY e.CaseID\n), CourtsWithCriteria AS (\n    -- Объединение всех необходимых условий\n    SELECT cr.CourtID, cr.CourtName, \n           COALESCE(SuccessfulAppeals.SuccessfulAppeals, 0) AS SuccessCount,\n           COALESCE(AllAppeals.TotalAppeals, 0) AS TotalAppeals,\n           CASE WHEN AllAppeals.TotalAppeals != 0 THEN CAST((SuccessfulAppeals.SuccessfulAppeals * 100 / AllAppeals.TotalAppeals) AS DECIMAL(5,2)) ELSE NULL END AS SuccessRate,\n           PaymentsByCourts.TotalPayment,\n           E.NumOfEvidences\n    FROM Court cr\n    LEFT JOIN CriminalAppeals ON cr.CourtID = CriminalAppeals.CourtID\n    LEFT JOIN AllAppeals ON cr.CourtID = AllAppeals.CourtID\n    LEFT JOIN PaymentsByCourts ON cr.CourtID = PaymentsByCourts.CourtID\n    INNER JOIN (\n        SELECT DISTINCT CaseID, MAX(NumOfEvidences) OVER(PARTITION BY CaseID) AS NumOfEvidences\n        FROM EvidencesByCourts\n    ) E ON cr.CourtID IN (SELECT CourtID FROM Cases WHERE CaseID = E.CaseID)\n    WHERE PaymentsByCourts.TotalPayment > 12000\n      AND E.NumOfEvidences >= 3\n)\n-- Итоговый результат\nSELECT CourtName, SuccessRate\nFROM CourtsWithCriteria\nORDER BY SuccessRate DESC\nLIMIT 5;",
            "gigachat_response_ru": "WITH CriminalAppeals AS (\n    SELECT c.CourtID, v.VerdictID, a.AppealID, a.AppealStatus\n    FROM Cases c\n    INNER JOIN Verdict v ON c.CaseID = v.CaseID\n    INNER JOIN Appeal a ON c.CaseID = a.CaseID\n    WHERE c.CaseType = 'Уголовное дело'\n), \nPaymentSums AS (\n    SELECT c.CourtID, SUM(p.Amount) AS TotalPayment\n    FROM Cases c\n    INNER JOIN Lawyer l ON c.LawyerID = l.LawyerID\n    INNER JOIN Contract co ON l.LawyerID = co.LawyerID\n    INNER JOIN Payment p ON co.ContractID = p.ContractID\n    GROUP BY c.CourtID\n), \nEvidenceCounts AS (\n    SELECT e.CourtID, COUNT(e.EvidenceID) AS NumOfEvidenceTypes\n    FROM Cases c\n    INNER JOIN Evidence e ON c.CaseID = e.CaseID\n    GROUP BY e.CourtID\n), \nSatisfiedAppeals AS (\n    SELECT ca.CourtID, COUNT(*) AS SatisfiedCount\n    FROM CriminalAppeals ca\n    WHERE ca.AppealStatus = 'Принято'\n    GROUP BY ca.CourtID\n), \nTotalAppeals AS (\n    SELECT ca.CourtID, COUNT(*) AS TotalAppealsCount\n    FROM CriminalAppeals ca\n    GROUP BY ca.CourtID\n)\nSELECT cr.CourtName, \n       ROUND((sa.SatisfiedCount * 100.0 / ta.TotalAppealsCount), 2) AS SatisfactionPercentage\nFROM Court cr\nINNER JOIN SatisfiedAppeals sa ON cr.CourtID = sa.CourtID\nINNER JOIN TotalAppeals ta ON cr.CourtID = ta.CourtID\nINNER JOIN PaymentSums ps ON cr.CourtID = ps.CourtID\nINNER JOIN EvidenceCounts ec ON cr.CourtID = ec.CourtID\nWHERE ps.TotalPayment > 12000 AND ec.NumOfEvidenceTypes > 3\nORDER BY SatisfactionPercentage DESC\nLIMIT 5;"
        },
        {
            "question": "Определите топ-4 юридические фирмы, чьи адвокаты имеют наивысшее соотношение успешных дел к общему количеству дел, с минимальным опытом адвокатов более 5 лет и наличием специализации в корпоративном или интеллектуальном праве, отсортированных по году основания фирмы",
            "sql_query": "SELECT lf.FirmName, lf.EstablishedYear, AVG(l.ExperienceYears) AS AvgExperience, COUNT(DISTINCT CASE WHEN v.Details LIKE '%в пользу%' OR v.Details LIKE '%удовлетворено%' THEN v.VerdictID END) AS SuccessfulCases, COUNT(DISTINCT v.VerdictID) AS TotalCases, (COUNT(DISTINCT CASE WHEN v.Details LIKE '%в пользу%' OR v.Details LIKE '%удовлетворено%' THEN v.VerdictID END) / COUNT(DISTINCT v.VerdictID) * 100) AS SuccessRate FROM LawFirm lf JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID JOIN Cases cs ON l.LawyerID = cs.LawyerID JOIN Verdict v ON cs.CaseID = v.CaseID WHERE l.Specialization IN ('Корпоративное право', 'Интеллектуальная собственность') GROUP BY lf.FirmName, lf.EstablishedYear HAVING AVG(l.ExperienceYears) > 5 ORDER BY lf.EstablishedYear, SuccessRate DESC LIMIT 4;",
            "gpt-4o_response": "SELECT lf.FirmName, \n       COUNT(CASE WHEN c.Status = 'Закрыто' THEN 1 END) / COUNT(c.CaseID) AS SuccessRate, \n       lf.EstablishedYear\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nWHERE l.ExperienceYears > 5 \n  AND (l.Specialization = 'Корпоративное право' OR l.Specialization = 'Интеллектуальная собственность')\nGROUP BY lf.FirmName, lf.EstablishedYear\nORDER BY SuccessRate DESC, lf.EstablishedYear\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT lf.FirmName, \n       COUNT(DISTINCT c.CaseID) AS TotalCases, \n       COUNT(DISTINCT CASE WHEN c.Status = 'Закрыто' THEN c.CaseID END) AS SuccessfulCases, \n       COUNT(DISTINCT CASE WHEN c.Status = 'Закрыто' THEN c.CaseID END) / COUNT(DISTINCT c.CaseID) AS SuccessRatio, \n       lf.EstablishedYear\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nWHERE l.ExperienceYears > 5 \n  AND (l.Specialization = 'Корпоративное право' OR l.Specialization = 'Интеллектуальная собственность')\nGROUP BY lf.FirmName, lf.EstablishedYear\nORDER BY SuccessRatio DESC, lf.EstablishedYear\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    lf.FirmName,\n    lf.EstablishedYear,\n    CAST(SUM(CASE WHEN v.VerdictID IS NOT NULL THEN 1 ELSE 0 END) AS REAL) / COUNT(DISTINCT c.CaseID) AS SuccessRatio\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nLEFT JOIN Verdict v ON c.CaseID = v.CaseID\nWHERE l.ExperienceYears > 5\n  AND (l.Specialization = 'Корпоративное право' OR l.Specialization = 'Интеллектуальная собственность')\nGROUP BY lf.FirmName, lf.EstablishedYear\nHAVING COUNT(DISTINCT c.CaseID) > 0\nORDER BY SuccessRatio DESC, lf.EstablishedYear\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    lf.FirmName,\n    lf.EstablishedYear,\n    CAST(SUM(CASE WHEN c.Status = 'Закрыто' THEN 1 ELSE 0 END) AS REAL) / COUNT(c.CaseID) AS SuccessRatio\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nWHERE l.ExperienceYears > 5\n  AND (l.Specialization = 'Корпоративное право' OR l.Specialization = 'Интеллектуальная собственность')\nGROUP BY lf.FirmName, lf.EstablishedYear\nORDER BY lf.EstablishedYear\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    lf.FirmName, \n    lf.EstablishedYear, \n    COUNT(DISTINCT c.CaseID) AS TotalCases, \n    SUM(IF(v.VerdictType = 'Уголовное Дело' OR v.VerdictType = 'Гражданское Дело' OR v.VerdictType = 'Административное Дело', 1, 0)) AS SuccessfulCases, \n    SUM(IF(v.VerdictType = 'Уголовное Дело' OR v.VerdictType = 'Гражданское Дело' OR v.VerdictType = 'Административное Дело', 1, 0)) / COUNT(DISTINCT c.CaseID) AS SuccessRatio\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    l.ExperienceYears > 5 AND \n    (l.Specialization = 'Корпоративное право' OR l.Specialization = 'Интеллектуальная собственность')\nGROUP BY \n    lf.FirmName, lf.EstablishedYear\nORDER BY \n    SuccessRatio DESC, lf.EstablishedYear\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    lf.FirmName, \n    lf.EstablishedYear, \n    COUNT(DISTINCT c.CaseID) AS TotalCases, \n    SUM(IF(v.VerdictType = 'Уголовное Дело' AND v.Details LIKE '%признан виновным%', 1, 0)) AS SuccessfulCases, \n    SUM(IF(v.VerdictType = 'Уголовное Дело' AND v.Details LIKE '%признан виновным%', 1, 0)) / COUNT(DISTINCT c.CaseID) AS SuccessRate\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    l.ExperienceYears > 5 \n    AND l.Specialization IN ('Корпоративное право', 'Интеллектуальная собственность')\nGROUP BY \n    lf.FirmName, lf.EstablishedYear\nORDER BY \n    SuccessRate DESC, lf.EstablishedYear\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT lf.FirmName, \n       COUNT(DISTINCT CASE WHEN v.VerdictType = 'Гражданское Дело' OR v.VerdictType = 'Экономическое Дело' THEN c.CaseID END) * 100.0 / COUNT(DISTINCT c.CaseID) AS SuccessRatio,\n       lf.EstablishedYear\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN `Cases` c ON l.LawyerID = c.LawyerID\nLEFT JOIN Verdict v ON c.CaseID = v.CaseID\nWHERE l.ExperienceYears > 5 \nAND (l.Specialization = 'Корпоративное право' OR l.Specialization = 'Интеллектуальная собственность')\nGROUP BY lf.FirmName, lf.EstablishedYear\nHAVING COUNT(DISTINCT c.CaseID) > 0\nORDER BY SuccessRatio DESC, lf.EstablishedYear\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    lf.FirmName, \n    lf.EstablishedYear,\n    COUNT(DISTINCT CASE WHEN v.VerdictID IS NOT NULL THEN c.CaseID END) AS SuccessfulCases,\n    COUNT(DISTINCT c.CaseID) AS TotalCases,\n    CASE \n        WHEN COUNT(DISTINCT c.CaseID) = 0 THEN 0 \n        ELSE COUNT(DISTINCT CASE WHEN v.VerdictID IS NOT NULL THEN c.CaseID END) / COUNT(DISTINCT c.CaseID) \n    END AS SuccessRatio\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nLEFT JOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    l.ExperienceYears > 5\n    AND (l.Specialization = 'Корпоративное право' OR l.Specialization = 'Интеллектуальная собственность')\nGROUP BY \n    lf.FirmName, lf.EstablishedYear\nORDER BY \n    SuccessRatio DESC, lf.EstablishedYear\nLIMIT 4;",
            "gigachat_response": "WITH Successful_Cases AS (\n    SELECT c.CaseID, c.Status, l.LawyerID\n    FROM Cases c\n    INNER JOIN Lawyer l ON c.LawyerID = l.LawyerID\n    WHERE c.`Status` IN ('Закрыто', 'Решено')\n), \nTotal_Cases AS (\n    SELECT c.CaseID, c.Status, l.LawyerID\n    FROM Cases c\n    INNER JOIN Lawyer l ON c.LawyerID = l.LawyerID\n), \nSuccess_Ratio AS (\n    SELECT \n        l.LawyerID,\n        COUNT(sc.CaseID) / CAST(COUNT(tc.CaseID) AS FLOAT) * 100 AS SuccessRate\n    FROM Lawyer l\n    LEFT JOIN Successful_Cases sc ON l.LawyerID = sc.LawyerID\n    LEFT JOIN Total_Cases tc ON l.LawyerID = tc.LawyerID\n    WHERE l.ExperienceYears >= 5 AND l.Specialization IN ('Корпоративное право', 'Интеллектуальная собственность')\n    GROUP BY l.LawyerID\n), \nTop_Firms AS (\n    SELECT \n        lf.LawFirmID, \n        lf.FirmName, \n        lf.EstablishedYear,\n        AVG(sr.SuccessRate) AS AverageSuccessRate\n    FROM LawFirm lf\n    INNER JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\n    INNER JOIN Success_Ratio sr ON l.LawyerID = sr.LawyerID\n    GROUP BY lf.LawFirmID, lf.FirmName, lf.EstablishedYear\n    ORDER BY AverageSuccessRate DESC\n    LIMIT 4\n)\nSELECT *\nFROM Top_Firms\nORDER BY EstablishedYear ASC;",
            "gigachat_response_ru": "WITH Successful_Cases AS (\n    SELECT c.CaseID, v.VerdictType\n    FROM Cases c\n    LEFT JOIN Verdict v ON c.CaseID = v.CaseID\n    WHERE v.VerdictType IN ('Признан невиновным', 'Победа')\n), \nTotal_Cases AS (\n    SELECT l.LawyerID, COUNT(c.CaseID) AS TotalCases\n    FROM Lawyer l\n    INNER JOIN Cases c ON l.LawyerID = c.LawyerID\n    GROUP BY l.LawyerID\n), \nSuccessful_Ratio AS (\n    SELECT l.LawyerID, \n           COALESCE(SUM(CASE WHEN sc.VerdictType IS NOT NULL THEN 1 ELSE 0 END)::FLOAT / t.TotalCases::FLOAT, 0) AS SuccessRatio\n    FROM Lawyer l\n    LEFT JOIN Successful_Cases sc ON l.LawyerID = sc.CaseID\n    INNER JOIN Total_Cases t ON l.LawyerID = t.LawyerID\n    WHERE l.ExperienceYears >= 5 AND l.Specialization IN ('Корпоративное право', 'Интеллектуальная собственность')\n    GROUP BY l.LawyerID, t.TotalCases\n), \nTop_Lawyers AS (\n    SELECT l.LawyerID, s.SuccessRatio\n    FROM Lawyer l\n    INNER JOIN Successful_Ratio s ON l.LawyerID = s.LawyerID\n    ORDER BY s.SuccessRatio DESC\n    LIMIT 4\n), \nFinal_Result AS (\n    SELECT DISTINCT lf.*\n    FROM Top_Lawyers tl\n    INNER JOIN Lawyer l ON tl.LawyerID = l.LawyerID\n    INNER JOIN LawFirm lf ON l.LawFirmID = lf.LawFirmID\n)\nSELECT * FROM Final_Result ORDER BY EstablishedYear ASC;"
        },
        {
            "question": "Определите топ-9 самых разнообразных наборов доказательств по налоговым преступлениям, с указанием дел, имеющих не менее 3 различных типов доказательств, у которых срок между подачей и последним слушанием превышает 90 дней, отсортированных по количеству различных типов доказательств",
            "sql_query": "SELECT cs.CaseNumber, cs.CaseType, cs.FilingDate, MAX(h.HearingDate) AS LastHearingDate, DATEDIFF(MAX(h.HearingDate), cs.FilingDate) AS DaysInProcess, COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes, GROUP_CONCAT(DISTINCT e.EvidenceType ORDER BY e.EvidenceType SEPARATOR ', ') AS EvidenceList FROM Cases cs JOIN Evidence e ON cs.CaseID = e.CaseID JOIN Hearing h ON cs.CaseID = h.CaseID WHERE cs.CaseType = 'Налоговое преступление' GROUP BY cs.CaseNumber, cs.CaseType, cs.FilingDate HAVING COUNT(DISTINCT e.EvidenceType) >= 3 AND DATEDIFF(MAX(h.HearingDate), cs.FilingDate) > 90 ORDER BY UniqueEvidenceTypes DESC, DaysInProcess DESC LIMIT 9;",
            "gpt-4o_response": "SELECT \n    c.CaseNumber,\n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes,\n    DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) AS DaysBetweenSubmissionAndLastHearing\nFROM \n    Cases c\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Налоговое преступление'\nGROUP BY \n    c.CaseID, c.CaseNumber\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 3 \n    AND DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) > 90\nORDER BY \n    UniqueEvidenceTypes DESC\nLIMIT 9;",
            "gpt-4o_response_ru": "SELECT \n    c.CaseNumber,\n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes,\n    DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) AS DaysBetween\nFROM \n    Cases c\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Налоговое преступление'\nGROUP BY \n    c.CaseID, c.CaseNumber\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 3 AND\n    DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) > 90\nORDER BY \n    UniqueEvidenceTypes DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    c.CaseNumber,\n    COUNT(DISTINCT e.EvidenceType) AS DistinctEvidenceTypes\nFROM\n    Cases c\nJOIN\n    Evidence e ON c.CaseID = e.CaseID\nJOIN\n    Hearing h ON c.CaseID = h.CaseID\nWHERE\n    c.CaseType = 'Налоговое преступление'\nGROUP BY\n    c.CaseNumber\nHAVING\n    COUNT(DISTINCT e.EvidenceType) >= 3\n    AND JULIANDAY(h.HearingDate) - JULIANDAY(c.FilingDate) > 90\nORDER BY\n    DistinctEvidenceTypes DESC\nLIMIT 9;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  c.CaseNumber,\n  COUNT(DISTINCT e.EvidenceType) AS NumberOfEvidenceTypes\nFROM Cases AS c\nJOIN Evidence AS e\n  ON c.CaseID = e.CaseID\nJOIN Hearing AS h\n  ON c.CaseID = h.CaseID\nWHERE\n  c.CaseType = 'Налоговое преступление'\n  AND c.FilingDate < h.HearingDate\nGROUP BY\n  c.CaseNumber\nHAVING\n  COUNT(DISTINCT e.EvidenceType) >= 3\n  AND DATEDIFF(MAX(h.HearingDate), c.FilingDate) > 90\nORDER BY\n  NumberOfEvidenceTypes DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    c.CaseNumber, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes, \n    DATEDIFF(h.HearingDate, c.FilingDate) AS DaysBetweenFilingAndHearing\nFROM \n    Cases c\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Налоговое преступление'\n    AND DATEDIFF(h.HearingDate, c.FilingDate) > 90\nGROUP BY \n    c.CaseNumber, c.FilingDate, h.HearingDate\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 3\nORDER BY \n    UniqueEvidenceTypes DESC\nLIMIT 9;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.CaseNumber, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes,\n    DATEDIFF(h.HearingDate, c.FilingDate) AS DaysBetweenFilingAndHearing\nFROM \n    Cases c\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Налоговое преступление' \n    AND DATEDIFF(h.HearingDate, c.FilingDate) > 90\nGROUP BY \n    c.CaseNumber, c.FilingDate, h.HearingDate\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 3\nORDER BY \n    UniqueEvidenceTypes DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    c.CaseNumber,\n    c.CaseType,\n    COUNT(DISTINCT e.EvidenceType) AS EvidenceTypesCount,\n    DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) AS DaysBetweenSubmissionAndLastHearing\nFROM \n    `Cases` c\nJOIN \n    Evidence e ON c.CaseID = e.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Налоговое преступление'\nGROUP BY \n    c.CaseNumber, c.CaseType\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 3 \n    AND DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) > 90\nORDER BY \n    EvidenceTypesCount DESC\nLIMIT 9;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    c.CaseID,\n    c.CaseNumber,\n    COUNT(DISTINCT e.EvidenceType) AS DifferentEvidenceTypesCount,\n    GROUP_CONCAT(DISTINCT e.EvidenceType) AS EvidenceTypes,\n    DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) AS DaysBetweenSubmissionAndLastHearing\nFROM \n    Cases c\n    JOIN Evidence e ON c.CaseID = e.CaseID\n    JOIN Hearing h ON c.CaseID = h.CaseID\nWHERE \n    c.CaseType = 'Налоговое преступление'\nGROUP BY \n    c.CaseID, c.CaseNumber\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 3\n    AND DATEDIFF(MAX(h.HearingDate), MIN(e.SubmissionDate)) > 90\nORDER BY \n    DifferentEvidenceTypesCount DESC, DaysBetweenSubmissionAndLastHearing DESC\nLIMIT 9;",
            "gigachat_response": "WITH TaxCrimeCases AS (\n    -- Select cases related to tax crimes\n    SELECT c.CaseID, c.CaseNumber, c.Status, c.CourtID, c.LawyerID, MAX(h.HearingDate) AS LastHearingDate\n    FROM Cases c\n    LEFT JOIN Hearing h ON c.CaseID = h.CaseID\n    WHERE c.CaseType = 'Налоговое преступление'\n    GROUP BY c.CaseID, c.CaseNumber, c.Status, c.CourtID, c.LawyerID\n), \nEvidenceTypesPerCase AS (\n    -- Count distinct evidence types per case\n    SELECT e.CaseID, COUNT(DISTINCT e.EvidenceType) AS NumDistinctEvidenceTypes\n    FROM Evidence e\n    GROUP BY e.CaseID\n), \nTimeBetweenSubmissionAndLastHearing AS (\n    -- Calculate time between submission date and last hearing date\n    SELECT tcc.CaseID, tcc.CaseNumber, tcc.Status, etpc.NumDistinctEvidenceTypes, \n           TIMESTAMPDIFF(DAY, MIN(e.SubmissionDate), tcc.LastHearingDate) AS DaysDifference\n    FROM TaxCrimeCases tcc\n    INNER JOIN Evidence e ON tcc.CaseID = e.CaseID\n    INNER JOIN EvidenceTypesPerCase etpc ON tcc.CaseID = etpc.CaseID\n    GROUP BY tcc.CaseID, tcc.CaseNumber, tcc.Status, etpc.NumDistinctEvidenceTypes, tcc.LastHearingDate\n)\n-- Final selection of top diverse evidence sets\nSELECT * \nFROM TimeBetweenSubmissionAndLastHearing\nWHERE NumDistinctEvidenceTypes >= 3 AND DaysDifference > 90\nORDER BY NumDistinctEvidenceTypes DESC\nLIMIT 9;",
            "gigachat_response_ru": "WITH TaxCrimeCases AS (\n    SELECT c.CaseID, c.CaseNumber, c.Status, e.EvidenceType, MIN(e.SubmissionDate) AS MinSubmissionDate, MAX(h.HearingDate) AS MaxHearingDate\n    FROM Cases c\n    INNER JOIN Evidence e ON c.CaseID = e.CaseID\n    LEFT JOIN Hearing h ON c.CaseID = h.CaseID\n    WHERE c.CaseType = 'Налоговое преступление'\n    GROUP BY c.CaseID, c.CaseNumber, c.Status\n), \nDiverseTaxCrimes AS (\n    SELECT tcc.CaseID, tcc.CaseNumber, COUNT(DISTINCT tcc.EvidenceType) AS NumDistinctTypes, DAYS_BETWEEN(tcc.MaxHearingDate, tcc.MinSubmissionDate) AS DaysBetweenDates\n    FROM TaxCrimeCases tcc\n    GROUP BY tcc.CaseID, tcc.CaseNumber\n    HAVING COUNT(DISTINCT tcc.EvidenceType) >= 3 AND DAYS_BETWEEN(tcc.MaxHearingDate, tcc.MinSubmissionDate) > 90\n)\nSELECT dtc.CaseNumber, dtc.NumDistinctTypes\nFROM DiverseTaxCrimes dtc\nORDER BY dtc.NumDistinctTypes DESC\nLIMIT 9;"
        },
        {
            "question": "Найдите топ-6 пар 'судья-адвокат', которые чаще всего работали вместе по делам с женщинами-клиентами за последние 2 года, где сумма платежей превышает 9000, и имеется не менее 2 разных типов документов, отсортированных по количеству совместных дел",
            "sql_query": "SELECT CONCAT(jp.FirstName, ' ', jp.LastName) AS JudgeName, CONCAT(lp.FirstName, ' ', lp.LastName) AS LawyerName, COUNT(DISTINCT cs.CaseID) AS CasesWorkedTogether, SUM(pmt.Amount) AS TotalPayments, COUNT(DISTINCT ld.DocumentType) AS DocumentTypes FROM Judge j JOIN Person jp ON j.PersonID = jp.PersonID JOIN Hearing h ON j.JudgeID = h.JudgeID JOIN Cases cs ON h.CaseID = cs.CaseID JOIN Lawyer l ON cs.LawyerID = l.LawyerID JOIN Person lp ON l.PersonID = lp.PersonID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Client cl ON ct.ClientID = cl.ClientID JOIN Person cp ON cl.PersonID = cp.PersonID JOIN Payment pmt ON ct.ContractID = pmt.ContractID JOIN LegalDocument ld ON cs.CaseID = ld.CaseID WHERE cp.Gender = 'Ж' AND cs.FilingDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR) GROUP BY JudgeName, LawyerName HAVING COUNT(DISTINCT cs.CaseID) >= 1 AND SUM(pmt.Amount) > 9000 AND COUNT(DISTINCT ld.DocumentType) >= 2 ORDER BY CasesWorkedTogether DESC, TotalPayments DESC LIMIT 6;",
            "gpt-4o_response": "SELECT \n    j.PersonID AS JudgePersonID,\n    jp.FirstName AS JudgeFirstName,\n    jp.LastName AS JudgeLastName,\n    l.PersonID AS LawyerPersonID,\n    lp.FirstName AS LawyerFirstName,\n    lp.LastName AS LawyerLastName,\n    COUNT(DISTINCT c.CaseID) AS JointCaseCount\nFROM \n    Cases c\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Client cl ON ct.ClientID = cl.ClientID\nJOIN \n    Person cp ON cl.PersonID = cp.PersonID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nJOIN \n    Judge j ON h.JudgeID = j.JudgeID\nJOIN \n    Person jp ON j.PersonID = jp.PersonID\nJOIN \n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN \n    Person lp ON l.PersonID = lp.PersonID\nWHERE \n    cp.Gender = 'Ж'\n    AND pmt.Amount > 9000\n    AND c.FilingDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)\nGROUP BY \n    j.PersonID, jp.FirstName, jp.LastName, l.PersonID, lp.FirstName, lp.LastName\nHAVING \n    COUNT(DISTINCT ld.DocumentType) >= 2\nORDER BY \n    JointCaseCount DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT \n    CONCAT(judge.FirstName, ' ', judge.LastName) AS JudgeName,\n    CONCAT(lawyer.FirstName, ' ', lawyer.LastName) AS LawyerName,\n    COUNT(DISTINCT c.CaseID) AS JointCasesCount\nFROM \n    Cases c\nJOIN \n    Contract ct ON c.LawyerID = ct.LawyerID\nJOIN \n    Client cl ON ct.ClientID = cl.ClientID\nJOIN \n    Person client_person ON cl.PersonID = client_person.PersonID\nJOIN \n    Hearing h ON c.CaseID = h.CaseID\nJOIN \n    Judge j ON h.JudgeID = j.JudgeID\nJOIN \n    Person judge ON j.PersonID = judge.PersonID\nJOIN \n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN \n    Person lawyer ON l.PersonID = lawyer.PersonID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    client_person.Gender = 'Ж'\n    AND pmt.PaymentDate >= DATE_SUB(CURDATE(), INTERVAL 2 YEAR)\nGROUP BY \n    JudgeName, LawyerName\nHAVING \n    SUM(pmt.Amount) > 9000\n    AND COUNT(DISTINCT ld.DocumentType) >= 2\nORDER BY \n    JointCasesCount DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  j.JudgeID,\n  law.LawyerID,\n  COUNT(DISTINCT ca.CaseID) AS NumberOfCases\nFROM Cases AS ca\nJOIN Hearing AS h\n  ON ca.CaseID = h.CaseID\nJOIN Judge AS j\n  ON h.JudgeID = j.JudgeID\nJOIN Lawyer AS law\n  ON ca.LawyerID = law.LawyerID\nJOIN Contract AS con\n  ON law.LawyerID = con.LawyerID\nJOIN Client AS cli\n  ON con.ClientID = cli.ClientID\nJOIN Person AS p\n  ON cli.PersonID = p.PersonID\nJOIN Payment AS pay\n  ON con.ContractID = pay.ContractID\nJOIN LegalDocument AS ld\n  ON ca.CaseID = ld.CaseID\nWHERE\n  p.Gender = 'Ж' AND ca.FilingDate >= DATE('now', '-2 year')\nGROUP BY\n  j.JudgeID,\n  law.LawyerID\nHAVING\n  SUM(pay.Amount) > 9000 AND COUNT(DISTINCT ld.DocumentType) >= 2\nORDER BY\n  NumberOfCases DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    j.JudgeID,\n    p_judge.FirstName AS JudgeFirstName,\n    p_judge.LastName AS JudgeLastName,\n    l.LawyerID,\n    p_lawyer.FirstName AS LawyerFirstName,\n    p_lawyer.LastName AS LawyerLastName,\n    COUNT(DISTINCT c.CaseID) AS NumberOfCases\nFROM\n    Cases c\nJOIN\n    Hearing h ON c.CaseID = h.CaseID\nJOIN\n    Judge j ON h.JudgeID = j.JudgeID\nJOIN\n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN\n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN\n    Client cl ON ct.ClientID = cl.ClientID\nJOIN\n    Person p_client ON cl.PersonID = p_client.PersonID\nJOIN\n    Person p_judge ON j.PersonID = p_judge.PersonID\nJOIN\n    Person p_lawyer ON l.PersonID = p_lawyer.PersonID\nJOIN\n    Payment pay ON ct.ContractID = pay.ContractID\nJOIN\n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE\n    p_client.Gender = 'Ж'\n    AND c.FilingDate >= DATE('now', '-2 year')\n    AND pay.Amount > 9000\n    AND c.CaseID IN (SELECT CaseID FROM LegalDocument GROUP BY CaseID HAVING COUNT(DISTINCT DocumentType) >= 2)\nGROUP BY\n    j.JudgeID,\n    l.LawyerID\nORDER BY\n    NumberOfCases DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    j.FirstName, \n    j.LastName, \n    l.FirstName AS LawyerFirstName, \n    l.LastName AS LawyerLastName, \n    COUNT(DISTINCT c.CaseID) AS TotalCases\nFROM \n    Judge j\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    `Cases` c ON h.CaseID = c.CaseID\nJOIN \n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN \n    Client cl ON c.LawyerID = cl.ClientID\nJOIN \n    Person p ON cl.PersonID = p.PersonID\nJOIN \n    Contract ct ON cl.ClientID = ct.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    p.Gender = 'Ж' \n    AND pmt.Amount > 9000 \n    AND c.FilingDate > NOW() - INTERVAL 2 YEAR\nGROUP BY \n    j.FirstName, \n    j.LastName, \n    l.FirstName, \n    l.LastName\nHAVING \n    COUNT(DISTINCT ld.DocumentType) > 1\nORDER BY \n    TotalCases DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    j.FirstName, \n    j.LastName, \n    l.FirstName AS LawyerFirstName, \n    l.LastName AS LawyerLastName, \n    COUNT(DISTINCT c.CaseID) AS TotalCases\nFROM \n    Judge j\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    `Cases` c ON h.CaseID = c.CaseID\nJOIN \n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN \n    Client cl ON c.LawyerID = cl.ClientID\nJOIN \n    Person p ON cl.PersonID = p.PersonID\nJOIN \n    Contract ct ON cl.ClientID = ct.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    p.Gender = 'Ж' \n    AND pmt.Amount > 9000 \n    AND c.FilingDate > NOW() - INTERVAL 2 YEAR\n    AND (SELECT COUNT(DISTINCT DocumentType) FROM LegalDocument WHERE CaseID = c.CaseID) > 1\nGROUP BY \n    j.FirstName, \n    j.LastName, \n    l.FirstName, \n    l.LastName\nORDER BY \n    TotalCases DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    CONCAT(p_judge.FirstName, ' ', p_judge.LastName) AS JudgeName,\n    CONCAT(p_lawyer.FirstName, ' ', p_lawyer.LastName) AS LawyerName,\n    COUNT(DISTINCT c.CaseID) AS JointCasesCount\nFROM \n    Cases c\nJOIN \n    Judge j ON c.CourtID = j.CourtID\nJOIN \n    Person p_judge ON j.PersonID = p_judge.PersonID\nJOIN \n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN \n    Person p_lawyer ON l.PersonID = p_lawyer.PersonID\nJOIN \n    Client cl ON c.CaseID = cl.ClientID\nJOIN \n    Person p_client ON cl.PersonID = p_client.PersonID\nJOIN \n    Contract ct ON cl.ClientID = ct.ClientID AND l.LawyerID = ct.LawyerID\nJOIN \n    Payment p ON ct.ContractID = p.ContractID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    p_client.Gender = 'Ж'\n    AND c.FilingDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 YEAR)\nGROUP BY \n    JudgeName, LawyerName\nHAVING \n    SUM(p.Amount) > 9000\n    AND COUNT(DISTINCT ld.DocumentType) >= 2\nORDER BY \n    JointCasesCount DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    CONCAT(jd.FirstName, ' ', jd.LastName) AS JudgeName,\n    CONCAT(lw.FirstName, ' ', lw.LastName) AS LawyerName,\n    COUNT(DISTINCT c.CaseID) AS CasesTogether\nFROM \n    Judge j\nJOIN \n    Person jd ON j.PersonID = jd.PersonID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases c ON h.CaseID = c.CaseID\nJOIN \n    Lawyer l ON c.LawyerID = l.LawyerID\nJOIN \n    Person lw ON l.PersonID = lw.PersonID\nJOIN \n    Client cl ON (\n        SELECT clt.ClientID \n        FROM Contract ct \n        JOIN Client clt ON ct.ClientID = clt.ClientID \n        WHERE ct.LawyerID = l.LawyerID\n        LIMIT 1\n    )\nJOIN \n    Person pc ON cl.PersonID = pc.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID AND cl.ClientID = ct.ClientID\nJOIN \n    Payment p ON ct.ContractID = p.ContractID\nJOIN \n    LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE \n    pc.Gender = 'Ж'\n    AND c.FilingDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 YEAR)\n    AND (SELECT SUM(Amount) FROM Payment WHERE ContractID = ct.ContractID) > 9000\nGROUP BY \n    j.JudgeID, l.LawyerID\nHAVING \n    COUNT(DISTINCT ld.DocumentType) >= 2\nORDER BY \n    CasesTogether DESC\nLIMIT 6;",
            "gigachat_response": "WITH FemaleClients AS (\n    SELECT c.ClientID\n    FROM Client c\n    INNER JOIN Person p ON c.PersonID = p.PersonID\n    WHERE p.Gender = 'Ж'\n), RelevantContracts AS (\n    SELECT DISTINCT ct.ContractID\n    FROM Contract ct\n    INNER JOIN FemaleClients fc ON ct.ClientID = fc.ClientID\n    INNER JOIN Payment p ON ct.ContractID = p.ContractID\n    WHERE p.PaymentDate >= NOW() - INTERVAL 2 YEAR AND p.Amount > 9000\n), RelevantLegalDocs AS (\n    SELECT CASE_ID, COUNT(DISTINCT DocumentType) AS DocTypesCount\n    FROM LegalDocument\n    GROUP BY CaseID\n    HAVING DocTypesCount >= 2\n), JointJudgesAndLawyers AS (\n    SELECT j.JudgeID, l.LawyerID, COUNT(*) AS NumJointCases\n    FROM Cases cs\n    INNER JOIN RelevantContracts rc ON cs.CaseID = rc.ContractID\n    INNER JOIN Hearing h ON cs.CaseID = h.CaseID\n    INNER JOIN Judge j ON h.JudgeID = j.JudgeID\n    INNER JOIN Lawyer l ON cs.LawyerID = l.LawyerID\n    INNER JOIN RelevantLegalDocs rld ON cs.CaseID = rld.CASE_ID\n    GROUP BY j.JudgeID, l.LawyerID\n)\nSELECT \n    CONCAT(jp.FirstName, ' ', jp.MiddleName, ' ', jp.LastName) AS JudgeFullName,\n    CONCAT(lp.FirstName, ' ', lp.MiddleName, ' ', lp.LastName) AS LawyerFullName,\n    JJL.NumJointCases\nFROM JointJudgesAndLawyers JJL\nINNER JOIN Person jp ON JP.PersonID = JJL.JudgeID\nINNER JOIN Person lp ON LP.PersonID = JJL.LawyerID\nORDER BY NumJointCases DESC\nLIMIT 6;",
            "gigachat_response_ru": "SELECT j.FirstName || ' ' || j.LastName AS JudgeFullName,\n       lw.FirstName || ' ' || lw.LastName AS LawyerFullName,\n       COUNT(*) AS NumOfJointCases\nFROM Judge j\nJOIN Person jp ON j.PersonID = jp.PersonID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases c ON h.CaseID = c.CaseID\nJOIN Lawyer l ON c.LawyerID = l.LawyerID\nJOIN Person lp ON l.PersonID = lp.PersonID\nJOIN Client cl ON c.CaseID IN (SELECT CaseID FROM Contract WHERE ClientID = cl.ClientID)\nJOIN Person cp ON cl.PersonID = cp.PersonID\nJOIN Payment pm ON c.CaseID IN (SELECT CaseID FROM Contract WHERE ContractID = pm.ContractID)\nJOIN LegalDocument ld ON c.CaseID = ld.CaseID\nWHERE cp.Gender = 'Ж'\nAND pm.PaymentDate >= NOW() - INTERVAL '2 YEARS'\nAND pm.Amount > 9000\nGROUP BY j.FirstName, j.LastName, lw.FirstName, lw.LastName\nHAVING COUNT(DISTINCT ld.DocumentType) >= 2\nORDER BY NumOfJointCases DESC\nLIMIT 6;"
        },
        {
            "question": "Какие топ-8 городов (по адресам судов) имеют наиболее высокое соотношение успешных апелляций к общему количеству апелляций, с учетом опыта судей (не менее 10 лет), рассматривающих дела с минимум 3 разбирательствами, отсортированных по соотношению успешных апелляций",
            "sql_query": "SELECT SUBSTRING_INDEX(SUBSTRING_INDEX(c.Address, ',', -2), ',', 1) AS City, COUNT(DISTINCT a.AppealID) AS TotalAppeals, COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) AS SuccessfulAppeals, (COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) / COUNT(DISTINCT a.AppealID) * 100) AS SuccessRate, AVG(j.ExperienceYears) AS AvgJudgeExperience, COUNT(DISTINCT h.HearingID) AS TotalHearings FROM Court c JOIN Judge j ON c.CourtID = j.CourtID JOIN Cases cs ON c.CourtID = cs.CourtID JOIN Appeal a ON cs.CaseID = a.CaseID JOIN Hearing h ON cs.CaseID = h.CaseID GROUP BY City HAVING AVG(j.ExperienceYears) >= 10 AND COUNT(DISTINCT h.HearingID) >= 3 ORDER BY SuccessRate DESC, TotalAppeals DESC LIMIT 8;",
            "gpt-4o_response": "SELECT c.Address AS CourtCity, \n       COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) * 1.0 / COUNT(a.AppealID) AS SuccessRatio\nFROM Court c\nJOIN Judge j ON c.CourtID = j.CourtID\nJOIN Hearing h ON j.JudgeID = h.JudgeID\nJOIN Cases cs ON h.CaseID = cs.CaseID\nJOIN Appeal a ON cs.CaseID = a.CaseID\nWHERE j.ExperienceYears >= 10\nGROUP BY c.Address\nHAVING COUNT(CASE WHEN h.HearingType = 'Разбирательство' THEN 1 END) >= 3\nORDER BY SuccessRatio DESC\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT \n    c.Address AS CourtCity,\n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) * 1.0 / COUNT(a.AppealID) AS SuccessRatio\nFROM \n    Court c\nJOIN \n    Judge j ON c.CourtID = j.CourtID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases cs ON h.CaseID = cs.CaseID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nWHERE \n    j.ExperienceYears >= 10\n    AND (SELECT COUNT(*) FROM Hearing h2 WHERE h2.CaseID = cs.CaseID AND h2.HearingType = 'Разбирательство') >= 3\nGROUP BY \n    c.Address\nORDER BY \n    SuccessRatio DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    SUBSTRING_INDEX(c.Address, ',', -1) AS City,\n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) / COUNT(a.AppealID) AS SuccessRatio\nFROM\n    Appeal a\nJOIN\n    Cases ca ON a.CaseID = ca.CaseID\nJOIN\n    Court c ON ca.CourtID = c.CourtID\nJOIN\n    Hearing h ON ca.CaseID = h.CaseID\nJOIN\n    Judge j ON h.JudgeID = j.JudgeID\nWHERE\n    j.ExperienceYears >= 10\nGROUP BY\n    City\nHAVING\n    COUNT(DISTINCT h.HearingID) >= 3\nORDER BY\n    SuccessRatio DESC\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    SUBSTRING_INDEX(c.Address, ',', 1) AS City,\n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) / COUNT(a.AppealID) AS SuccessRatio,\n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) AS SuccessfulAppeals,\n    COUNT(a.AppealID) AS TotalAppeals\nFROM Cases AS cs\nJOIN Court AS c ON cs.CourtID = c.CourtID\nJOIN Hearing AS h ON cs.CaseID = h.CaseID\nJOIN Judge AS j ON h.JudgeID = j.JudgeID\nLEFT JOIN Appeal AS a ON cs.CaseID = a.CaseID\nWHERE j.ExperienceYears >= 10\nGROUP BY City\nHAVING COUNT(DISTINCT h.HearingID) >= 3 AND COUNT(a.AppealID) > 0\nORDER BY SuccessRatio DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    c.Address, \n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 ELSE NULL END) AS SuccessfulAppeals, \n    COUNT(a.AppealID) AS TotalAppeals, \n    ROUND(COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 ELSE NULL END) / COUNT(a.AppealID), 2) AS AppealRatio\nFROM \n    Appeal a\nJOIN \n    Cases cs ON a.CaseID = cs.CaseID\nJOIN \n    Court c ON cs.CourtID = c.CourtID\nJOIN \n    Judge j ON cs.CourtID = j.CourtID\nJOIN \n    Hearing h ON cs.CaseID = h.CaseID\nWHERE \n    j.ExperienceYears >= 10 AND h.HearingType = 'Разбирательство'\nGROUP BY \n    c.Address\nHAVING \n    COUNT(h.HearingID) >= 3\nORDER BY \n    AppealRatio DESC\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.Address AS City, \n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) AS SuccessfulAppeals, \n    COUNT(a.AppealID) AS TotalAppeals, \n    ROUND(COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) / COUNT(a.AppealID), 2) AS AppealRatio\nFROM \n    Appeal a\nJOIN \n    Cases cs ON a.CaseID = cs.CaseID\nJOIN \n    Court c ON cs.CourtID = c.CourtID\nJOIN \n    Judge j ON cs.CourtID = j.CourtID\nJOIN \n    Hearing h ON cs.CaseID = h.CaseID\nWHERE \n    j.ExperienceYears >= 10 AND \n    h.HearingType = 'Разбирательство' AND \n    (SELECT COUNT(*) FROM Hearing h2 WHERE h2.CaseID = cs.CaseID) >= 3\nGROUP BY \n    c.Address\nORDER BY \n    AppealRatio DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    c.CourtName,\n    c.Address,\n    COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) AS SuccessfulAppeals,\n    COUNT(a.AppealID) AS TotalAppeals,\n    ROUND(COUNT(CASE WHEN a.AppealStatus = 'Принято' THEN 1 END) * 100.0 / COUNT(a.AppealID), 2) AS SuccessRate\nFROM \n    Court c\nJOIN \n    Judge j ON c.CourtID = j.CourtID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    Cases cs ON h.CaseID = cs.CaseID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nWHERE \n    j.ExperienceYears >= 10\n    AND h.HearingType = 'Разбирательство'\nGROUP BY \n    c.CourtName, c.Address\nHAVING \n    COUNT(DISTINCT h.HearingID) >= 3\nORDER BY \n    SuccessRate DESC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    c.CourtName,\n    SUBSTRING_INDEX(c.Address, ',', 1) AS City,\n    COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) AS SuccessfulAppeals,\n    COUNT(DISTINCT a.AppealID) AS TotalAppeals,\n    ROUND(COUNT(DISTINCT CASE WHEN a.AppealStatus = 'Принято' THEN a.AppealID END) / COUNT(DISTINCT a.AppealID) * 100, 2) AS SuccessRate\nFROM \n    Court c\nJOIN \n    Judge j ON c.CourtID = j.CourtID\nJOIN \n    Hearing h ON j.JudgeID = h.JudgeID\nJOIN \n    `Cases` cs ON h.CaseID = cs.CaseID\nJOIN \n    Appeal a ON cs.CaseID = a.CaseID\nWHERE \n    j.ExperienceYears >= 10\n    AND (\n        SELECT COUNT(*) \n        FROM Hearing h2 \n        WHERE h2.CaseID = cs.CaseID \n        AND h2.HearingType = 'Разбирательство'\n    ) >= 3\nGROUP BY \n    c.CourtName, City\nORDER BY \n    SuccessRate DESC\nLIMIT 8;",
            "gigachat_response": "WITH SuccessfulAppeals AS (\n    SELECT c.Address, j.JudgeID, COUNT(*) AS SuccessCount\n    FROM Appeal a\n    JOIN Cases ca ON a.CaseID = ca.CaseID\n    JOIN Court co ON ca.CourtID = co.CourtID\n    JOIN Judge j ON co.CourtID = j.CourtID\n    WHERE a.AppealStatus = 'Принято'\n      AND j.ExperienceYears >= 10\n    GROUP BY c.Address, j.JudgeID\n    HAVING COUNT(*) >= 3\n),\nTotalAppeals AS (\n    SELECT c.Address, j.JudgeID, COUNT(*) AS TotalCount\n    FROM Appeal a\n    JOIN Cases ca ON a.CaseID = ca.CaseID\n    JOIN Court co ON ca.CourtID = co.CourtID\n    JOIN Judge j ON co.CourtID = j.CourtID\n    WHERE j.ExperienceYears >= 10\n    GROUP BY c.Address, j.JudgeID\n    HAVING COUNT(*) >= 3\n),\nRatio AS (\n    SELECT sa.Address, sa.SuccessCount / ta.TotalCount AS Ratio\n    FROM SuccessfulAppeals sa\n    JOIN TotalAppeals ta ON sa.Address = ta.Address AND sa.JudgeID = ta.JudgeID\n)\nSELECT DISTINCT r.Address, r.Ratio\nFROM Ratio r\nORDER BY r.Ratio DESC\nLIMIT 8;",
            "gigachat_response_ru": "WITH SuccessfulAppeals AS (\n    SELECT c.Address, COUNT(*) AS SuccessCount\n    FROM Appeal ap\n    JOIN Cases ca ON ap.CaseID = ca.CaseID\n    JOIN Court co ON ca.CourtID = co.CourtID\n    JOIN Hearing he ON ca.CaseID = he.CaseID\n    JOIN Judge ju ON he.JudgeID = ju.JudgeID\n    WHERE ap.AppealStatus = 'Принято'\n      AND ju.ExperienceYears >= 10\n      AND (SELECT COUNT(*) FROM Hearing WHERE CaseID = ca.CaseID) >= 3\n    GROUP BY c.Address\n),\nTotalAppeals AS (\n    SELECT c.Address, COUNT(*) AS TotalCount\n    FROM Appeal ap\n    JOIN Cases ca ON ap.CaseID = ca.CaseID\n    JOIN Court co ON ca.CourtID = co.CourtID\n    JOIN Hearing he ON ca.CaseID = he.CaseID\n    JOIN Judge ju ON he.JudgeID = ju.JudgeID\n    WHERE ju.ExperienceYears >= 10\n      AND (SELECT COUNT(*) FROM Hearing WHERE CaseID = ca.CaseID) >= 3\n    GROUP BY c.Address\n)\nSELECT sa.Address, \n       CAST(sa.SuccessCount AS FLOAT)/ta.TotalCount AS SuccessRatio\nFROM SuccessfulAppeals sa\nJOIN TotalAppeals ta ON sa.Address = ta.Address\nORDER BY SuccessRatio DESC\nLIMIT 8;"
        },
        {
            "question": "Какие топ-5 клиентов по среднему платежу на тип дела имеют не менее 2 дел каждого типа, и каков средний размер платежа, отсортированные по среднему платежу?",
            "sql_query": "SELECT p.FirstName, p.LastName, cs.CaseType, COUNT(DISTINCT cs.CaseID) AS CaseCount, AVG(pmt.Amount) AS AvgPayment FROM Person p JOIN Client cl ON p.PersonID = cl.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN Payment pmt ON ct.ContractID = pmt.ContractID JOIN Cases cs ON ct.ClientID = cs.CaseID GROUP BY p.FirstName, p.LastName, cs.CaseType HAVING COUNT(DISTINCT cs.CaseID) >= 2 ORDER BY AvgPayment DESC LIMIT 5;",
            "gpt-4o_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    AVG(pmt.Amount) AS AvgPayment\nFROM \n    Client cl\nJOIN \n    Person p ON cl.PersonID = p.PersonID\nJOIN \n    Contract ct ON cl.ClientID = ct.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases c ON ct.ClientID = c.CaseID\nGROUP BY \n    cl.ClientID, p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT c.CaseType) >= 2\nORDER BY \n    AvgPayment DESC\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    AVG(pmt.Amount) AS AvgPayment\nFROM \n    Client cl\nJOIN \n    Person p ON cl.PersonID = p.PersonID\nJOIN \n    Contract ct ON cl.ClientID = ct.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases c ON ct.ClientID = c.LawyerID\nGROUP BY \n    cl.ClientID, p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT c.CaseType) >= 2\nORDER BY \n    AvgPayment DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    AVG(pmt.Amount) AS AveragePayment,\n    c.CaseType\nFROM\n    Client cl\nJOIN\n    Person p ON cl.PersonID = p.PersonID\nJOIN\n    `Contract` ct ON cl.ClientID = ct.ClientID\nJOIN\n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN\n    Cases c ON ct.LawyerID = c.LawyerID\nWHERE c.CaseID IN (SELECT CaseID FROM Cases)\nGROUP BY\n    p.FirstName,\n    p.LastName,\n    c.CaseType\nHAVING COUNT(DISTINCT c.CaseID) >= 2\nORDER BY\n    AveragePayment DESC\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  AVG(pmt.Amount) AS AveragePayment\nFROM Client AS cl\nJOIN Person AS p\n  ON cl.PersonID = p.PersonID\nJOIN `Contract` AS ct\n  ON cl.ClientID = ct.ClientID\nJOIN Cases AS ca\n  ON ct.ClientID = ca.CaseID\nJOIN Payment AS pmt\n  ON ct.ContractID = pmt.ContractID\nGROUP BY\n  p.FirstName,\n  p.LastName,\n  ca.CaseType\nHAVING\n  COUNT(DISTINCT ca.CaseID) >= 2\nORDER BY\n  AveragePayment DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    c.ClientID,\n    p.FirstName,\n    p.LastName,\n    ca.CaseType,\n    AVG(pmt.Amount) AS AvgPayment\nFROM \n    Client c\nJOIN \n    Person p ON c.PersonID = p.PersonID\nJOIN \n    Contract ct ON c.ClientID = ct.ClientID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Cases ca ON ct.ClientID = ca.CaseID\nGROUP BY \n    c.ClientID, p.FirstName, p.LastName, ca.CaseType\nHAVING \n    COUNT(DISTINCT ca.CaseID) >= 2\nORDER BY \n    AvgPayment DESC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    c.ClientID, \n    p.FirstName, \n    p.LastName, \n    ca.CaseType, \n    AVG(pm.Amount) AS AveragePayment\nFROM \n    Client c\nJOIN \n    Person p ON c.PersonID = p.PersonID\nJOIN \n    `Contract` ct ON c.ClientID = ct.ClientID\nJOIN \n    Payment pm ON ct.ContractID = pm.ContractID\nJOIN \n    `Cases` ca ON ct.ClientID = ca.LawyerID\nGROUP BY \n    c.ClientID, \n    p.FirstName, \n    p.LastName, \n    ca.CaseType\nHAVING \n    COUNT(DISTINCT ca.CaseID) >= 2\nORDER BY \n    AveragePayment DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    c.CaseType, \n    ROUND(AVG(pmt.Amount), 2) AS AvgPaymentAmount\nFROM \n    Person p\n    JOIN Client cl ON p.PersonID = cl.PersonID\n    JOIN Contract ct ON cl.ClientID = ct.ClientID\n    JOIN Payment pmt ON ct.ContractID = pmt.ContractID\n    JOIN Cases c ON ct.ClientID = c.ClientID\nGROUP BY \n    p.PersonID, \n    p.FirstName, \n    p.LastName, \n    c.CaseType\nHAVING \n    COUNT(DISTINCT c.CaseID) >= 2\nORDER BY \n    AvgPaymentAmount DESC\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    c.CaseType, \n    COUNT(DISTINCT cs.CaseID) AS CaseCount, \n    AVG(pmt.Amount) AS AvgPayment\nFROM \n    Person p\n    JOIN Client cl ON p.PersonID = cl.PersonID\n    JOIN Contract ct ON cl.ClientID = ct.ClientID\n    JOIN Payment pmt ON ct.ContractID = pmt.ContractID\n    JOIN Cases cs ON ct.ClientID = cs.LawyerID\nGROUP BY \n    p.FirstName, p.LastName, c.CaseType\nHAVING \n    COUNT(DISTINCT cs.CaseID) >= 2\nORDER BY \n    AvgPayment DESC\nLIMIT 5;",
            "gigachat_response": "WITH ClientCaseTypes AS (\n    SELECT c.ClientID, ca.CaseType, COUNT(*) AS NumOfCases\n    FROM Client c\n    JOIN Cases ca ON c.ClientID = ca.LawyerID -- Assuming lawyer represents client directly\n    GROUP BY c.ClientID, ca.CaseType\n), \nEligibleClients AS (\n    SELECT ClientID\n    FROM ClientCaseTypes\n    GROUP BY ClientID\n    HAVING MIN(NumOfCases) >= 2\n),\nAveragePaymentPerClient AS (\n    SELECT c.ClientID, AVG(p.Amount) AS AveragePayment\n    FROM EligibleClients ec\n    JOIN Client c ON ec.ClientID = c.ClientID\n    JOIN Contract co ON c.ClientID = co.ClientID\n    JOIN Payment p ON co.ContractID = p.ContractID\n    GROUP BY c.ClientID\n)\nSELECT p.FirstName, p.LastName, ap.AveragePayment\nFROM AveragePaymentPerClient ap\nJOIN Client c ON ap.ClientID = c.ClientID\nJOIN Person p ON c.PersonID = p.PersonID\nORDER BY ap.AveragePayment DESC\nLIMIT 5;",
            "gigachat_response_ru": "SELECT c.FirstName, c.LastName, cd.CaseType, AVG(p.Amount) AS AveragePayment\nFROM Person p\nJOIN Client cl ON p.PersonID = cl.PersonID\nJOIN Cases cs ON cl.ClientID = cs.LawyerID OR cl.ClientID IN (SELECT ClientID FROM Contract WHERE LawyerID = cs.LawyerID)\nJOIN Payment p ON cs.CaseID = ANY(SELECT CaseID FROM Contract WHERE ContractID = p.ContractID)\nJOIN LegalDocument ld ON cs.CaseID = ld.CaseID\nJOIN (SELECT ClientID, CaseType, COUNT(*) AS NumOfCases\n      FROM Cases\n      GROUP BY ClientID, CaseType\n      HAVING COUNT(*) >= 2) cd ON cl.ClientID = cd.ClientID\nGROUP BY c.FirstName, c.LastName, cd.CaseType\nORDER BY AveragePayment DESC\nLIMIT 5;"
        },
        {
            "question": "Какие топ-4 специализации адвокатов имеют наибольшее количество закрытых дел и среднюю длину текста вердикта более 100 символов, отсортированные по количеству закрытых дел?",
            "sql_query": "SELECT l.Specialization, COUNT(DISTINCT cs.CaseID) AS ClosedCasesCount, AVG(CHAR_LENGTH(v.Details)) AS AvgVerdictLength FROM Lawyer l JOIN Cases cs ON l.LawyerID = cs.LawyerID JOIN Verdict v ON cs.CaseID = v.CaseID WHERE cs.Status = 'Закрыто' GROUP BY l.Specialization HAVING COUNT(DISTINCT cs.CaseID) > 1 AND AVG(CHAR_LENGTH(v.Details)) > 100 ORDER BY ClosedCasesCount DESC LIMIT 4;",
            "gpt-4o_response": "SELECT l.Specialization, COUNT(c.CaseID) AS ClosedCasesCount\nFROM Lawyer l\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Verdict v ON c.CaseID = v.CaseID\nWHERE c.Status = 'Закрыто'\nGROUP BY l.Specialization\nHAVING AVG(CHAR_LENGTH(v.Details)) > 100\nORDER BY ClosedCasesCount DESC\nLIMIT 4;",
            "gpt-4o_response_ru": "SELECT \n    l.Specialization, \n    COUNT(DISTINCT c.CaseID) AS ClosedCasesCount\nFROM \n    Lawyer l\nJOIN \n    Cases c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    c.Status = 'Закрыто'\nGROUP BY \n    l.Specialization\nHAVING \n    AVG(CHAR_LENGTH(v.Details)) > 100\nORDER BY \n    ClosedCasesCount DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    l.Specialization,\n    COUNT(DISTINCT c.CaseID) AS ClosedCasesCount,\n    AVG(LENGTH(v.Details)) AS AvgVerdictLength\nFROM Lawyer l\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Verdict v ON c.CaseID = v.CaseID\nWHERE c.Status = 'Закрыто'\nGROUP BY l.Specialization\nHAVING AVG(LENGTH(v.Details)) > 100\nORDER BY ClosedCasesCount DESC\nLIMIT 4;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  l.Specialization,\n  COUNT(DISTINCT c.CaseID) AS ClosedCasesCount,\n  AVG(LENGTH(v.Details)) AS AvgVerdictLength\nFROM Lawyer AS l\nJOIN Cases AS c\n  ON l.LawyerID = c.LawyerID\nJOIN Verdict AS v\n  ON c.CaseID = v.CaseID\nWHERE\n  c.Status = 'Закрыто'\nGROUP BY\n  l.Specialization\nHAVING\n  AVG(LENGTH(v.Details)) > 100\nORDER BY\n  ClosedCasesCount DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    l.Specialization, \n    COUNT(DISTINCT c.CaseID) AS TotalClosedCases, \n    AVG(LENGTH(v.Details)) AS AvgVerdictLength\nFROM \n    Lawyer l\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    c.Status = 'Закрыто' AND LENGTH(v.Details) > 100\nGROUP BY \n    l.Specialization\nORDER BY \n    TotalClosedCases DESC\nLIMIT 4;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    l.Specialization, \n    COUNT(DISTINCT c.CaseID) AS TotalClosedCases, \n    AVG(LENGTH(v.Details)) AS AvgVerdictLength\nFROM \n    Lawyer l\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    c.`Status` = 'Закрыто' AND LENGTH(v.Details) > 100\nGROUP BY \n    l.Specialization\nORDER BY \n    TotalClosedCases DESC\nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT l.Specialization, COUNT(DISTINCT c.CaseID) AS ClosedCasesCount, AVG(LENGTH(v.Details)) AS AvgVerdictLength \nFROM Lawyer l \nJOIN `Cases` c ON l.LawyerID = c.LawyerID \nJOIN Verdict v ON c.CaseID = v.CaseID \nWHERE c.Status = 'Закрыто' \nGROUP BY l.Specialization \nHAVING AVG(LENGTH(v.Details)) > 100 \nORDER BY ClosedCasesCount DESC \nLIMIT 4;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    l.Specialization,\n    COUNT(DISTINCT c.CaseID) AS ClosedCasesCount,\n    AVG(LENGTH(v.Details)) AS AvgVerdictLength\nFROM \n    Lawyer l\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    c.Status = 'Закрыто'\nGROUP BY \n    l.Specialization\nHAVING \n    AVG(LENGTH(v.Details)) > 100\nORDER BY \n    ClosedCasesCount DESC\nLIMIT 4;",
            "gigachat_response": "SELECT \n    lawyer.Specialization,\n    COUNT(cases.CaseID) AS ClosedCasesCount,\n    AVG(CHAR_LENGTH(v.Details)) AS AverageVerdictLength\nFROM \n    Lawyer lawyer\nJOIN \n    Cases cases ON lawyer.LawyerID = cases.LawyerID\nJOIN \n    Verdict v ON cases.CaseID = v.CaseID\nWHERE \n    cases.`Status` = 'Закрыто'\nGROUP BY \n    lawyer.Specialization\nHAVING \n    AVG(CHAR_LENGTH(v.Details)) > 100\nORDER BY \n    ClosedCasesCount DESC\nLIMIT 4;",
            "gigachat_response_ru": "SELECT \n    lawyer.Specialization,\n    COUNT(cases.CaseID) AS ClosedCasesCount,\n    AVG(LENGTH(v.Details)) AS AverageVerdictLength\nFROM \n    Lawyer lawyer\nINNER JOIN \n    Cases cases ON lawyer.LawyerID = cases.LawyerID\nINNER JOIN \n    Verdict v ON cases.CaseID = v.CaseID\nWHERE \n    cases.Status = 'Закрыто'\nGROUP BY \n    lawyer.Specialization\nHAVING \n    AVG(LENGTH(v.Details)) > 100\nORDER BY \n    ClosedCasesCount DESC\nLIMIT 4;"
        },
        {
            "question": "Какие топ-6 клиентов по разнообразию типов документов имеют не менее 2 разных типов доказательств и период между первой и последней подачей документа более 30 дней, отсортированные по длине периода?",
            "sql_query": "SELECT p.FirstName, p.LastName, cl.ClientType, COUNT(DISTINCT ld.DocumentType) AS DocTypeCount, DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) AS DocSpanDays FROM Client cl JOIN Person p ON cl.PersonID = p.PersonID JOIN Contract ct ON cl.ClientID = ct.ClientID JOIN LegalDocument ld ON ct.ClientID = ld.CaseID GROUP BY p.FirstName, p.LastName, cl.ClientType HAVING COUNT(DISTINCT ld.DocumentType) >= 2 AND DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) > 30 ORDER BY DocSpanDays DESC LIMIT 6;",
            "gpt-4o_response": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT ld.DocumentType) AS DocumentTypesCount, \n       DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) AS DocumentPeriod\nFROM Client c\nJOIN Person p ON c.PersonID = p.PersonID\nJOIN Contract ct ON c.ClientID = ct.ClientID\nJOIN LegalDocument ld ON ct.ClientID = ld.CaseID\nJOIN Evidence e ON ld.CaseID = e.CaseID\nGROUP BY c.ClientID, p.FirstName, p.LastName\nHAVING COUNT(DISTINCT e.EvidenceType) >= 2 \n   AND DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) > 30\nORDER BY DocumentPeriod DESC\nLIMIT 6;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT ld.DocumentType) AS DocumentTypeCount,\n    MIN(ld.DocumentDate) AS FirstDocumentDate,\n    MAX(ld.DocumentDate) AS LastDocumentDate,\n    DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) AS DocumentPeriod\nFROM \n    Client c\nJOIN \n    Person p ON c.PersonID = p.PersonID\nJOIN \n    Contract ct ON c.ClientID = ct.ClientID\nJOIN \n    `Cases` cs ON ct.ClientID = cs.CaseID\nJOIN \n    LegalDocument ld ON cs.CaseID = ld.CaseID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nGROUP BY \n    c.ClientID, p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 2\n    AND COUNT(DISTINCT ld.DocumentType) > 1\n    AND DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) > 30\nORDER BY \n    DocumentPeriod DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT ld.DocumentType) AS DocumentTypeCount,\n  MIN(ld.DocumentDate) AS FirstDocumentDate,\n  MAX(ld.DocumentDate) AS LastDocumentDate,\n  JULIANDAY(MAX(ld.DocumentDate)) - JULIANDAY(MIN(ld.DocumentDate)) AS DateDifference\nFROM Client AS c\nJOIN Person AS p\n  ON c.PersonID = p.PersonID\nJOIN `Contract` AS ct\n  ON c.ClientID = ct.ClientID\nJOIN Cases AS ca\n  ON ct.ClientID = ca.CaseID\nJOIN LegalDocument AS ld\n  ON ca.CaseID = ld.CaseID\nWHERE\n  ca.CaseID IN (\n    SELECT\n      e.CaseID\n    FROM Evidence AS e\n    GROUP BY\n      e.CaseID\n    HAVING\n      COUNT(DISTINCT e.EvidenceType) >= 2\n  )\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT ld.DocumentType) >= 2 AND (\n    JULIANDAY(MAX(ld.DocumentDate)) - JULIANDAY(MIN(ld.DocumentDate))\n  ) > 30\nORDER BY\n  DateDifference DESC\nLIMIT 6;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  COUNT(DISTINCT ld.DocumentType) AS DocumentTypeCount,\n  MIN(ld.DocumentDate) AS FirstDocumentDate,\n  MAX(ld.DocumentDate) AS LastDocumentDate,\n  JULIANDAY(MAX(ld.DocumentDate)) - JULIANDAY(MIN(ld.DocumentDate)) AS DateDifference\nFROM Client AS c\nJOIN Person AS p\n  ON c.PersonID = p.PersonID\nJOIN `Contract` AS ct\n  ON c.ClientID = ct.ClientID\nJOIN Cases AS ca\n  ON ct.ClientID = ca.CaseID\nJOIN LegalDocument AS ld\n  ON ca.CaseID = ld.CaseID\nWHERE\n  ca.CaseID IN (\n    SELECT\n      CaseID\n    FROM Evidence\n    GROUP BY\n      CaseID\n    HAVING\n      COUNT(DISTINCT EvidenceType) >= 2\n  )\nGROUP BY\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(DISTINCT ld.DocumentType) >= 2 AND JULIANDAY(MAX(ld.DocumentDate)) - JULIANDAY(MIN(ld.DocumentDate)) > 30\nORDER BY\n  DateDifference DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n  p.FirstName, \n  p.LastName, \n  COUNT(DISTINCT ld.DocumentType) AS DocumentTypes, \n  COUNT(DISTINCT e.EvidenceType) AS EvidenceTypes, \n  DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) AS DocumentPeriod\nFROM \n  Person p\nJOIN \n  Client cl ON p.PersonID = cl.PersonID\nJOIN \n  Contract ct ON cl.ClientID = ct.ClientID\nJOIN \n  Cases c ON ct.ClientID = c.LawyerID\nJOIN \n  LegalDocument ld ON c.CaseID = ld.CaseID\nJOIN \n  Evidence e ON c.CaseID = e.CaseID\nGROUP BY \n  p.FirstName, \n  p.LastName\nHAVING \n  COUNT(DISTINCT ld.DocumentType) >= 2 \n  AND COUNT(DISTINCT e.EvidenceType) >= 2 \n  AND DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) > 30\nORDER BY \n  DocumentPeriod DESC\nLIMIT 6;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT ld.DocumentType) AS UniqueDocumentTypes, \n    COUNT(DISTINCT e.EvidenceType) AS UniqueEvidenceTypes, \n    DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) AS PeriodBetweenFirstAndLastDocument\nFROM \n    Person p\nJOIN \n    Client c ON p.PersonID = c.PersonID\nJOIN \n    Contract ct ON c.ClientID = ct.ClientID\nJOIN \n    `Cases` cs ON ct.ClientID = cs.LawyerID\nJOIN \n    LegalDocument ld ON cs.CaseID = ld.CaseID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    COUNT(DISTINCT ld.DocumentType) >= 2 \n    AND COUNT(DISTINCT e.EvidenceType) >= 2 \n    AND DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) > 30\nORDER BY \n    DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT ld.DocumentType) AS DocumentTypesCount,\n    COUNT(DISTINCT e.EvidenceType) AS EvidenceTypesCount,\n    DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) AS DaysBetweenDocuments\nFROM \n    Person p\nJOIN \n    Client c ON p.PersonID = c.PersonID\nJOIN \n    Contract ct ON c.ClientID = ct.ClientID\nJOIN \n    Cases cs ON ct.ClientID = cs.LawyerID\nJOIN \n    LegalDocument ld ON cs.CaseID = ld.CaseID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nGROUP BY \n    p.PersonID, p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT ld.DocumentType) >= 2 \n    AND COUNT(DISTINCT e.EvidenceType) >= 2\n    AND DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) > 30\nORDER BY \n    DaysBetweenDocuments DESC\nLIMIT 6;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    COUNT(DISTINCT ld.DocumentType) AS DocumentTypesCount,\n    COUNT(DISTINCT e.EvidenceType) AS EvidenceTypesCount,\n    DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) AS DaysBetweenDocuments\nFROM \n    Person p\nJOIN \n    Client c ON p.PersonID = c.PersonID\nJOIN \n    `Cases` cs ON c.ClientID = cs.CaseID\nJOIN \n    LegalDocument ld ON cs.CaseID = ld.CaseID\nJOIN \n    Evidence e ON cs.CaseID = e.CaseID\nGROUP BY \n    p.PersonID, p.FirstName, p.LastName\nHAVING \n    COUNT(DISTINCT e.EvidenceType) >= 2 \n    AND DATEDIFF(MAX(ld.DocumentDate), MIN(ld.DocumentDate)) > 30\nORDER BY \n    DaysBetweenDocuments DESC\nLIMIT 6;",
            "gigachat_response": "WITH ClientDocs AS (\n    SELECT \n        c.ClientID,\n        MIN(d.DocumentDate) AS MinDocDate,\n        MAX(d.DocumentDate) AS MaxDocDate,\n        COUNT(DISTINCT d.DocumentType) AS NumDistinctTypes,\n        COUNT(DISTINCT e.EvidenceType) AS NumDistinctEvidences\n    FROM \n        Client c\n    INNER JOIN \n        Contract co ON c.ClientID = co.ClientID\n    INNER JOIN \n        Cases ca ON co.ClientID = ca.CaseID\n    LEFT JOIN \n        LegalDocument d ON ca.CaseID = d.CaseID\n    LEFT JOIN \n        Evidence e ON ca.CaseID = e.CaseID\n    GROUP BY \n        c.ClientID\n), \nFilteredClients AS (\n    SELECT *\n    FROM ClientDocs\n    WHERE NumDistinctTypes >= 2 \n      AND NumDistinctEvidences >= 2 \n      AND DATEDIFF(MaxDocDate, MinDocDate) > 30\n)\nSELECT \n    p.FirstName, \n    p.LastName, \n    f.NumDistinctTypes, \n    f.NumDistinctEvidences, \n    DATEDIFF(f.MaxDocDate, f.MinDocDate) AS PeriodLength\nFROM \n    FilteredClients f\nINNER JOIN \n    Client c ON f.ClientID = c.ClientID\nINNER JOIN \n    Person p ON c.PersonID = p.PersonID\nORDER BY \n    PeriodLength ASC\nLIMIT 6;",
            "gigachat_response_ru": "WITH ClientDocs AS (\n    SELECT \n        c.ClientID,\n        MIN(d.DocumentDate) AS MinDocDate,\n        MAX(d.DocumentDate) AS MaxDocDate,\n        COUNT(DISTINCT d.DocumentType) AS NumDistinctTypes,\n        COUNT(DISTINCT e.EvidenceType) AS NumDistinctEvidences\n    FROM \n        Client c\n    JOIN \n        Contract co ON c.ClientID = co.ClientID\n    JOIN \n        Cases ca ON co.ClientID = ca.CaseID\n    LEFT JOIN \n        LegalDocument d ON ca.CaseID = d.CaseID\n    LEFT JOIN \n        Evidence e ON ca.CaseID = e.CaseID\n    GROUP BY \n        c.ClientID\n), \nFilteredClients AS (\n    SELECT *\n    FROM ClientDocs\n    WHERE NumDistinctTypes >= 2 \n      AND NumDistinctEvidences >= 2 \n      AND DATEDIFF(MaxDocDate, MinDocDate) > 30\n)\nSELECT \n    p.FirstName, \n    p.LastName, \n    fc.MinDocDate, \n    fc.MaxDocDate, \n    DATEDIFF(fc.MaxDocDate, fc.MinDocDate) AS PeriodLength\nFROM FilteredClients fc\nJOIN Client c ON fc.ClientID = c.ClientID\nJOIN Person p ON c.PersonID = p.PersonID\nORDER BY PeriodLength ASC\nLIMIT 6;"
        },
        {
            "question": "Какие топ-8 адвокатов имеют наименьшую среднюю задержку оплаты после заключения договора, при условии не менее 3 оплат на адвоката, отсортированные по времени задержки?",
            "sql_query": "SELECT p.FirstName, p.LastName, l.ExperienceYears, ROUND(AVG(DATEDIFF(pmt.PaymentDate, ct.ContractDate)),1) AS AvgPaymentDelay, COUNT(pmt.PaymentID) AS TotalPayments FROM Lawyer l JOIN Person p ON l.PersonID = p.PersonID JOIN Contract ct ON l.LawyerID = ct.LawyerID JOIN Payment pmt ON ct.ContractID = pmt.ContractID GROUP BY p.FirstName, p.LastName, l.ExperienceYears HAVING COUNT(pmt.PaymentID) >= 3 ORDER BY AvgPaymentDelay ASC LIMIT 8;",
            "gpt-4o_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    AVG(DATEDIFF(pmt.PaymentDate, ct.ContractDate)) AS AvgPaymentDelay\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nGROUP BY \n    l.LawyerID, p.FirstName, p.LastName, l.LicenseNumber\nHAVING \n    COUNT(pmt.PaymentID) >= 3\nORDER BY \n    AvgPaymentDelay\nLIMIT 8;",
            "gpt-4o_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LawyerID, \n    AVG(DATEDIFF(pmt.PaymentDate, ct.ContractDate)) AS AvgPaymentDelay\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nGROUP BY \n    l.LawyerID, p.FirstName, p.LastName\nHAVING \n    COUNT(pmt.PaymentID) >= 3\nORDER BY \n    AvgPaymentDelay\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.FirstName,\n    p.LastName,\n    AVG(JULIANDAY(pmt.PaymentDate) - JULIANDAY(c.ContractDate)) AS AveragePaymentDelay\nFROM\n    Lawyer l\nJOIN\n    Person p ON l.PersonID = p.PersonID\nJOIN\n    `Contract` c ON l.LawyerID = c.LawyerID\nJOIN\n    Payment pmt ON c.ContractID = pmt.ContractID\nGROUP BY\n    l.LawyerID, p.FirstName, p.LastName\nHAVING\n    COUNT(pmt.PaymentID) >= 3\nORDER BY\n    AveragePaymentDelay\nLIMIT 8;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n  p.FirstName,\n  p.LastName,\n  AVG(JULIANDAY(Payment.PaymentDate) - JULIANDAY(Contract.ContractDate)) AS AvgPaymentDelay\nFROM Lawyer\nJOIN Person AS p\n  ON Lawyer.PersonID = p.PersonID\nJOIN Contract\n  ON Lawyer.LawyerID = Contract.LawyerID\nJOIN Payment\n  ON Contract.ContractID = Payment.ContractID\nGROUP BY\n  Lawyer.LawyerID,\n  p.FirstName,\n  p.LastName\nHAVING\n  COUNT(Payment.PaymentID) >= 3\nORDER BY\n  AvgPaymentDelay\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    l.LawyerID, \n    p.FirstName, \n    p.LastName, \n    AVG(DATEDIFF(pmt.PaymentDate, ct.ContractDate)) AS AvgDelay\nFROM \n    Lawyer l\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nJOIN \n    Person p ON l.PersonID = p.PersonID\nGROUP BY \n    l.LawyerID, p.FirstName, p.LastName\nHAVING \n    COUNT(pmt.PaymentID) >= 3\nORDER BY \n    AvgDelay\nLIMIT 8;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    AVG(DATEDIFF(pmt.PaymentDate, ct.ContractDate)) AS AverageDelay\nFROM \n    Person p\nJOIN \n    Lawyer l ON p.PersonID = l.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nGROUP BY \n    p.FirstName, \n    p.LastName\nHAVING \n    COUNT(pmt.PaymentID) >= 3\nORDER BY \n    AverageDelay\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.LicenseNumber, \n    l.Specialization, \n    AVG(DATEDIFF(pmt.PaymentDate, ct.ContractDate)) AS AvgPaymentDelay\nFROM \n    Person p\nJOIN \n    Lawyer l ON p.PersonID = l.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nGROUP BY \n    p.FirstName, p.LastName, l.LicenseNumber, l.Specialization\nHAVING \n    COUNT(pmt.PaymentID) >= 3\nORDER BY \n    AvgPaymentDelay ASC\nLIMIT 8;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.FirstName, \n    p.LastName, \n    l.Specialization, \n    AVG(DATEDIFF(pmt.PaymentDate, ct.ContractDate)) AS AvgPaymentDelay\nFROM \n    Person p\nJOIN \n    Lawyer l ON p.PersonID = l.PersonID\nJOIN \n    Contract ct ON l.LawyerID = ct.LawyerID\nJOIN \n    Payment pmt ON ct.ContractID = pmt.ContractID\nGROUP BY \n    p.FirstName, p.LastName, l.Specialization\nHAVING \n    COUNT(pmt.PaymentID) >= 3\nORDER BY \n    AvgPaymentDelay ASC\nLIMIT 8;",
            "gigachat_response": "WITH DelayedPayments AS (\n    SELECT \n        c.LawyerID,\n        pmt.PaymentDate,\n        c.ContractDate,\n        TIMESTAMPDIFF(DAY, c.ContractDate, pmt.PaymentDate) AS DaysDelayed\n    FROM \n        Contract c\n    INNER JOIN \n        Payment pmt ON c.ContractID = pmt.ContractID\n), AverageDelays AS (\n    SELECT \n        dp.LawyerID,\n        AVG(dp.DaysDelayed) AS AverageDelay\n    FROM \n        DelayedPayments dp\n    GROUP BY \n        dp.LawyerID\n    HAVING \n        COUNT(*) >= 3 -- Ensure at least 3 payments per lawyer\n)\nSELECT \n    p.FirstName, \n    p.LastName, \n    ad.AverageDelay\nFROM \n    AverageDelays ad\nINNER JOIN \n    Lawyer l ON ad.LawyerID = l.LawyerID\nINNER JOIN \n    Person p ON l.PersonID = p.PersonID\nORDER BY \n    ad.AverageDelay ASC\nLIMIT 8;",
            "gigachat_response_ru": "SELECT \n    CONCAT(p.FirstName, ' ', p.LastName) AS FullName,\n    AVG(DATEDIFF(pmt.PaymentDate, c.ContractDate)) AS AverageDelayInDays\nFROM \n    Lawyer l\nJOIN \n    Person p ON l.PersonID = p.PersonID\nJOIN \n    Contract c ON l.LawyerID = c.LawyerID\nJOIN \n    Payment pmt ON c.ContractID = pmt.ContractID\nGROUP BY \n    l.LawyerID\nHAVING \n    COUNT(pmt.PaymentID) >= 3\nORDER BY \n    AverageDelayInDays ASC\nLIMIT 8;"
        },
        {
            "question": "Какие топ-5 юридических фирм имеют наименьший средний срок вынесения вердиктов по экономическим делам за последние 12 месяцев при наличии более 3 таких вердиктов, отсортированных по среднему сроку (в днях)?",
            "sql_query": "SELECT lf.FirmName, COUNT(v.VerdictID) AS TotalEconVerdicts, ROUND(AVG(DATEDIFF(v.VerdictDate, cs.FilingDate)),1) AS AvgVerdictDelay FROM LawFirm lf JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID JOIN Cases cs ON l.LawyerID = cs.LawyerID JOIN Verdict v ON cs.CaseID = v.CaseID WHERE v.VerdictType = 'Экономическое Дело' AND v.VerdictDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY lf.FirmName HAVING COUNT(v.VerdictID) > 3 ORDER BY AvgVerdictDelay ASC LIMIT 5;",
            "gpt-4o_response": "SELECT lf.FirmName, AVG(DATEDIFF(v.VerdictDate, c.FilingDate)) AS AvgDaysToVerdict\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Verdict v ON c.CaseID = v.CaseID\nWHERE v.VerdictType = 'Экономическое Дело'\nAND v.VerdictDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)\nGROUP BY lf.FirmName\nHAVING COUNT(v.VerdictID) > 3\nORDER BY AvgDaysToVerdict\nLIMIT 5;",
            "gpt-4o_response_ru": "SELECT lf.FirmName, \n       AVG(DATEDIFF(v.VerdictDate, c.FilingDate)) AS AvgDaysToVerdict\nFROM Verdict v\nJOIN Cases c ON v.CaseID = c.CaseID\nJOIN Lawyer l ON c.LawyerID = l.LawyerID\nJOIN LawFirm lf ON l.LawFirmID = lf.LawFirmID\nWHERE v.VerdictType = 'Экономическое Дело'\n  AND v.VerdictDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)\nGROUP BY lf.FirmName\nHAVING COUNT(v.VerdictID) > 3\nORDER BY AvgDaysToVerdict\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    lf.FirmName,\n    AVG(JULIANDAY(v.VerdictDate) - JULIANDAY(c.FilingDate)) AS AvgVerdictTime\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Verdict v ON c.CaseID = v.CaseID\nWHERE\n    c.CaseType = 'Экономическое дело'\n    AND v.VerdictDate BETWEEN DATE('now', '-12 months') AND DATE('now')\nGROUP BY\n    lf.FirmName\nHAVING\n    COUNT(v.VerdictID) > 3\nORDER BY\n    AvgVerdictTime\nLIMIT 5;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    lf.FirmName,\n    AVG(JULIANDAY(v.VerdictDate) - JULIANDAY(c.FilingDate)) AS AvgVerdictTime\nFROM LawFirm lf\nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN Cases c ON l.LawyerID = c.LawyerID\nJOIN Verdict v ON c.CaseID = v.CaseID\nWHERE c.CaseType = 'Экономическое дело'\n  AND v.VerdictDate BETWEEN DATE('now', '-12 months') AND DATE('now')\nGROUP BY lf.FirmName\nHAVING COUNT(v.VerdictID) > 3\nORDER BY AvgVerdictTime\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    lf.FirmName, \n    AVG(DATEDIFF(v.VerdictDate, c.FilingDate)) AS AvgVerdictDuration,\n    COUNT(DISTINCT v.VerdictID) AS TotalVerdicts\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    c.CaseType = 'Экономическое дело'\n    AND v.VerdictDate >= NOW() - INTERVAL 1 YEAR\nGROUP BY \n    lf.FirmName\nHAVING \n    COUNT(DISTINCT v.VerdictID) > 3\nORDER BY \n    AvgVerdictDuration ASC\nLIMIT 5;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    lf.FirmName, \n    AVG(DATEDIFF(v.VerdictDate, c.FilingDate)) AS AverageVerdictDuration\nFROM \n    LawFirm lf\nJOIN \n    Lawyer l ON lf.LawFirmID = l.LawFirmID\nJOIN \n    `Cases` c ON l.LawyerID = c.LawyerID\nJOIN \n    Verdict v ON c.CaseID = v.CaseID\nWHERE \n    c.CaseType = 'Экономическое дело' \n    AND v.VerdictDate >= NOW() - INTERVAL 1 YEAR\nGROUP BY \n    lf.FirmName\nHAVING \n    COUNT(v.VerdictID) > 3\nORDER BY \n    AverageVerdictDuration\nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT lf.FirmName, AVG(DATEDIFF(v.VerdictDate, c.FilingDate)) AS AvgDaysToVerdict \nFROM LawFirm lf \nJOIN Lawyer l ON lf.LawFirmID = l.LawFirmID \nJOIN Cases c ON l.LawyerID = c.LawyerID \nJOIN Verdict v ON c.CaseID = v.CaseID \nWHERE v.VerdictType = 'Экономическое Дело' \nAND v.VerdictDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH) \nGROUP BY lf.FirmName \nHAVING COUNT(v.VerdictID) > 3 \nORDER BY AvgDaysToVerdict ASC \nLIMIT 5;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    lf.FirmName,\n    AVG(DATEDIFF(v.VerdictDate, c.FilingDate)) AS AvgVerdictDays\nFROM \n    LawFirm lf\n    JOIN Lawyer l ON lf.LawFirmID = l.LawFirmID\n    JOIN `Cases` c ON l.LawyerID = c.LawyerID\n    JOIN Verdict v ON c.CaseID = v.CaseID\nWHERE \n    v.VerdictType = 'Экономическое Дело'\n    AND v.VerdictDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH)\nGROUP BY \n    lf.FirmName\nHAVING \n    COUNT(v.VerdictID) > 3\nORDER BY \n    AvgVerdictDays ASC\nLIMIT 5;",
            "gigachat_response": "WITH EconomicVerdicts AS (\n    SELECT v.VerdictID, c.CaseID, v.JudgeID, v.VerdictDate, c.FilingDate,\n           TIMESTAMPDIFF(DAY, c.FilingDate, v.VerdictDate) AS DaysToVerdict,\n           j.CourtID\n    FROM Verdict v\n    INNER JOIN Cases c ON v.CaseID = c.CaseID\n    INNER JOIN Judge j ON v.JudgeID = j.JudgeID\n    WHERE c.CaseType = 'Экономическое Дело'\n      AND YEAR(v.VerdictDate) >= YEAR(NOW()) - 1 -- Filter verdicts from the past year\n), FirmVerdictCounts AS (\n    SELECT lf.LawFirmID, COUNT(*) AS NumEconomicVerdicts\n    FROM EconomicVerdicts ev\n    INNER JOIN Court co ON ev.CourtID = co.CourtID\n    INNER JOIN Judge ju ON ev.JudgeID = ju.JudgeID\n    INNER JOIN Lawyer lw ON ju.PersonID = lw.PersonID\n    INNER JOIN LawFirm lf ON lw.LawFirmID = lf.LawFirmID\n    GROUP BY lf.LawFirmID\n    HAVING COUNT(*) > 3 -- Only firms with more than 3 economic verdicts\n), AverageDaysPerFirm AS (\n    SELECT lf.LawFirmID, AVG(ev.DaysToVerdict) AS AverageDays\n    FROM EconomicVerdicts ev\n    INNER JOIN Court co ON ev.CourtID = co.CourtID\n    INNER JOIN Judge ju ON ev.JudgeID = ju.JudgeID\n    INNER JOIN Lawyer lw ON ju.PersonID = lw.PersonID\n    INNER JOIN LawFirm lf ON lw.LawFirmID = lf.LawFirmID\n    GROUP BY lf.LawFirmID\n)\nSELECT lv.LawFirmID, lf.FirmName, AVG(AverageDays) AS AverageDaysToVerdict\nFROM AverageDaysPerFirm adpf\nINNER JOIN FirmVerdictCounts fvc ON adpf.LawFirmID = fvc.LawFirmID\nINNER JOIN LawFirm lf ON adpf.LawFirmID = lf.LawFirmID\nGROUP BY lv.LawFirmID, lf.FirmName\nORDER BY AverageDays ASC\nLIMIT 5;",
            "gigachat_response_ru": "WITH EconomicVerdicts AS (\n    SELECT v.VerdictID, c.CourtID, v.JudgeID, v.VerdictDate, c.FilingDate,\n           TIMESTAMPDIFF(DAY, c.FilingDate, v.VerdictDate) AS DaysToVerdict\n    FROM Verdict v\n    JOIN Cases c ON v.CaseID = c.CaseID\n    WHERE v.VerdictType = 'Экономическое Дело'\n      AND YEAR(v.VerdictDate) >= YEAR(NOW()) - 1 -- Последние 12 месяцев\n), JudgesWithEconomicVerdicts AS (\n    SELECT j.JudgeID, j.CourtID, COUNT(*) AS NumOfVerdicts\n    FROM EconomicVerdicts ev\n    JOIN Judge j ON ev.JudgeID = j.JudgeID\n    GROUP BY j.JudgeID, j.CourtID\n    HAVING COUNT(*) > 3 -- Более трех экономических дел\n), AverageDaysPerCourt AS (\n    SELECT e.CourtID, AVG(e.DaysToVerdict) AS AverageDays\n    FROM EconomicVerdicts e\n    JOIN JudgesWithEconomicVerdicts jwev ON e.CourtID = jwev.CourtID\n    GROUP BY e.CourtID\n), CourtsWithLawFirms AS (\n    SELECT DISTINCT c.CourtID, lf.LawFirmID\n    FROM Court c\n    JOIN Cases ca ON c.CourtID = ca.CourtID\n    JOIN Lawyer lw ON ca.LawyerID = lw.LawyerID\n    JOIN LawFirm lf ON lw.LawFirmID = lf.LawFirmID\n)\nSELECT lf.FirmName, adpc.AverageDays\nFROM AverageDaysPerCourt adpc\nJOIN CourtsWithLawFirms clf ON adpc.CourtID = clf.CourtID\nJOIN LawFirm lf ON clf.LawFirmID = lf.LawFirmID\nORDER BY adpc.AverageDays ASC\nLIMIT 5;"
        },
        {
            "question": "Какие топ-7 способов оплаты имеют наиболее разнообразное применение по типам дел при средней сумме платежей более 1000 за последние 12 месяцев, отсортированных по количеству различных типов дел?",
            "sql_query": "SELECT pmt.PaymentMethod, COUNT(DISTINCT cs.CaseType) AS DistinctCaseTypes, ROUND(AVG(pmt.Amount),2) AS AvgPayment FROM Payment pmt JOIN Contract ct ON pmt.ContractID = ct.ContractID JOIN Cases cs ON ct.ClientID = cs.CaseID WHERE pmt.PaymentDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY pmt.PaymentMethod HAVING AVG(pmt.Amount) > 1000 ORDER BY DistinctCaseTypes DESC LIMIT 7;",
            "gpt-4o_response": "SELECT pmt.PaymentMethod, COUNT(DISTINCT c.CaseType) AS UniqueCaseTypes\nFROM Payment pmt\nJOIN `Contract` ct ON pmt.ContractID = ct.ContractID\nJOIN Cases c ON ct.ClientID = c.CaseID\nWHERE pmt.PaymentDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)\nGROUP BY pmt.PaymentMethod\nHAVING AVG(pmt.Amount) > 1000\nORDER BY UniqueCaseTypes DESC\nLIMIT 7;",
            "gpt-4o_response_ru": "SELECT \n    pmt.PaymentMethod, \n    COUNT(DISTINCT c.CaseType) AS UniqueCaseTypes\nFROM \n    Payment pmt\nJOIN \n    `Contract` ct ON pmt.ContractID = ct.ContractID\nJOIN \n    Cases c ON ct.ClientID = c.CaseID\nWHERE \n    pmt.PaymentDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH)\nGROUP BY \n    pmt.PaymentMethod\nHAVING \n    AVG(pmt.Amount) > 1000\nORDER BY \n    UniqueCaseTypes DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response": "SELECT\n    p.PaymentMethod,\n    COUNT(DISTINCT ca.CaseType) AS NumberOfCaseTypes,\n    AVG(p.Amount) AS AveragePayment\nFROM\n    Payment p\nJOIN\n    `Contract` co ON p.ContractID = co.ContractID\nJOIN\n    Cases ca ON co.ClientID = ca.CaseID\nWHERE\n    p.PaymentDate >= DATE('now', '-12 months')\nGROUP BY\n    p.PaymentMethod\nHAVING\n    AVG(p.Amount) > 1000\nORDER BY\n    NumberOfCaseTypes DESC\nLIMIT 7;",
            "google/gemini-2.0-flash-001_response_ru": "SELECT\n    p.PaymentMethod,\n    COUNT(DISTINCT ca.CaseType) AS CaseTypeCount\nFROM Payment p\nJOIN `Contract` co ON p.ContractID = co.ContractID\nJOIN Client cl ON co.ClientID = cl.ClientID\nJOIN Cases ca ON co.ClientID = ca.CaseID\nWHERE p.PaymentDate >= DATE('now', '-12 months')\nGROUP BY p.PaymentMethod\nHAVING AVG(p.Amount) > 1000\nORDER BY CaseTypeCount DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response": "SELECT \n    pmt.PaymentMethod, \n    COUNT(DISTINCT c.CaseType) AS TotalCaseTypes, \n    AVG(pmt.Amount) AS AvgPaymentAmount\nFROM \n    Payment pmt\nJOIN \n    Contract ct ON pmt.ContractID = ct.ContractID\nJOIN \n    Client cl ON ct.ClientID = cl.ClientID\nJOIN \n    Cases c ON cl.ClientID = c.LawyerID\nWHERE \n    pmt.PaymentDate >= NOW() - INTERVAL 1 YEAR\n    AND pmt.Amount > 1000\nGROUP BY \n    pmt.PaymentMethod\nORDER BY \n    TotalCaseTypes DESC\nLIMIT 7;",
            "meta-llama/llama-3.3-70b-instruct_response_ru": "SELECT \n    pmt.PaymentMethod, \n    COUNT(DISTINCT c.CaseType) AS UniqueCaseTypes, \n    AVG(pmt.Amount) AS AvgPaymentAmount\nFROM \n    Payment pmt\nJOIN \n    Contract ct ON pmt.ContractID = ct.ContractID\nJOIN \n    Client cl ON ct.ClientID = cl.ClientID\nJOIN \n    `Cases` c ON cl.ClientID = c.LawyerID\nWHERE \n    pmt.PaymentDate >= NOW() - INTERVAL 1 YEAR\n    AND pmt.Amount > 1000\nGROUP BY \n    pmt.PaymentMethod\nORDER BY \n    UniqueCaseTypes DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response": "SELECT \n    p.PaymentMethod, \n    COUNT(DISTINCT c.CaseType) AS DifferentCaseTypes,\n    AVG(p.Amount) AS AveragePaymentAmount\nFROM \n    Payment p\nJOIN \n    `Contract` ct ON p.ContractID = ct.ContractID\nJOIN \n    `Cases` c ON ct.LawyerID = c.LawyerID\nWHERE \n    p.PaymentDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH)\nGROUP BY \n    p.PaymentMethod\nHAVING \n    AVG(p.Amount) > 1000\nORDER BY \n    COUNT(DISTINCT c.CaseType) DESC\nLIMIT 7;",
            "deepseek/deepseek-chat-v3-0324_response_ru": "SELECT \n    p.PaymentMethod,\n    COUNT(DISTINCT c.CaseType) AS DifferentCaseTypesCount,\n    AVG(p.Amount) AS AveragePaymentAmount\nFROM \n    Payment p\nJOIN \n    `Contract` ct ON p.ContractID = ct.ContractID\nJOIN \n    `Cases` c ON ct.LawyerID = c.LawyerID\nWHERE \n    p.PaymentDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 12 MONTH)\nGROUP BY \n    p.PaymentMethod\nHAVING \n    AVG(p.Amount) > 1000\nORDER BY \n    DifferentCaseTypesCount DESC\nLIMIT 7;",
            "gigachat_response": "WITH PaymentsByCaseTypes AS (\n    SELECT \n        pmt.PaymentMethod,\n        c.CaseType,\n        AVG(pmt.Amount) AS AveragePaymentAmount\n    FROM \n        Payment pmt\n        INNER JOIN Contract ct ON pmt.ContractID = ct.ContractID\n        INNER JOIN Cases c ON ct.ClientID = c.CaseID\n    WHERE \n        pmt.PaymentDate >= DATE_SUB(NOW(), INTERVAL 1 YEAR)\n    GROUP BY \n        pmt.PaymentMethod, c.CaseType\n), \nUniqueCaseTypesPerPaymentMethod AS (\n    SELECT \n        PaymentMethod,\n        COUNT(DISTINCT CaseType) AS NumDistinctCaseTypes\n    FROM \n        PaymentsByCaseTypes\n    WHERE \n        AveragePaymentAmount > 1000\n    GROUP BY \n        PaymentMethod\n)\nSELECT \n    PaymentMethod,\n    NumDistinctCaseTypes\nFROM \n    UniqueCaseTypesPerPaymentMethod\nORDER BY \n    NumDistinctCaseTypes DESC\nLIMIT 7;",
            "gigachat_response_ru": "SELECT \n    pmt.PaymentMethod,\n    COUNT(DISTINCT c.CaseType) AS NumDistinctCaseTypes\nFROM \n    Payment pmt\nJOIN \n    Contract ct ON pmt.ContractID = ct.ContractID\nJOIN \n    Cases c ON ct.ClientID = c.CaseID\nWHERE \n    pmt.PaymentDate >= DATE_SUB(NOW(), INTERVAL 1 YEAR) -- платежи за последний год\nAND \n    pmt.Amount > 1000 -- средняя сумма платежа больше 1000\nGROUP BY \n    pmt.PaymentMethod\nORDER BY \n    NumDistinctCaseTypes DESC\nLIMIT 7;"
        }
    ]
}