{
    "queries": [
        {
            "question": "Какие компании в Москве имеют общий бюджет проектов более 100 миллионов?",
            "sql_query": "SELECT c.CompanyName, SUM(p.Budget) AS TotalBudget FROM Clients c JOIN Projects p ON c.ClientID = p.ClientID WHERE c.City = 'Москва' GROUP BY c.CompanyName HAVING SUM(p.Budget) > 100000000;"
        },
        {
            "question": "Какие поставщики из России поставляют более пяти видов материалов?",
            "sql_query": "SELECT s.SupplierName, COUNT(m.MaterialID) AS MaterialCount FROM Suppliers s JOIN Materials m ON s.SupplierID = m.SupplierID WHERE s.Country = 'Россия' GROUP BY s.SupplierName HAVING COUNT(m.MaterialID) > 5;"
        },
        {
            "question": "Какие архитекторы получили более одной награды после 2010 года?",
            "sql_query": "SELECT a.FirstName, a.LastName, COUNT(aw.AwardID) AS AwardCount FROM Architects a JOIN Awards aw ON a.ArchitectID = aw.ArchitectID WHERE aw.Year > 2010 GROUP BY a.FirstName, a.LastName HAVING COUNT(aw.AwardID) > 1;"
        },
        {
            "question": "Какие проекты имеют более двух успешных инспекций?",
            "sql_query": "SELECT p.ProjectName, COUNT(i.InspectionID) AS InspectionCount FROM Projects p JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE i.Result = 'Успешно' GROUP BY p.ProjectName HAVING COUNT(i.InspectionID) > 2;"
        },
        {
            "question": "Какие дизайны в стиле модерн имеют более одного здания?",
            "sql_query": "SELECT d.DesignName, COUNT(b.BuildingID) AS BuildingCount FROM Designs d JOIN Projects p ON d.ProjectID = p.ProjectID JOIN Buildings b ON p.ProjectID = b.ProjectID WHERE d.Style = 'Модерн' GROUP BY d.DesignName HAVING COUNT(b.BuildingID) > 1;"
        },
        {
            "question": "Какие компании имеют средний расход более 10 тысяч?",
            "sql_query": "SELECT c.CompanyName, AVG(f.Amount) AS AvgTransaction FROM Clients c JOIN Projects p ON c.ClientID = p.ClientID JOIN Finances f ON p.ProjectID = f.ProjectID WHERE f.Amount < 0 GROUP BY c.CompanyName HAVING AVG(f.Amount) < -10000;"
        },
        {
            "question": "Какие материалы в Москве имеют общий запас более 1000 единиц?",
            "sql_query": "SELECT m.MaterialName, SUM(m.QuantityInStock) AS TotalStock FROM Materials m JOIN Suppliers s ON m.SupplierID = s.SupplierID WHERE s.City = 'Москва' GROUP BY m.MaterialName HAVING SUM(m.QuantityInStock) > 1000;"
        },
        {
            "question": "Какие проекты имеют более одного действующего разрешения?",
            "sql_query": "SELECT p.ProjectName, COUNT(pe.PermitID) AS PermitCount FROM Projects p JOIN Permits pe ON p.ProjectID = pe.ProjectID WHERE pe.Status = 'Действующий' GROUP BY p.ProjectName HAVING COUNT(pe.PermitID) > 1;"
        },
        {
            "question": "Какие поставщики имеют более двух единиц оборудования в эксплуатации?",
            "sql_query": "SELECT s.SupplierName, COUNT(e.EquipmentID) AS EquipmentCount FROM Suppliers s JOIN Equipment e ON s.SupplierID = e.SupplierID WHERE e.Status = 'В эксплуатации' GROUP BY s.SupplierName HAVING COUNT(e.EquipmentID) > 2;"
        },
        {
            "question": "Какие проекты имеют общий доход более 150 тысяч?",
            "sql_query": "SELECT p.ProjectName, SUM(f.Amount) AS TotalIncome FROM Projects p JOIN Finances f ON p.ProjectID = f.ProjectID WHERE f.Amount > 0 GROUP BY p.ProjectName HAVING SUM(f.Amount) > 150000;"
        },
        {
            "question": "Какие компании имеют более одного контракта по консультированию?",
            "sql_query": "SELECT c.CompanyName, COUNT(co.ContractID) AS ContractCount FROM Clients c JOIN Contracts co ON c.ClientID = co.ClientID WHERE co.Terms LIKE '%Консультирование%' GROUP BY c.CompanyName HAVING COUNT(co.ContractID) > 1;"
        },
        {
            "question": "Какие архитекторы в стиле минимализм имеют более одного дизайна?",
            "sql_query": "SELECT a.FirstName, a.LastName, COUNT(d.DesignID) AS DesignCount FROM Architects a JOIN Designs d ON a.ArchitectID = d.ArchitectID WHERE d.Style = 'Минимализм' GROUP BY a.FirstName, a.LastName HAVING COUNT(d.DesignID) > 1;"
        },
        {
            "question": "Какие проекты имеют более одной неудовлетворительной инспекции?",
            "sql_query": "SELECT p.ProjectName, COUNT(i.InspectionID) AS InspectionCount FROM Projects p JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE i.Result = 'Неуспешно' GROUP BY p.ProjectName HAVING COUNT(i.InspectionID) > 1;"
        },
        {
            "question": "Какие поставщики имеют среднюю стоимость материалов более 1000 при качестве выше 8?",
            "sql_query": "SELECT s.SupplierName, AVG(m.CostPerUnit) AS AvgCost FROM Suppliers s JOIN Materials m ON s.SupplierID = m.SupplierID WHERE m.QualityRating > 8 GROUP BY s.SupplierName HAVING AVG(m.CostPerUnit) > 1000;"
        },
        {
            "question": "Какие инженеры участвуют более чем в одном проекте?",
            "sql_query": "SELECT e.FirstName, e.LastName, COUNT(p.ProjectID) AS ProjectCount FROM Employees e JOIN Departments d ON e.DepartmentID = d.DepartmentID JOIN Projects p ON d.DepartmentID = p.ProjectID WHERE e.Position = 'Инженер' GROUP BY e.FirstName, e.LastName HAVING COUNT(p.ProjectID) > 1;"
        },
        {
            "question": "Какие здания в Санкт-Петербурге имеют среднее количество этажей более 40?",
            "sql_query": "SELECT b.BuildingName, AVG(b.Floors) AS AvgFloors FROM Buildings b JOIN Projects p ON b.ProjectID = p.ProjectID WHERE p.Location = 'Санкт-Петербург' GROUP BY b.BuildingName HAVING AVG(b.Floors) > 40;"
        },
        {
            "question": "Какие проекты имеют более трех успешных инспекций?",
            "sql_query": "SELECT p.ProjectName, COUNT(i.InspectionID) AS InspectionCount FROM Projects p JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE i.Result = 'Успешно' GROUP BY p.ProjectName HAVING COUNT(i.InspectionID) > 3;"
        },
        {
            "question": "Какие поставщики имеют среднюю стоимость материалов более 800 при качестве выше 7?",
            "sql_query": "SELECT s.SupplierName, AVG(m.CostPerUnit) AS AvgCost FROM Suppliers s JOIN Materials m ON s.SupplierID = m.SupplierID WHERE m.QualityRating > 7 GROUP BY s.SupplierName HAVING AVG(m.CostPerUnit) > 800;"
        },
        {
            "question": "Какие материалы из России имеют общий запас более 300 единиц?",
            "sql_query": "SELECT m.MaterialName, SUM(m.QuantityInStock) AS TotalStock FROM Materials m JOIN Suppliers s ON m.SupplierID = s.SupplierID WHERE s.Country = 'Россия' GROUP BY m.MaterialName HAVING SUM(m.QuantityInStock) > 300;"
        },
        {
            "question": "Какие поставщики материалов с качеством выше 8 поставляют материалы для проектов в Москве и Санкт-Петербурге? Показать топ-5 по средней стоимости материалов.",
            "sql_query": "SELECT s.SupplierName, AVG(m.CostPerUnit) AS AvgCost, COUNT(DISTINCT p.ProjectID) AS ProjectCount FROM Suppliers s JOIN Materials m ON s.SupplierID = m.SupplierID JOIN Projects p ON p.Location IN ('Москва', 'Санкт-Петербург') WHERE m.QualityRating > 8 GROUP BY s.SupplierName HAVING COUNT(DISTINCT p.ProjectID) > 0 ORDER BY AvgCost DESC LIMIT 5;"
        },
        {
            "question": "Какие проекты имеют более одного действующего разрешения и успешную инспекцию, при этом их бюджет превышает средний бюджет по всем проектам? Показать топ-4 результата.",
            "sql_query": "SELECT p.ProjectName, p.Budget, COUNT(pe.PermitID) AS PermitCount FROM Projects p JOIN Permits pe ON p.ProjectID = pe.ProjectID JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE pe.Status = 'Действующий' AND i.Result = 'Успешно' AND p.Budget > (SELECT AVG(Budget) FROM Projects) GROUP BY p.ProjectName, p.Budget HAVING COUNT(pe.PermitID) > 1 ORDER BY p.Budget DESC LIMIT 4;"
        },
        {
            "question": "Какие архитекторы, специализирующиеся на жилищной архитектуре, имеют награды после 2010 года и работают над проектами с бюджетом более 50 миллионов? Показать топ-3 результата.",
            "sql_query": "SELECT DISTINCT a.FirstName, a.LastName, a.Specialization, COUNT(aw.AwardID) AS AwardCount, SUM(p.Budget) AS TotalBudget FROM Architects a JOIN Awards aw ON a.ArchitectID = aw.ArchitectID JOIN Projects p ON a.ArchitectID = p.ArchitectID WHERE a.Specialization = 'Жилищная архитектура' AND aw.Year > 2010 AND p.Budget > 50000000 GROUP BY a.FirstName, a.LastName, a.Specialization HAVING COUNT(aw.AwardID) > 0 ORDER BY TotalBudget DESC LIMIT 3;"
        },
        {
            "question": "Какие проекты имеют оборудование в эксплуатации стоимостью более 500 тысяч рублей и успешные инспекции? Показать топ-5 по общей стоимости оборудования.",
            "sql_query": "SELECT p.ProjectName, SUM(e.Cost) AS TotalEquipmentCost, COUNT(DISTINCT i.InspectionID) AS SuccessfulInspections FROM Projects p JOIN Equipment e ON e.Status = 'в эксплуатации' JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE e.Cost > 500000 AND i.Result = 'Успешно' GROUP BY p.ProjectName HAVING COUNT(DISTINCT i.InspectionID) > 0 ORDER BY TotalEquipmentCost DESC LIMIT 5;"
        },
        {
            "question": "Какие проекты имеют более двух успешных инспекций, оборудование стоимостью более 700 тысяч рублей и действующие разрешения? Показать топ-4 по общему бюджету.",
            "sql_query": "SELECT p.ProjectName, p.Budget, COUNT(DISTINCT i.InspectionID) AS SuccessfulInspections, COUNT(DISTINCT pe.PermitID) AS ActivePermits, SUM(e.Cost) AS EquipmentCost FROM Projects p JOIN Inspections i ON p.ProjectID = i.ProjectID JOIN Permits pe ON p.ProjectID = pe.ProjectID JOIN Equipment e ON e.Status = 'в эксплуатации' WHERE i.Result = 'Успешно' AND pe.Status = 'Действующий' AND e.Cost > 700000 GROUP BY p.ProjectName, p.Budget HAVING COUNT(DISTINCT i.InspectionID) > 2 AND COUNT(DISTINCT pe.PermitID) > 0 ORDER BY p.Budget DESC LIMIT 4;"
        },
        {
            "question": "Какие архитекторы, работающие над проектами в стиле 'Современный' или 'Классический', имеют награды после 2012 года и средний бюджет проектов более 80 миллионов? Показать топ-3 результата.",
            "sql_query": "SELECT a.FirstName, a.LastName, COUNT(DISTINCT aw.AwardID) AS AwardCount, AVG(p.Budget) AS AvgBudget FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Designs d ON p.ProjectID = d.ProjectID JOIN Awards aw ON a.ArchitectID = aw.ArchitectID WHERE d.Style IN ('Современный', 'Классический') AND aw.Year > 2012 GROUP BY a.FirstName, a.LastName HAVING AVG(p.Budget) > 80000000 ORDER BY AwardCount DESC, AvgBudget DESC LIMIT 3;"
        },
        {
            "question": "Какие поставщики, поставляющие материалы с качеством выше 7, имеют оборудование в эксплуатации и работают над проектами с успешными инспекциями? Показать топ-5 по общему количеству проектов.",
            "sql_query": "SELECT s.SupplierName, COUNT(DISTINCT p.ProjectID) AS ProjectCount, COUNT(DISTINCT e.EquipmentID) AS EquipmentCount FROM Suppliers s JOIN Materials m ON s.SupplierID = m.SupplierID JOIN Projects p ON p.Location IN (SELECT DISTINCT Location FROM Projects) JOIN Equipment e ON s.SupplierID = e.SupplierID JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE m.QualityRating > 7 AND e.Status = 'в эксплуатации' AND i.Result = 'Успешно' GROUP BY s.SupplierName HAVING COUNT(DISTINCT p.ProjectID) > 0 ORDER BY ProjectCount DESC LIMIT 5;"
        },
        {
            "question": "Какие проекты имеют более одного действующего разрешения, успешные инспекции и используют материалы с качеством выше 8? Показать топ-4 по общей стоимости материалов.",
            "sql_query": "SELECT p.ProjectName, COUNT(DISTINCT pe.PermitID) AS PermitCount, COUNT(DISTINCT i.InspectionID) AS SuccessfulInspections, SUM(m.CostPerUnit * m.QuantityInStock) AS TotalMaterialCost FROM Projects p JOIN Permits pe ON p.ProjectID = pe.ProjectID JOIN Inspections i ON p.ProjectID = i.ProjectID JOIN Materials m ON m.QualityRating > 8 WHERE pe.Status = 'Действующий' AND i.Result = 'Успешно' GROUP BY p.ProjectName HAVING COUNT(DISTINCT pe.PermitID) > 1 AND COUNT(DISTINCT i.InspectionID) > 0 ORDER BY TotalMaterialCost DESC LIMIT 4;"
        },
        {
            "question": "Какие архитекторы, специализирующиеся на жилищной или ландшафтной архитектуре, имеют проекты с бюджетом более 100 миллионов и успешные инспекции? Показать топ-3 по общему количеству успешных инспекций.",
            "sql_query": "SELECT a.FirstName, a.LastName, a.Specialization, COUNT(DISTINCT i.InspectionID) AS SuccessfulInspections, SUM(p.Budget) AS TotalBudget FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE a.Specialization IN ('Жилищная архитектура', 'Ландшафтная архитектура') AND p.Budget > 100000000 AND i.Result = 'Успешно' GROUP BY a.FirstName, a.LastName, a.Specialization HAVING COUNT(DISTINCT i.InspectionID) > 0 ORDER BY SuccessfulInspections DESC LIMIT 3;"
        },
        {
            "question": "Какие проекты имеют оборудование в эксплуатации стоимостью более 800 тысяч рублей, успешные инспекции и используют материалы с качеством выше 8? Показать топ-5 по общему бюджету и количеству успешных инспекций.",
            "sql_query": "SELECT p.ProjectName, p.Budget, COUNT(DISTINCT i.InspectionID) AS SuccessfulInspections, SUM(e.Cost) AS TotalEquipmentCost FROM Projects p JOIN Equipment e ON e.Status = 'в эксплуатации' JOIN Inspections i ON p.ProjectID = i.ProjectID JOIN Materials m ON m.QualityRating > 8 WHERE e.Cost > 800000 AND i.Result = 'Успешно' GROUP BY p.ProjectName, p.Budget HAVING COUNT(DISTINCT i.InspectionID) > 0 ORDER BY p.Budget DESC, SuccessfulInspections DESC LIMIT 5;"
        },
        {
            "question": "Какие архитекторы, имеющие более 20 лет опыта и награды после 2010 года, работают над проектами в стиле 'Современный' или 'Классический' с бюджетом более 150 миллионов? Показать топ-4 по общему количеству проектов.",
            "sql_query": "SELECT a.FirstName, a.LastName, a.YearsOfExperience, COUNT(DISTINCT p.ProjectID) AS ProjectCount, SUM(p.Budget) AS TotalBudget FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Designs d ON p.ProjectID = d.ProjectID JOIN Awards aw ON a.ArchitectID = aw.ArchitectID WHERE a.YearsOfExperience > 20 AND aw.Year > 2010 AND d.Style IN ('Современный', 'Классический') AND p.Budget > 150000000 GROUP BY a.FirstName, a.LastName, a.YearsOfExperience HAVING COUNT(DISTINCT p.ProjectID) > 0 ORDER BY ProjectCount DESC LIMIT 4;"
        },
        {
            "question": "Какие поставщики, имеющие оборудование в эксплуатации и поставляющие материалы с качеством выше 8, работают над проектами с успешными инспекциями и действующими разрешениями? Показать топ-3 по средней стоимости материалов.",
            "sql_query": "SELECT s.SupplierName, AVG(m.CostPerUnit) AS AvgMaterialCost, COUNT(DISTINCT p.ProjectID) AS ProjectCount FROM Suppliers s JOIN Materials m ON s.SupplierID = m.SupplierID JOIN Equipment e ON s.SupplierID = e.SupplierID JOIN Projects p ON p.Location IN (SELECT DISTINCT Location FROM Projects) JOIN Inspections i ON p.ProjectID = i.ProjectID JOIN Permits pe ON p.ProjectID = pe.ProjectID WHERE m.QualityRating > 8 AND e.Status = 'в эксплуатации' AND i.Result = 'Успешно' AND pe.Status = 'Действующий' GROUP BY s.SupplierName HAVING COUNT(DISTINCT p.ProjectID) > 0 ORDER BY AvgMaterialCost DESC LIMIT 3;"
        },
        {
            "question": "Какие проекты имеют более двух успешных инспекций, оборудование стоимостью более 900 тысяч рублей и используют материалы с качеством выше 8? Показать топ-4 по общему количеству материалов.",
            "sql_query": "SELECT p.ProjectName, COUNT(DISTINCT i.InspectionID) AS SuccessfulInspections, SUM(m.QuantityInStock) AS TotalMaterials, SUM(e.Cost) AS EquipmentCost FROM Projects p JOIN Inspections i ON p.ProjectID = i.ProjectID JOIN Materials m ON m.QualityRating > 8 JOIN Equipment e ON e.Status = 'в эксплуатации' WHERE i.Result = 'Успешно' AND e.Cost > 900000 GROUP BY p.ProjectName HAVING COUNT(DISTINCT i.InspectionID) > 2 ORDER BY TotalMaterials DESC LIMIT 4;"
        },
        {
            "question": "Какие проекты имеют оборудование в эксплуатации стоимостью более 1 миллиона рублей, успешные инспекции, действующие разрешения и используют материалы с качеством выше 8? Показать топ-4 по общему бюджету и количеству успешных инспекций.",
            "sql_query": "SELECT p.ProjectName, p.Budget, COUNT(DISTINCT i.InspectionID) AS SuccessfulInspections, COUNT(DISTINCT pe.PermitID) AS ActivePermits, SUM(e.Cost) AS TotalEquipmentCost FROM Projects p JOIN Equipment e ON e.Status = 'в эксплуатации' JOIN Inspections i ON p.ProjectID = i.ProjectID JOIN Permits pe ON p.ProjectID = pe.ProjectID JOIN Materials m ON m.QualityRating > 8 WHERE e.Cost > 1000000 AND i.Result = 'Успешно' AND pe.Status = 'Действующий' GROUP BY p.ProjectName, p.Budget HAVING COUNT(DISTINCT i.InspectionID) > 0 AND COUNT(DISTINCT pe.PermitID) > 0 ORDER BY p.Budget DESC, SuccessfulInspections DESC LIMIT 4;"
        },
        {
            "question": "Какие архитекторы, имеющие более 25 лет опыта и награды после 2011 года, работают над проектами в стиле 'Современный' или 'Классический' с бюджетом более 180 миллионов? Показать топ-3 по общему количеству проектов и наград.",
            "sql_query": "SELECT a.FirstName, a.LastName, a.YearsOfExperience, COUNT(DISTINCT p.ProjectID) AS ProjectCount, COUNT(DISTINCT aw.AwardID) AS AwardCount FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Designs d ON p.ProjectID = d.ProjectID JOIN Awards aw ON a.ArchitectID = aw.ArchitectID WHERE a.YearsOfExperience > 25 AND aw.Year > 2011 AND d.Style IN ('Современный', 'Классический') AND p.Budget > 180000000 GROUP BY a.FirstName, a.LastName, a.YearsOfExperience HAVING COUNT(DISTINCT p.ProjectID) > 0 ORDER BY ProjectCount DESC, AwardCount DESC LIMIT 3;"
        },
        {
            "question": "Какие проекты имеют соотношение бюджета к количеству успешных инспекций выше среднего по всем проектам, и при этом используют материалы с самым высоким рейтингом качества? Показать топ-6 проектов с детализацией расходов и состояния разрешений. [Ожидаемые колонки: Название проекта, Бюджет, Количество инспекций, Соотношение бюджета к инспекциям, Максимальное качество материалов, Количество разрешений, Статус разрешений, Общие расходы]",
            "sql_query": "WITH ProjectMetrics AS (SELECT p.ProjectID, p.ProjectName, p.Budget, COUNT(DISTINCT i.InspectionID) AS InspectionCount, p.Budget / NULLIF(COUNT(DISTINCT i.InspectionID), 0) AS BudgetPerInspection, MAX(m.QualityRating) AS MaxMaterialQuality, COUNT(DISTINCT pe.PermitID) AS PermitCount FROM Projects p LEFT JOIN Inspections i ON p.ProjectID = i.ProjectID AND i.Result = 'Успешно' LEFT JOIN Materials m ON m.QualityRating IS NOT NULL LEFT JOIN Permits pe ON p.ProjectID = pe.ProjectID GROUP BY p.ProjectID, p.ProjectName, p.Budget), AvgMetrics AS (SELECT AVG(BudgetPerInspection) AS AvgBudgetPerInspection, AVG(MaxMaterialQuality) AS AvgMaxMaterialQuality FROM ProjectMetrics) SELECT pm.ProjectName, pm.Budget, pm.InspectionCount, pm.BudgetPerInspection, pm.MaxMaterialQuality, pm.PermitCount, CASE WHEN pe.Status = 'Действующий' THEN 'Активно' WHEN pe.Status = 'Ожидает проверки' THEN 'В процессе' ELSE 'Не активно' END AS PermitStatus, COALESCE(SUM(CASE WHEN f.Amount < 0 THEN ABS(f.Amount) ELSE 0 END), 0) AS TotalExpenses FROM ProjectMetrics pm JOIN Projects p ON pm.ProjectID = p.ProjectID LEFT JOIN Permits pe ON p.ProjectID = pe.ProjectID LEFT JOIN Finances f ON p.ProjectID = f.ProjectID, AvgMetrics WHERE pm.BudgetPerInspection > AvgMetrics.AvgBudgetPerInspection AND pm.MaxMaterialQuality = (SELECT MAX(QualityRating) FROM Materials) GROUP BY pm.ProjectName, pm.Budget, pm.InspectionCount, pm.BudgetPerInspection, pm.MaxMaterialQuality, pm.PermitCount, pe.Status ORDER BY pm.BudgetPerInspection DESC, TotalExpenses DESC LIMIT 6;"
        },
        {
            "question": "Какие архитекторы входят в топ-10% по опыту работы, при этом имеют награды после 2012 года и руководят проектами, по которым процент успешных инспекций составляет не менее 80%? Показать топ-4 архитекторов с рейтингом их эффективности. [Ожидаемые колонки: Имя, Фамилия, Стаж работы, Специализация, Количество наград, Средний процент успешных инспекций, Количество проектов, Общий бюджет, Рейтинг эффективности]",
            "sql_query": "WITH ExperiencePercentile AS (SELECT ArchitectID, FirstName, LastName, YearsOfExperience, PERCENT_RANK() OVER (ORDER BY YearsOfExperience) AS ExpPercentile FROM Architects), ProjectStats AS (SELECT p.ArchitectID, p.ProjectID, COUNT(DISTINCT i.InspectionID) AS TotalInspections, SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) AS SuccessfulInspections, CASE WHEN COUNT(DISTINCT i.InspectionID) > 0 THEN (SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT i.InspectionID)) ELSE 0 END AS SuccessRate FROM Projects p LEFT JOIN Inspections i ON p.ProjectID = i.ProjectID GROUP BY p.ArchitectID, p.ProjectID), ArchitectEfficiency AS (SELECT a.ArchitectID, a.FirstName, a.LastName, a.YearsOfExperience, a.Specialization, COUNT(DISTINCT aw.AwardID) AS AwardCount, AVG(ps.SuccessRate) AS AvgSuccessRate, COUNT(DISTINCT p.ProjectID) AS ProjectCount, SUM(p.Budget) AS TotalBudget, (COUNT(DISTINCT aw.AwardID) * a.YearsOfExperience * AVG(ps.SuccessRate)) / 100 AS EfficiencyScore FROM Architects a JOIN ExperiencePercentile ep ON a.ArchitectID = ep.ArchitectID JOIN Awards aw ON a.ArchitectID = aw.ArchitectID JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN ProjectStats ps ON p.ProjectID = ps.ProjectID WHERE ep.ExpPercentile >= 0.9 AND aw.Year > 2012 GROUP BY a.ArchitectID, a.FirstName, a.LastName, a.YearsOfExperience, a.Specialization HAVING AVG(ps.SuccessRate) >= 80) SELECT ae.FirstName, ae.LastName, ae.YearsOfExperience, ae.Specialization, ae.AwardCount, ROUND(ae.AvgSuccessRate, 2) AS AvgSuccessRate, ae.ProjectCount, ae.TotalBudget, ROUND(ae.EfficiencyScore, 2) AS EfficiencyScore FROM ArchitectEfficiency ae ORDER BY ae.EfficiencyScore DESC, ae.YearsOfExperience DESC LIMIT 4;"
        },
        {
            "question": "Какие проекты демонстрируют наиболее высокую окупаемость инвестиций с учетом соотношения доходов к расходам, с группировкой по статусу проекта и типу контракта? Представить данные за последние 5 лет с учетом сезонных колебаний и показать топ-7 наиболее прибыльных проектов. [Ожидаемые колонки: Название проекта, Статус, Тип контракта, Бюджет проекта, Общий доход, Общие расходы, ROI, Сезонно скорректированный ROI, Ранг в группе, Общий ранг]",
            "sql_query": "WITH ProjectFinances AS (SELECT p.ProjectID, p.ProjectName, p.Status, p.StartDate, QUARTER(p.StartDate) AS StartQuarter, p.Budget, c.Terms AS ContractType, c.PaymentSchedule, SUM(CASE WHEN f.Amount > 0 THEN f.Amount ELSE 0 END) AS TotalIncome, SUM(CASE WHEN f.Amount < 0 THEN ABS(f.Amount) ELSE 0 END) AS TotalExpenses, CASE WHEN SUM(CASE WHEN f.Amount < 0 THEN ABS(f.Amount) ELSE 0 END) > 0 THEN SUM(CASE WHEN f.Amount > 0 THEN f.Amount ELSE 0 END) / SUM(CASE WHEN f.Amount < 0 THEN ABS(f.Amount) ELSE 0 END) ELSE 0 END AS ROI FROM Projects p LEFT JOIN Contracts c ON p.ProjectID = c.ProjectID LEFT JOIN Finances f ON p.ProjectID = f.ProjectID WHERE p.StartDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 5 YEAR) GROUP BY p.ProjectID, p.ProjectName, p.Status, p.StartDate, p.Budget, c.Terms, c.PaymentSchedule), SeasonalAdjustment AS (SELECT StartQuarter, AVG(ROI) AS AvgQuarterROI FROM ProjectFinances GROUP BY StartQuarter), ProjectROI AS (SELECT pf.ProjectID, pf.ProjectName, pf.Status, pf.ContractType, pf.Budget, pf.TotalIncome, pf.TotalExpenses, pf.ROI, sa.AvgQuarterROI, pf.ROI / NULLIF(sa.AvgQuarterROI, 0) AS SeasonallyAdjustedROI FROM ProjectFinances pf JOIN SeasonalAdjustment sa ON pf.StartQuarter = sa.StartQuarter), ProjectProfitability AS (SELECT pr.ProjectID, pr.ProjectName, pr.Status, pr.ContractType, pr.Budget, pr.TotalIncome, pr.TotalExpenses, pr.ROI, pr.SeasonallyAdjustedROI, DENSE_RANK() OVER (PARTITION BY pr.Status, pr.ContractType ORDER BY pr.SeasonallyAdjustedROI DESC) AS RankWithinGroup, DENSE_RANK() OVER (ORDER BY pr.SeasonallyAdjustedROI DESC) AS OverallRank FROM ProjectROI pr) SELECT pp.ProjectName, pp.Status, pp.ContractType, pp.Budget AS Бюджет_проекта, pp.TotalIncome AS Общий_доход, pp.TotalExpenses AS Общие_расходы, ROUND(pp.ROI, 2) AS ROI, ROUND(pp.SeasonallyAdjustedROI, 2) AS Сезонно_скорректированный_ROI, pp.RankWithinGroup AS Ранг_в_группе, pp.OverallRank AS Общий_ранг FROM ProjectProfitability pp WHERE pp.OverallRank <= 7 ORDER BY pp.SeasonallyAdjustedROI DESC LIMIT 7;"
        },
        {
            "question": "Какие архитекторы наиболее эффективно использовали материалы различного качества в своих проектах и при этом имели наименьшее количество неуспешных инспекций за последние 3 года? Показать топ-5 с расчетом индекса эффективности, который учитывает процент успешных инспекций (40%), средний рейтинг материалов (30%), вариацию качества материалов (10%) и соотношение стоимости материалов к бюджету (20%). [Ожидаемые колонки: Имя, Фамилия, Специализация, Общее количество инспекций, Успешные инспекции, Неуспешные инспекции, Процент успешных инспекций, Средний рейтинг материалов, Вариация качества материалов, Количество материалов, Общая стоимость материалов, Общий бюджет, Соотношение материалов к бюджету, Индекс эффективности]",
            "sql_query": "WITH ArchitectInspections AS (SELECT a.ArchitectID, a.FirstName, a.LastName, a.Specialization, COUNT(DISTINCT i.InspectionID) AS TotalInspections, SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) AS SuccessfulInspections, SUM(CASE WHEN i.Result = 'Неуспешно' THEN 1 ELSE 0 END) AS FailedInspections, CASE WHEN COUNT(DISTINCT i.InspectionID) > 0 THEN (SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) * 100.0 / COUNT(DISTINCT i.InspectionID)) ELSE 0 END AS SuccessRate FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE p.StartDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 YEAR) GROUP BY a.ArchitectID, a.FirstName, a.LastName, a.Specialization), MaterialEfficiency AS (SELECT a.ArchitectID, AVG(m.QualityRating) AS AvgMaterialQuality, STDDEV(m.QualityRating) AS MaterialQualityVariation, SUM(m.CostPerUnit * m.QuantityInStock) AS TotalMaterialCost, COUNT(DISTINCT m.MaterialID) AS MaterialCount, SUM(p.Budget) AS TotalBudget, CASE WHEN SUM(p.Budget) > 0 THEN (SUM(m.CostPerUnit * m.QuantityInStock) * 100.0 / SUM(p.Budget)) ELSE 0 END AS MaterialBudgetRatio FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Materials m ON m.MaterialID > 0 WHERE p.StartDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 YEAR) GROUP BY a.ArchitectID), EfficiencyIndex AS (SELECT ai.ArchitectID, ai.FirstName, ai.LastName, ai.Specialization, ai.TotalInspections, ai.SuccessfulInspections, ai.FailedInspections, ai.SuccessRate, me.AvgMaterialQuality, me.MaterialQualityVariation, me.TotalMaterialCost, me.MaterialCount, me.TotalBudget, me.MaterialBudgetRatio, ((ai.SuccessRate * 0.4) + (me.AvgMaterialQuality * 10 * 0.3) - (COALESCE(me.MaterialQualityVariation, 0) * 5 * 0.1) - (me.MaterialBudgetRatio * 0.2)) AS EfficiencyScore FROM ArchitectInspections ai JOIN MaterialEfficiency me ON ai.ArchitectID = me.ArchitectID) SELECT ei.FirstName, ei.LastName, ei.Specialization, ei.TotalInspections AS Общее_количество_инспекций, ei.SuccessfulInspections AS Успешные_инспекции, ei.FailedInspections AS Неуспешные_инспекции, ROUND(ei.SuccessRate, 2) AS Процент_успешных_инспекций, ROUND(ei.AvgMaterialQuality, 2) AS Средний_рейтинг_материалов, ROUND(ei.MaterialQualityVariation, 2) AS Вариация_качества_материалов, ei.MaterialCount AS Количество_материалов, ROUND(ei.TotalMaterialCost, 2) AS Общая_стоимость_материалов, ROUND(ei.TotalBudget, 2) AS Общий_бюджет, ROUND(ei.MaterialBudgetRatio, 2) AS Соотношение_материалов_к_бюджету, ROUND(ei.EfficiencyScore, 2) AS Индекс_эффективности FROM EfficiencyIndex ei ORDER BY ei.EfficiencyScore DESC LIMIT 5;"
        },
        {
            "question": "Какие здания, построенные после 2015 года, имеют более 50 этажей и расположены в проектах с бюджетом более 150 миллионов рублей? Для каждого здания показать подробную информацию о нем, о проекте, информацию об архитекторе с его опытом и специализацией. Ограничить результат 7 записями, отсортированными по высоте здания.",
            "sql_query": "SELECT b.BuildingName, b.Height, b.Floors, b.Material, b.Style, p.ProjectName, p.Budget, p.Location, a.FirstName, a.LastName, a.YearsOfExperience, a.Specialization FROM Buildings b JOIN Projects p ON b.ProjectID = p.ProjectID JOIN Architects a ON p.ArchitectID = a.ArchitectID WHERE b.YearCompleted > 2015 AND b.Floors > 50 AND p.Budget > 150000000 ORDER BY b.Height DESC LIMIT 7;"
        },
        {
            "question": "Какие клиенты, работающие с архитекторами, имеющими опыт более 20 лет, заключили контракты на сумму более 200 тысяч рублей за последние 3 года (и сколько контрактов) и имеют успешные инспекции по своим проектам? Показать топ-6 клиентов по общему бюджету проектов.",
            "sql_query": "WITH RecentContracts AS (SELECT cl.ClientID, cl.CompanyName, cl.City, cl.Country, a.ArchitectID, a.FirstName AS ArchitectFirstName, a.LastName AS ArchitectLastName, a.YearsOfExperience, COUNT(DISTINCT co.ContractID) AS ContractCount, SUM(co.Amount) AS TotalContractAmount, SUM(p.Budget) AS TotalProjectBudget FROM Clients cl JOIN Contracts co ON cl.ClientID = co.ClientID JOIN Projects p ON co.ProjectID = p.ProjectID JOIN Architects a ON p.ArchitectID = a.ArchitectID JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE a.YearsOfExperience > 20 AND co.Amount > 200000 AND co.ContractDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 YEAR) AND i.Result = 'Успешно' GROUP BY cl.ClientID, cl.CompanyName, cl.City, cl.Country, a.ArchitectID, a.FirstName, a.LastName, a.YearsOfExperience) SELECT rc.CompanyName, rc.City, rc.Country, rc.ArchitectFirstName, rc.ArchitectLastName, rc.YearsOfExperience, rc.ContractCount, rc.TotalContractAmount, rc.TotalProjectBudget FROM RecentContracts rc ORDER BY rc.TotalProjectBudget DESC LIMIT 6;"
        },
        {
            "question": "Какие проекты имеют наилучшее соотношение качества материалов к бюджету и при этом успешно прошли не менее двух инспекций за последний год? Показать топ-8 проектов с детализацией по используемым материалам и информацией о разрешениях. [Ожидаемые колонки: Название проекта, Местоположение, Бюджет, Среднее качество материалов, Количество материалов, Используемые материалы, Количество инспекций, Количество успешных инспекций, Количество разрешений, Количество действующих разрешений, Соотношение качества к бюджету]",
            "sql_query": "WITH ProjectMaterials AS (SELECT p.ProjectID, p.ProjectName, p.StartDate, p.EndDate, p.Budget, p.Location, AVG(m.QualityRating) AS AvgMaterialQuality, COUNT(DISTINCT m.MaterialID) AS MaterialCount, GROUP_CONCAT(DISTINCT m.MaterialName SEPARATOR ', ') AS MaterialsUsed, SUM(m.CostPerUnit * m.QuantityInStock) AS TotalMaterialCost FROM Projects p JOIN Materials m ON TRUE WHERE p.StartDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) GROUP BY p.ProjectID, p.ProjectName, p.StartDate, p.EndDate, p.Budget, p.Location), ProjectInspections AS (SELECT p.ProjectID, COUNT(i.InspectionID) AS InspectionCount, SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) AS SuccessfulInspections FROM Projects p JOIN Inspections i ON p.ProjectID = i.ProjectID WHERE i.InspectionDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 1 YEAR) GROUP BY p.ProjectID), ProjectPermits AS (SELECT p.ProjectID, COUNT(pe.PermitID) AS PermitCount, SUM(CASE WHEN pe.Status = 'Действующий' THEN 1 ELSE 0 END) AS ActivePermits FROM Projects p JOIN Permits pe ON p.ProjectID = pe.ProjectID GROUP BY p.ProjectID) SELECT pm.ProjectName, pm.Location, pm.Budget, pm.AvgMaterialQuality, pm.MaterialCount, pm.MaterialsUsed, pi.InspectionCount, pi.SuccessfulInspections, pp.PermitCount, pp.ActivePermits, (pm.AvgMaterialQuality / (pm.Budget / 1000000)) AS QualityBudgetRatio FROM ProjectMaterials pm JOIN ProjectInspections pi ON pm.ProjectID = pi.ProjectID JOIN ProjectPermits pp ON pm.ProjectID = pp.ProjectID WHERE pi.SuccessfulInspections >= 2 ORDER BY QualityBudgetRatio DESC LIMIT 8;"
        },
        {
            "question": "Какие сотрудники из отделов с бюджетом более 1 миллиона рублей участвуют в проектах, использующих материалы с качеством выше 8, и при этом имеют зарплату выше средней по компании? Показать топ-5 сотрудников по стажу работы. [Ожидаемые колонки: Имя, Фамилия, Должность, Стаж работы, Зарплата, Отдел, Бюджет отдела, Количество проектов, Общий бюджет проектов]",
            "sql_query": "WITH EmployeeDepartments AS (SELECT e.EmployeeID, e.FirstName, e.LastName, e.Position, e.HireDate, e.Salary, d.DepartmentName, d.Budget AS DepartmentBudget FROM Employees e JOIN Departments d ON e.DepartmentID = d.DepartmentID WHERE d.Budget > 1000000), AvgSalary AS (SELECT AVG(Salary) AS CompanyAvgSalary FROM Employees), HighQualityProjects AS (SELECT p.ProjectID, p.ProjectName, p.Budget, COUNT(DISTINCT m.MaterialID) AS HighQualityMaterials FROM Projects p JOIN Materials m ON m.QualityRating > 8 GROUP BY p.ProjectID, p.ProjectName, p.Budget HAVING COUNT(DISTINCT m.MaterialID) > 0) SELECT ed.FirstName, ed.LastName, ed.Position, TIMESTAMPDIFF(YEAR, ed.HireDate, CURRENT_DATE()) AS YearsOfExperience, ed.Salary, ed.DepartmentName, ed.DepartmentBudget, COUNT(DISTINCT hqp.ProjectID) AS ProjectCount, SUM(hqp.Budget) AS TotalProjectBudget FROM EmployeeDepartments ed JOIN Departments d ON ed.DepartmentName = d.DepartmentName JOIN HighQualityProjects hqp ON TRUE, AvgSalary WHERE ed.Salary > AvgSalary.CompanyAvgSalary GROUP BY ed.EmployeeID, ed.FirstName, ed.LastName, ed.Position, ed.HireDate, ed.Salary, ed.DepartmentName, ed.DepartmentBudget ORDER BY YearsOfExperience DESC LIMIT 5;"
        },
        {
            "question": "Какие архитекторы, работающие со зданиями в стиле 'Современный' или 'Классический', имеют наибольшее количество наград и при этом их проекты имеют самое высокое соотношение успешных к неуспешным инспекциям? Показать топ-4 архитектора с рейтингом эффективности. [Ожидаемые колонки: Имя, Фамилия, Стаж работы, Специализация, Количество наград, Общее количество зданий, Количество зданий в стиле, Общее количество инспекций, Успешные инспекции, Неуспешные инспекции, Соотношение успешных к неуспешным, Рейтинг эффективности]",
            "sql_query": "WITH ArchitectAwards AS (SELECT a.ArchitectID, a.FirstName, a.LastName, a.YearsOfExperience, a.Specialization, COUNT(aw.AwardID) AS AwardCount FROM Architects a LEFT JOIN Awards aw ON a.ArchitectID = aw.ArchitectID GROUP BY a.ArchitectID, a.FirstName, a.LastName, a.YearsOfExperience, a.Specialization), ArchitectBuildings AS (SELECT a.ArchitectID, COUNT(DISTINCT b.BuildingID) AS BuildingCount, COUNT(DISTINCT CASE WHEN b.Style IN ('Современный', 'Классический') THEN b.BuildingID END) AS StyleBuildingCount FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Buildings b ON p.ProjectID = b.ProjectID GROUP BY a.ArchitectID), ArchitectInspections AS (SELECT a.ArchitectID, COUNT(DISTINCT i.InspectionID) AS TotalInspections, SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) AS SuccessfulInspections, SUM(CASE WHEN i.Result = 'Неуспешно' THEN 1 ELSE 0 END) AS FailedInspections, CASE WHEN SUM(CASE WHEN i.Result = 'Неуспешно' THEN 1 ELSE 0 END) > 0 THEN SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) * 1.0 / SUM(CASE WHEN i.Result = 'Неуспешно' THEN 1 ELSE 0 END) ELSE SUM(CASE WHEN i.Result = 'Успешно' THEN 1 ELSE 0 END) END AS SuccessRatio FROM Architects a JOIN Projects p ON a.ArchitectID = p.ArchitectID JOIN Inspections i ON p.ProjectID = i.ProjectID GROUP BY a.ArchitectID) SELECT aa.FirstName, aa.LastName, aa.YearsOfExperience, aa.Specialization, aa.AwardCount, ab.BuildingCount, ab.StyleBuildingCount, ai.TotalInspections, ai.SuccessfulInspections, ai.FailedInspections, ROUND(ai.SuccessRatio, 2) AS SuccessRatio, ROUND((aa.AwardCount * 0.3) + (ab.StyleBuildingCount * 0.3) + (ai.SuccessRatio * 0.4), 2) AS EfficiencyRating FROM ArchitectAwards aa JOIN ArchitectBuildings ab ON aa.ArchitectID = ab.ArchitectID JOIN ArchitectInspections ai ON aa.ArchitectID = ai.ArchitectID WHERE ab.StyleBuildingCount > 0 ORDER BY EfficiencyRating DESC LIMIT 4;"
        },
        {
            "question": "Какие строительные материалы наиболее часто используются в проектах с бюджетом свыше 150 миллионов рублей и какие поставщики обеспечивают их наивысшее качество? Показать топ-9 материалов с детализацией по поставщикам и проектам за последние 2 года. [Ожидаемые колонки: Название материала, Количество проектов, Средний рейтинг качества, Название поставщика, Город поставщика, Страна поставщика, Список проектов]",
            "sql_query": "WITH HighBudgetProjects AS (SELECT p.ProjectID, p.ProjectName, p.Budget, p.StartDate FROM Projects p WHERE p.Budget > 150000000 AND p.StartDate >= DATE_SUB(CURRENT_DATE(), INTERVAL 2 YEAR)), MaterialUsage AS (SELECT p.ProjectID, m.MaterialID, m.MaterialName, m.QualityRating, m.CostPerUnit, m.SupplierID, COUNT(*) AS UsageCount FROM HighBudgetProjects p JOIN Materials m ON TRUE GROUP BY p.ProjectID, m.MaterialID, m.MaterialName, m.QualityRating, m.CostPerUnit, m.SupplierID), MaterialStats AS (SELECT mu.MaterialName, COUNT(DISTINCT mu.ProjectID) AS ProjectCount, AVG(mu.QualityRating) AS AvgQuality, s.SupplierName, s.City AS SupplierCity, s.Country AS SupplierCountry FROM MaterialUsage mu JOIN Suppliers s ON mu.SupplierID = s.SupplierID GROUP BY mu.MaterialName, s.SupplierName, s.City, s.Country) SELECT ms.MaterialName, ms.ProjectCount, ROUND(ms.AvgQuality, 2) AS СреднийРейтингКачества, ms.SupplierName AS Поставщик, ms.SupplierCity AS ГородПоставщика, ms.SupplierCountry AS СтранаПоставщика, (SELECT GROUP_CONCAT(DISTINCT p.ProjectName SEPARATOR ', ') FROM HighBudgetProjects p JOIN MaterialUsage mu ON p.ProjectID = mu.ProjectID WHERE mu.MaterialName = ms.MaterialName) AS СписокПроектов FROM MaterialStats ms ORDER BY ms.ProjectCount DESC, ms.AvgQuality DESC LIMIT 9;"
        },
        {
            "question": "Какие здания с назначением 'Жилой' или 'Офисы' имеют наилучшее соотношение высоты к количеству этажей и при этом используют высококачественные материалы (рейтинг выше 8)? Показать топ-6 зданий с детализацией по проектам и архитекторам. [Ожидаемые колонки: Название здания, Высота, Количество этажей, Материал, Стиль, Назначение, Высота на этаж, Название проекта, Местоположение, Бюджет, Имя архитектора, Фамилия архитектора, Специализация архитектора, Среднее качество материалов]",
            "sql_query": "WITH BuildingMetrics AS (SELECT b.BuildingID, b.BuildingName, b.Height, b.Floors, b.Material, b.Style, b.`Usage`, b.Height / NULLIF(b.Floors, 0) AS HeightPerFloor, p.ProjectID, p.ProjectName, p.Location, p.Budget, p.ArchitectID FROM Buildings b JOIN Projects p ON b.ProjectID = p.ProjectID WHERE b.`Usage` IN ('Жилой', 'Офисы')), MaterialQuality AS (SELECT p.ProjectID, AVG(m.QualityRating) AS AvgMaterialQuality FROM Projects p JOIN Materials m ON TRUE GROUP BY p.ProjectID HAVING AVG(m.QualityRating) > 8) SELECT bm.BuildingName, bm.Height AS Высота, bm.Floors AS Этажи, bm.Material AS Материал, bm.Style AS Стиль, bm.`Usage` AS Назначение, ROUND(bm.HeightPerFloor, 2) AS ВысотаНаЭтаж, bm.ProjectName AS НазваниеПроекта, bm.Location AS Местоположение, bm.Budget AS Бюджет, a.FirstName AS ИмяАрхитектора, a.LastName AS ФамилияАрхитектора, a.Specialization AS СпециализацияАрхитектора, ROUND(mq.AvgMaterialQuality, 2) AS СреднееКачествоМатериалов FROM BuildingMetrics bm JOIN MaterialQuality mq ON bm.ProjectID = mq.ProjectID JOIN Architects a ON bm.ArchitectID = a.ArchitectID ORDER BY bm.HeightPerFloor ASC, mq.AvgMaterialQuality DESC LIMIT 6;"
        },
        {
            "question": "Какие поставщики наиболее эффективно участвуют в проектах по строительству зданий выше 250 метров, предоставляя материалы с наилучшим соотношением цена/качество? Показать топ-5 поставщиков с детализацией по проектам и материалам. [Ожидаемые колонки: Название поставщика, Город, Страна, Количество проектов, Количество материалов, Средний рейтинг качества, Соотношение цена/качество, Список зданий, Список проектов, Список материалов]",
            "sql_query": "WITH TallBuildings AS (SELECT b.BuildingID, b.BuildingName, b.Height, b.Material, p.ProjectID, p.ProjectName, p.Budget FROM Buildings b JOIN Projects p ON b.ProjectID = p.ProjectID WHERE b.Height > 250), SupplierMaterials AS (SELECT s.SupplierID, s.SupplierName, s.City, s.Country, m.MaterialID, m.MaterialName, m.QualityRating, m.CostPerUnit, m.CostPerUnit / NULLIF(m.QualityRating, 0) AS PriceQualityRatio FROM Suppliers s JOIN Materials m ON s.SupplierID = m.SupplierID), SupplierProjectParticipation AS (SELECT sm.SupplierID, sm.SupplierName, sm.City, sm.Country, COUNT(DISTINCT tb.ProjectID) AS ProjectCount, COUNT(DISTINCT sm.MaterialID) AS MaterialCount, AVG(sm.QualityRating) AS AvgQuality, AVG(sm.PriceQualityRatio) AS AvgPriceQualityRatio, GROUP_CONCAT(DISTINCT tb.BuildingName SEPARATOR ', ') AS Buildings, GROUP_CONCAT(DISTINCT tb.ProjectName SEPARATOR ', ') AS Projects, GROUP_CONCAT(DISTINCT sm.MaterialName SEPARATOR ', ') AS Materials FROM SupplierMaterials sm CROSS JOIN TallBuildings tb GROUP BY sm.SupplierID, sm.SupplierName, sm.City, sm.Country) SELECT SupplierName AS Поставщик, City AS Город, Country AS Страна, ProjectCount AS КоличествоПроектов, MaterialCount AS КоличествоМатериалов, ROUND(AvgQuality, 2) AS СреднееКачество, ROUND(AvgPriceQualityRatio, 2) AS ЦенаКачествоСоотношение, Buildings AS Здания, Projects AS Проекты, Materials AS Материалы FROM SupplierProjectParticipation WHERE ProjectCount > 0 ORDER BY AvgPriceQualityRatio ASC, AvgQuality DESC LIMIT 5;"
        }
    ]
}