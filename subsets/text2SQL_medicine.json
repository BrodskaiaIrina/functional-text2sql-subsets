{
    "queries": [
        {
            "question": "Какие клиники имеют среднюю стоимость тестов более 1000 для тестов длительностью 1 день?",
            "sql_query": "SELECT c.Name, AVG(t.Price) AS AvgTestPrice FROM Clinics c JOIN Laboratories l ON c.ClinicID = l.LaboratoryID JOIN LaboratoryTests t ON l.LaboratoryID = t.LaboratoryID WHERE t.Duration = '1 день' GROUP BY c.Name HAVING AVG(t.Price) > 1000;"
        },
        {
            "question": "Какие пациенты имели более 1 операции с врачами, имеющими более 10 лет опыта?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries FROM Patients p JOIN Surgeries s ON p.PatientID = s.PatientID JOIN Doctors d ON s.DoctorID = d.DoctorID WHERE d.YearsOfExperience > 10 GROUP BY p.FirstName, p.LastName HAVING COUNT(DISTINCT s.SurgeryID) > 1;"
        },
        {
            "question": "Какие сотрудники имеют более 5 запланированных встреч в клиниках?",
            "sql_query": "SELECT s.FirstName, s.LastName, COUNT(DISTINCT a.AppointmentID) AS TotalAppointments FROM Staff s JOIN Clinics c ON s.ClinicID = c.ClinicID JOIN Appointments a ON c.ClinicID = a.ClinicID WHERE a.Status = 'Запланировано' GROUP BY s.FirstName, s.LastName HAVING COUNT(DISTINCT a.AppointmentID) > 5;"
        },
        {
            "question": "Какие 9 пациентов, родившихся до 1990 года, получили более 2 вакцинаций и имеют рецепты от Пфайзер или АстраЗенека? Ответ включает полную информацию о вакцинациях и рецептах.",
            "sql_query": "WITH PatientVaccinationStats AS ( SELECT p.PatientID, p.FirstName, p.LastName, p.BloodType, COUNT(DISTINCT vc.VaccinationID) AS TotalVaccinations, COUNT(DISTINCT CASE WHEN v.Type = 'Векторная' THEN vc.VaccinationID END) AS VectorVaccines, COUNT(DISTINCT CASE WHEN v.Type = 'mRNA' THEN vc.VaccinationID END) AS mRNAVaccines, MAX(vc.VaccinationDate) AS LastVaccinationDate, DATEDIFF(CURRENT_DATE, MAX(vc.VaccinationDate)) AS DaysSinceLastVaccination FROM Patients p JOIN Vaccinations vc ON p.PatientID = vc.PatientID JOIN Vaccines v ON vc.VaccineID = v.VaccineID WHERE p.DateOfBirth < '1990-01-01' GROUP BY p.PatientID, p.FirstName, p.LastName, p.BloodType HAVING COUNT(DISTINCT vc.VaccinationID) > 2 ) SELECT pvs.*, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT CASE WHEN m.Manufacturer = 'Пфайзер' THEN pr.PrescriptionID END) AS PfizerPrescriptions, COUNT(DISTINCT CASE WHEN m.Manufacturer = 'АстраЗенека' THEN pr.PrescriptionID END) AS AstraZenecaPrescriptions FROM PatientVaccinationStats pvs LEFT JOIN Prescriptions pr ON pvs.PatientID = pr.PatientID LEFT JOIN Medications m ON pr.MedicationID = m.MedicationID GROUP BY pvs.PatientID, pvs.FirstName, pvs.LastName, pvs.BloodType, pvs.TotalVaccinations, pvs.VectorVaccines, pvs.mRNAVaccines, pvs.LastVaccinationDate, pvs.DaysSinceLastVaccination ORDER BY DaysSinceLastVaccination DESC, TotalVaccinations DESC LIMIT 9;"
        },
        {
            "question": "Какие 7 врачей имеют более 0 операций в 2023-2024 годах и успешные операции? Ответ включает имя, фамилию, специальность врача, количество операций, среднюю продолжительность операций, количество успешных операций, количество уникальных пациентов, количество пациентов с группой крови O+, процент успешных операций.",
            "sql_query": "WITH DoctorSpecialtyStats AS ( SELECT d.Specialty, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, AVG(s.DurationMinutes) AS AvgDuration, COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) AS SuccessfulSurgeries FROM Doctors d JOIN Surgeries s ON d.DoctorID = s.DoctorID WHERE s.SurgeryDate BETWEEN '2023-01-01' AND '2024-12-31' GROUP BY d.Specialty HAVING COUNT(DISTINCT s.SurgeryID) > 0 ) SELECT d.FirstName, d.LastName, d.Specialty, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, ROUND(AVG(s.DurationMinutes), 2) AS AvgSurgeryDuration, COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) AS SuccessfulSurgeries, COUNT(DISTINCT p.PatientID) AS UniquePatients, COUNT(DISTINCT CASE WHEN p.BloodType = 'O+' THEN p.PatientID END) AS OPositivePatients, ROUND(COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) * 100.0 / COUNT(DISTINCT s.SurgeryID), 2) AS SuccessRate FROM Doctors d JOIN Surgeries s ON d.DoctorID = s.DoctorID JOIN Patients p ON s.PatientID = p.PatientID WHERE s.SurgeryDate BETWEEN '2023-01-01' AND '2024-12-31' AND EXISTS ( SELECT 1 FROM Appointments a WHERE a.DoctorID = d.DoctorID AND a.Status = 'Завершено' ) GROUP BY d.DoctorID, d.FirstName, d.LastName, d.Specialty HAVING COUNT(DISTINCT s.SurgeryID) > 0 ORDER BY SuccessRate DESC, TotalSurgeries DESC LIMIT 7;"
        },
        {
            "question": "Какие 7 лекарств имеют более 0 рецептов в 2023 году и связаны с инфекциями? Ответ включает полную информацию о рецептах и связанных медицинских записях.",
            "sql_query": "WITH MedicationUsage AS ( SELECT m.MedicationID, m.Name, m.Manufacturer, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT p.PatientID) AS UniquePatients, AVG(DATEDIFF(pr.EndDate, pr.StartDate)) AS AvgPrescriptionDuration FROM Medications m JOIN Prescriptions pr ON m.MedicationID = pr.MedicationID JOIN Patients p ON pr.PatientID = p.PatientID WHERE pr.StartDate >= '2023-01-01' GROUP BY m.MedicationID, m.Name, m.Manufacturer HAVING COUNT(DISTINCT pr.PrescriptionID) > 0 ) SELECT mu.*, COUNT(DISTINCT r.RecordID) AS TotalMedicalRecords, COUNT(DISTINCT CASE WHEN r.Diagnosis LIKE '%инфекция%' THEN r.RecordID END) AS InfectionRelatedRecords, COUNT(DISTINCT CASE WHEN r.Diagnosis LIKE '%грипп%' THEN r.RecordID END) AS FluRelatedRecords, ROUND(COUNT(DISTINCT CASE WHEN r.Diagnosis LIKE '%инфекция%' THEN r.RecordID END) * 100.0 / COUNT(DISTINCT r.RecordID), 2) AS InfectionRecordPercentage FROM MedicationUsage mu LEFT JOIN Prescriptions pr ON mu.MedicationID = pr.MedicationID LEFT JOIN Patients p ON pr.PatientID = p.PatientID LEFT JOIN MedicalRecords r ON p.PatientID = r.PatientID GROUP BY mu.MedicationID, mu.Name, mu.Manufacturer, mu.TotalPrescriptions, mu.UniquePatients, mu.AvgPrescriptionDuration ORDER BY InfectionRecordPercentage DESC, TotalPrescriptions DESC LIMIT 7;"
        },
        {
            "question": "Какие 8 лабораторий имеют более 0 тестов в 2023-2024 годах и завершенные тесты? Ответ включает полную информацию о тестах и связанных врачах.",
            "sql_query": "WITH LabTestAnalysis AS ( SELECT l.LaboratoryID, l.Name, COUNT(DISTINCT t.TestID) AS TotalTests, COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) AS CompletedTests, COUNT(DISTINCT p.PatientID) AS UniquePatients, AVG(t.Price) AS AvgTestPrice FROM Laboratories l JOIN LaboratoryTests t ON l.LaboratoryID = t.LaboratoryID JOIN TestResults r ON t.TestID = r.TestID JOIN Patients p ON r.PatientID = p.PatientID WHERE r.ResultDate BETWEEN '2023-01-01' AND '2024-12-31' GROUP BY l.LaboratoryID, l.Name HAVING COUNT(DISTINCT t.TestID) > 0 ) SELECT lta.*, COUNT(DISTINCT d.DoctorID) AS ReferringDoctors, COUNT(DISTINCT CASE WHEN t.Duration = '1 день' THEN t.TestID END) AS OneDayTests, COUNT(DISTINCT CASE WHEN t.Duration = '2 дня' THEN t.TestID END) AS TwoDayTests, ROUND(lta.CompletedTests * 100.0 / lta.TotalTests, 2) AS CompletionRate, ROUND(AVG(t.Price), 2) AS AvgTestPrice FROM LabTestAnalysis lta JOIN LaboratoryTests t ON lta.LaboratoryID = t.LaboratoryID JOIN TestResults r ON t.TestID = r.TestID JOIN Doctors d ON r.DoctorID = d.DoctorID GROUP BY lta.LaboratoryID, lta.Name, lta.TotalTests, lta.CompletedTests, lta.UniquePatients, lta.AvgTestPrice ORDER BY CompletionRate DESC, TotalTests DESC LIMIT 8;"
        },
        {
            "question": "Какие 5 лабораторий имеют более 0 тестов в 2023-2024 годах и завершенные тесты? Ответ включает название лаборатории, количество тестов, количество завершенных тестов, количество уникальных пациентов, количество направляющих врачей, количество тестов длительностью 1 и 2 дня, среднюю стоимость теста, процент завершенных тестов.",
            "sql_query": "SELECT l.Name AS LaboratoryName, COUNT(DISTINCT t.TestID) AS TotalTests, COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) AS CompletedTests, COUNT(DISTINCT p.PatientID) AS UniquePatients, COUNT(DISTINCT d.DoctorID) AS ReferringDoctors, COUNT(DISTINCT CASE WHEN t.Duration = '1 день' THEN t.TestID END) AS OneDayTests, COUNT(DISTINCT CASE WHEN t.Duration = '2 дня' THEN t.TestID END) AS TwoDayTests, ROUND(AVG(t.Price), 2) AS AvgTestPrice, ROUND(COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) * 100.0 / COUNT(DISTINCT t.TestID), 2) AS CompletionRate FROM Laboratories l JOIN LaboratoryTests t ON l.LaboratoryID = t.LaboratoryID JOIN TestResults r ON t.TestID = r.TestID JOIN Patients p ON r.PatientID = p.PatientID JOIN Doctors d ON r.DoctorID = d.DoctorID WHERE r.ResultDate BETWEEN '2023-01-01' AND '2024-12-31' AND EXISTS ( SELECT 1 FROM Appointments a WHERE a.DoctorID = d.DoctorID AND a.Status = 'Завершено' ) GROUP BY l.LaboratoryID, l.Name HAVING COUNT(DISTINCT t.TestID) > 0 ORDER BY CompletionRate DESC, TotalTests DESC LIMIT 5;"
        },
        {
            "question": "Какие 5 врачей выполнили наибольшее количество завершённых приёмов, и сколько именно?",
            "sql_query": "SELECT d.FirstName, d.LastName, COUNT(DISTINCT a.AppointmentID) AS CompletedAppointments FROM Doctors d JOIN Appointments a ON d.DoctorID = a.DoctorID WHERE a.Status = 'Завершено' GROUP BY d.DoctorID, d.FirstName, d.LastName ORDER BY CompletedAppointments DESC LIMIT 5;"
        },
        {
            "question": "Какие лаборатории имеют среднюю стоимость тестов по типу лаборатории? Ответ включает тип лаборатории и среднюю стоимость теста.",
            "sql_query": "SELECT l.Type AS LaboratoryType, ROUND(AVG(t.Price), 2) AS AvgTestPrice FROM Laboratories l JOIN LaboratoryTests t ON l.LaboratoryID = t.LaboratoryID GROUP BY l.Type ORDER BY AvgTestPrice DESC;"
        },
        {
            "question": "Какие 5 пациентов имеют наибольшее количество рецептов в 2023 году?",
            "sql_query": "SELECT p.FirstName, p.LastName, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions FROM Patients p JOIN Prescriptions pr ON p.PatientID = pr.PatientID WHERE pr.StartDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY p.PatientID, p.FirstName, p.LastName ORDER BY TotalPrescriptions DESC LIMIT 5;"
        },
        {
            "question": "Какие 5 тестов являются самыми дорогими?",
            "sql_query": "SELECT t.Name AS TestName, t.Price FROM LaboratoryTests t ORDER BY t.Price DESC LIMIT 5;"
        },
        {
            "question": "Какие 5 клиник имеют больше всего врачей? Ответ включает название клиники и количество врачей.",
            "sql_query": "SELECT c.Name AS ClinicName, COUNT(DISTINCT d.DoctorID) AS NumberOfDoctors FROM Clinics c JOIN Doctors d ON c.ClinicID = d.ClinicID GROUP BY c.ClinicID, c.Name ORDER BY NumberOfDoctors DESC LIMIT 5;"
        },
        {
            "question": "Какие пациенты получили как вакцинации, так и операции в 2023 году и сколько было тех и других? Отсортировать о суммарному количеству процедур",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, COUNT(DISTINCT v.VaccinationID) AS VaccinationCount, COUNT(DISTINCT s.SurgeryID) AS SurgeryCount FROM Patients p JOIN Vaccinations v ON p.PatientID = v.PatientID JOIN Surgeries s ON p.PatientID = s.PatientID WHERE YEAR(v.VaccinationDate) = 2023 AND YEAR(s.SurgeryDate) = 2023 GROUP BY p.PatientID, p.FirstName, p.LastName HAVING COUNT(DISTINCT v.VaccinationID) > 0 AND COUNT(DISTINCT s.SurgeryID) > 0 ORDER BY VaccinationCount + SurgeryCount DESC;"
        },
        {
            "question": "Какие месячные тренды вакцинации по типу вакцины в 2023 году? Ответ включает месяц, тип вакцины, количество вакцинаций, общий доход. Отсортировать по убыванию числа вакцинаций.",
            "sql_query": "SELECT MONTH(v.VaccinationDate) AS Month, vac.Type AS VaccineType, COUNT(v.VaccinationID) AS VaccinationCount, SUM(vac.Price) AS TotalRevenue FROM Vaccinations v JOIN Vaccines vac ON v.VaccineID = vac.VaccineID WHERE YEAR(v.VaccinationDate) = 2023 GROUP BY MONTH(v.VaccinationDate), vac.Type ORDER BY Month, VaccinationCount DESC;"
        },
        {
            "question": "Какие лекарства назначаются пациентам с различными группами крови по убыванию количество рецептов? Ответ включает группу крови, название лекарства, количество рецептов, среднюю продолжительность лечения, побочные эффекты.",
            "sql_query": "SELECT p.BloodType, m.Name AS MedicationName, COUNT(pr.PrescriptionID) AS PrescriptionCount, AVG(DATEDIFF(pr.EndDate, pr.StartDate)) AS AvgTreatmentDuration, m.SideEffects FROM Patients p JOIN Prescriptions pr ON p.PatientID = pr.PatientID JOIN Medications m ON pr.MedicationID = m.MedicationID GROUP BY p.BloodType, m.Name, m.SideEffects HAVING COUNT(pr.PrescriptionID) > 3 ORDER BY p.BloodType, PrescriptionCount DESC;"
        },
        {
            "question": "Вывести топ-10 пациентов по количеству вакцинаций и их историю вакцинации с демографическим анализом? Ответ включает ID пациента, имя, фамилию, группу крови, пол, количество вакцинаций, дату первой и последней вакцинации, период вакцинации. По убыванию периода вакцинации.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, p.BloodType, p.Gender, COUNT(DISTINCT v.VaccinationID) AS TotalVaccinations, MIN(v.VaccinationDate) AS FirstVaccination, MAX(v.VaccinationDate) AS LastVaccination, DATEDIFF(MAX(v.VaccinationDate), MIN(v.VaccinationDate)) AS VaccinationPeriod FROM Patients p JOIN Vaccinations v ON p.PatientID = v.PatientID GROUP BY p.PatientID, p.FirstName, p.LastName, p.BloodType, p.Gender HAVING COUNT(DISTINCT v.VaccinationID) > 1 ORDER BY TotalVaccinations DESC, VaccinationPeriod DESC LIMIT 10;"
        },
        {
            "question": "Проанализировать показатели эффективности врачей с результатами пациентов. Ответ включает ID врача, имя, фамилию, специальность, количество встреч, количество завершенных встреч, количество операций, количество успешных операций, процент завершенных встреч. Вывести топ-8 по количеству операций и проценту завершенных встреч",
            "sql_query": "SELECT d.DoctorID, d.FirstName, d.LastName, d.Specialty, COUNT(DISTINCT a.AppointmentID) AS TotalAppointments, COUNT(DISTINCT CASE WHEN a.Status = 'Завершено' THEN a.AppointmentID END) AS CompletedAppointments, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) AS SuccessfulSurgeries, ROUND(COUNT(DISTINCT CASE WHEN a.Status = 'Завершено' THEN a.AppointmentID END) * 100.0 / COUNT(DISTINCT a.AppointmentID), 2) AS AppointmentCompletionRate FROM Doctors d LEFT JOIN Appointments a ON d.DoctorID = a.DoctorID LEFT JOIN Surgeries s ON d.DoctorID = s.DoctorID GROUP BY d.DoctorID, d.FirstName, d.LastName, d.Specialty HAVING COUNT(DISTINCT a.AppointmentID) > 0 ORDER BY AppointmentCompletionRate DESC, TotalSurgeries DESC LIMIT 8;"
        },
        {
            "question": "Анализ топ-5 лабораторий по эффективности тестов. Ответ включает ID лаборатории, название, количество тестов, количество завершенных тестов, количество уникальных пациентов, среднюю стоимость теста, процент завершенных тестов. Отсортировать по общему числу тестов и проценту завершенных тестов",
            "sql_query": "SELECT l.LaboratoryID, l.Name, COUNT(DISTINCT t.TestID) AS TotalTests, COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) AS CompletedTests, COUNT(DISTINCT p.PatientID) AS UniquePatients, ROUND(AVG(t.Price), 2) AS AvgTestPrice, ROUND(COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) * 100.0 / COUNT(DISTINCT t.TestID), 2) AS CompletionRate FROM Laboratories l JOIN LaboratoryTests t ON l.LaboratoryID = t.LaboratoryID JOIN TestResults r ON t.TestID = r.TestID JOIN Patients p ON r.PatientID = p.PatientID GROUP BY l.LaboratoryID, l.Name HAVING COUNT(DISTINCT t.TestID) > 0 ORDER BY CompletionRate DESC, TotalTests DESC LIMIT 5;"
        },
        {
            "question": "Проведи анализ топ-7 лекарств по общему числу рецептов и пациентов. Ответ включает ID лекарства, название, производителя, количество рецептов, количество уникальных пациентов, среднюю продолжительность лечения, дату первого и последнего рецепта.",
            "sql_query": "SELECT m.MedicationID, m.Name, m.Manufacturer, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT p.PatientID) AS UniquePatients, AVG(DATEDIFF(pr.EndDate, pr.StartDate)) AS AvgTreatmentDuration, MIN(pr.StartDate) AS FirstPrescription, MAX(pr.EndDate) AS LastPrescription FROM Medications m JOIN Prescriptions pr ON m.MedicationID = pr.MedicationID JOIN Patients p ON pr.PatientID = p.PatientID GROUP BY m.MedicationID, m.Name, m.Manufacturer HAVING COUNT(DISTINCT pr.PrescriptionID) > 0 ORDER BY TotalPrescriptions DESC, UniquePatients DESC LIMIT 7;"
        },
        {
            "question": "Покажи историю лечения топ-10 пациентов по длительности лечения и числу записей. Ответ включает ID пациента, имя, фамилию, группу крови, количество медицинских записей, количество рецептов, количество вакцинаций, количество операций, дату первого и последнего визита, период лечения.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, p.BloodType, COUNT(DISTINCT mr.RecordID) AS TotalRecords, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT v.VaccinationID) AS TotalVaccinations, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, MIN(mr.VisitDate) AS FirstVisit, MAX(mr.VisitDate) AS LastVisit, DATEDIFF(MAX(mr.VisitDate), MIN(mr.VisitDate)) AS TreatmentPeriod FROM Patients p LEFT JOIN MedicalRecords mr ON p.PatientID = mr.PatientID LEFT JOIN Prescriptions pr ON p.PatientID = pr.PatientID LEFT JOIN Vaccinations v ON p.PatientID = v.PatientID LEFT JOIN Surgeries s ON p.PatientID = s.PatientID GROUP BY p.PatientID, p.FirstName, p.LastName, p.BloodType HAVING COUNT(DISTINCT mr.RecordID) > 0 ORDER BY TreatmentPeriod DESC, TotalRecords DESC LIMIT 10;"
        },
        {
            "question": "Анализ топ-8 лабораторий по общему числу тестов на эффективность тестов по специальности. Ответ включает ID лаборатории, название, специальность, количество тестов, количество завершенных тестов, среднюю стоимость теста, процент завершенных тестов.",
            "sql_query": "SELECT l.LaboratoryID, l.Name, d.Specialty, COUNT(DISTINCT t.TestID) AS TotalTests, COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) AS CompletedTests, ROUND(AVG(t.Price), 2) AS AvgTestPrice, ROUND(COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) * 100.0 / COUNT(DISTINCT t.TestID), 2) AS CompletionRate FROM Laboratories l JOIN LaboratoryTests t ON l.LaboratoryID = t.LaboratoryID JOIN TestResults r ON t.TestID = r.TestID JOIN Doctors d ON r.DoctorID = d.DoctorID WHERE r.ResultDate BETWEEN '2023-01-01' AND '2024-12-31' GROUP BY l.LaboratoryID, l.Name, d.Specialty HAVING COUNT(DISTINCT t.TestID) > 0 ORDER BY TotalTests DESC LIMIT 8;"
        },
        {
            "question": "Проанализировать распределение вакцинаций по демографическим показателям пациентов за 2023 год. В ответе должны быть представлены: идентификатор вакцины, её название, группа крови пациента, пол пациента, общее количество вакцинаций, средний возраст вакцинированных пациентов, количество пациентов с группой крови O+ и количество вакцинированных мужчин. Результаты ограничены 6 записями и отсортированы по убыванию количества вакцинаций и среднего возраста пациентов.",
            "sql_query": "SELECT v.VaccineID, v.Name, p.BloodType, p.Gender, COUNT(DISTINCT vc.VaccinationID) AS TotalVaccinations, ROUND(AVG(DATEDIFF(CURRENT_DATE, p.DateOfBirth) / 365), 2) AS AvgPatientAge, COUNT(DISTINCT CASE WHEN p.BloodType = 'O+' THEN p.PatientID END) AS OPositivePatients, COUNT(DISTINCT CASE WHEN p.Gender = 'Мужской' THEN p.PatientID END) AS MalePatients FROM Vaccines v JOIN Vaccinations vc ON v.VaccineID = vc.VaccineID JOIN Patients p ON vc.PatientID = p.PatientID WHERE vc.VaccinationDate >= '2023-01-01' GROUP BY v.VaccineID, v.Name, p.BloodType, p.Gender HAVING COUNT(DISTINCT vc.VaccinationID) > 0 ORDER BY TotalVaccinations DESC, AvgPatientAge DESC LIMIT 6;"
        },
        {
            "question": "Проанализировать эффективность операций врачей в зависимости от их опыта работы за период с 2023 по 2024 год. В ответе должны быть представлены: ID врача, имя, фамилия, стаж работы в годах, общее количество проведенных операций, количество успешных операций, средняя продолжительность операции в минутах, процент успешных операций. Результаты отсортированы по проценту успешных операций и стажу работы, показаны только врачи с опытом проведения операций (топ-5).",
            "sql_query": "SELECT d.DoctorID, d.FirstName, d.LastName, d.YearsOfExperience, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) AS SuccessfulSurgeries, ROUND(AVG(s.DurationMinutes), 2) AS AvgSurgeryDuration, ROUND(COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) * 100.0 / COUNT(DISTINCT s.SurgeryID), 2) AS SuccessRate FROM Doctors d JOIN Surgeries s ON d.DoctorID = s.DoctorID WHERE s.SurgeryDate BETWEEN '2023-01-01' AND '2024-12-31' GROUP BY d.DoctorID, d.FirstName, d.LastName, d.YearsOfExperience HAVING COUNT(DISTINCT s.SurgeryID) > 0 ORDER BY SuccessRate DESC, YearsOfExperience DESC LIMIT 5;"
        },
        {
            "question": "Проанализировать динамику назначения лекарственных препаратов по производителям за период с 2023 года. В ответе должны быть представлены: название производителя, общее количество выписанных рецептов, количество уникальных пациентов, средняя продолжительность лечения в днях, дата первого и последнего назначения. Результаты отсортированы по количеству рецептов и уникальных пациентов, показаны только производители с активными назначениями (топ-5).",
            "sql_query": "SELECT m.Manufacturer, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT p.PatientID) AS UniquePatients, ROUND(AVG(DATEDIFF(pr.EndDate, pr.StartDate)), 2) AS AvgTreatmentDuration, MIN(pr.StartDate) AS FirstPrescription, MAX(pr.EndDate) AS LastPrescription FROM Medications m JOIN Prescriptions pr ON m.MedicationID = pr.MedicationID JOIN Patients p ON pr.PatientID = p.PatientID WHERE pr.StartDate >= '2023-01-01' GROUP BY m.Manufacturer HAVING COUNT(DISTINCT pr.PrescriptionID) > 0 ORDER BY TotalPrescriptions DESC, UniquePatients DESC LIMIT 5;"
        },
        {
            "question": "Проанализировать медицинскую историю пациентов в разрезе групп крови. В ответе должны быть представлены: группа крови, общее количество медицинских записей, количество выписанных рецептов, количество проведенных вакцинаций, количество выполненных операций, средний возраст пациентов. Результаты отсортированы по количеству медицинских записей и среднему возрасту пациентов, показаны только группы крови с активной медицинской историей (топ-4).",
            "sql_query": "SELECT p.BloodType, COUNT(DISTINCT mr.RecordID) AS TotalRecords, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT v.VaccinationID) AS TotalVaccinations, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, ROUND(AVG(DATEDIFF(CURRENT_DATE, p.DateOfBirth) / 365), 2) AS AvgPatientAge FROM Patients p LEFT JOIN MedicalRecords mr ON p.PatientID = mr.PatientID LEFT JOIN Prescriptions pr ON p.PatientID = pr.PatientID LEFT JOIN Vaccinations v ON p.PatientID = v.PatientID LEFT JOIN Surgeries s ON p.PatientID = s.PatientID GROUP BY p.BloodType HAVING COUNT(DISTINCT mr.RecordID) > 0 ORDER BY TotalRecords DESC, AvgPatientAge DESC LIMIT 4;"
        },
        {
            "question": "Анализ истории лечения пациентов с учетом взаимодействий лекарственных препаратов за период с 2023 года. В ответе представлены: идентификатор пациента, имя, фамилия, общее количество рецептов, количество рецептов с пересекающимися периодами приема, количество различных лекарственных препаратов. Результаты ограничены топ-8 пациентов по количеству пересекающихся рецептов и общему числу рецептов.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, COUNT(DISTINCT pr1.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT CASE WHEN pr1.StartDate BETWEEN pr2.StartDate AND pr2.EndDate THEN pr1.PrescriptionID END) AS OverlappingPrescriptions, COUNT(DISTINCT CASE WHEN pr1.MedicationID != pr2.MedicationID THEN pr1.PrescriptionID END) AS DifferentMedications FROM Patients p JOIN Prescriptions pr1 ON p.PatientID = pr1.PatientID JOIN Prescriptions pr2 ON p.PatientID = pr2.PatientID WHERE pr1.StartDate >= '2023-01-01' GROUP BY p.PatientID, p.FirstName, p.LastName HAVING COUNT(DISTINCT pr1.PrescriptionID) > 1 ORDER BY OverlappingPrescriptions DESC, TotalPrescriptions DESC LIMIT 8;"
        },
        {
            "question": "Анализ паттернов лабораторных тестов по демографическим характеристикам пациентов за период с 2023 года. В ответе представлены: пол пациента, группа крови, общее количество тестов, количество тестов длительностью 1 день, количество тестов длительностью 2 дня, средняя стоимость теста, средний возраст пациентов. Результаты отсортированы по убыванию общего количества тестов и средней стоимости.",
            "sql_query": "SELECT p.Gender, p.BloodType, COUNT(DISTINCT t.TestID) AS TotalTests, COUNT(DISTINCT CASE WHEN t.Duration = '1 день' THEN t.TestID END) AS OneDayTests, COUNT(DISTINCT CASE WHEN t.Duration = '2 дня' THEN t.TestID END) AS TwoDayTests, ROUND(AVG(t.Price), 2) AS AvgTestPrice, ROUND(AVG(DATEDIFF(CURRENT_DATE, p.DateOfBirth) / 365), 2) AS AvgPatientAge FROM Patients p JOIN TestResults r ON p.PatientID = r.PatientID JOIN LaboratoryTests t ON r.TestID = t.TestID WHERE r.ResultDate >= '2023-01-01' GROUP BY p.Gender, p.BloodType HAVING COUNT(DISTINCT t.TestID) > 0 ORDER BY TotalTests DESC, AvgTestPrice DESC;"
        },
        {
            "question": "Анализ эффективности работы врачей по специальностям за период с 2023 года. В ответе представлены: специальность врача, общее количество операций, количество успешных операций, общее количество приемов, количество завершенных приемов, средняя продолжительность операций. Результаты отсортированы по убыванию количества успешных операций и завершенных приемов.",
            "sql_query": "SELECT d.Specialty, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) AS SuccessfulSurgeries, COUNT(DISTINCT a.AppointmentID) AS TotalAppointments, COUNT(DISTINCT CASE WHEN a.Status = 'Завершено' THEN a.AppointmentID END) AS CompletedAppointments, ROUND(AVG(s.DurationMinutes), 2) AS AvgSurgeryDuration FROM Doctors d LEFT JOIN Surgeries s ON d.DoctorID = s.DoctorID LEFT JOIN Appointments a ON d.DoctorID = a.DoctorID WHERE s.SurgeryDate >= '2023-01-01' OR a.AppointmentDate >= '2023-01-01' GROUP BY d.Specialty HAVING COUNT(DISTINCT s.SurgeryID) > 0 OR COUNT(DISTINCT a.AppointmentID) > 0 ORDER BY SuccessfulSurgeries DESC, CompletedAppointments DESC;"
        },
        {
            "question": "Анализ прогресса лечения пациентов за период с 2023 года. В ответе представлены: идентификатор пациента, имя, фамилия, общее количество медицинских записей, количество выписанных рецептов, количество проведенных операций, дата первого визита, дата последнего визита, общая продолжительность лечения. Результаты ограничены топ-10 пациентов по продолжительности лечения и количеству медицинских записей.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, COUNT(DISTINCT mr.RecordID) AS TotalRecords, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, MIN(mr.VisitDate) AS FirstVisit, MAX(mr.VisitDate) AS LastVisit, DATEDIFF(MAX(mr.VisitDate), MIN(mr.VisitDate)) AS TreatmentDuration FROM Patients p JOIN MedicalRecords mr ON p.PatientID = mr.PatientID LEFT JOIN Prescriptions pr ON p.PatientID = pr.PatientID LEFT JOIN Surgeries s ON p.PatientID = s.PatientID WHERE mr.VisitDate >= '2023-01-01' GROUP BY p.PatientID, p.FirstName, p.LastName HAVING COUNT(DISTINCT mr.RecordID) > 1 ORDER BY TreatmentDuration DESC, TotalRecords DESC LIMIT 10;"
        },
        {
            "question": "Проанализировать паттерны вакцинации пациентов за период с 2023 года. В ответе должны быть представлены: ID вакцины, название, тип вакцины, общее количество вакцинаций, количество уникальных пациентов, количество вакцинированных мужчин и женщин, средний возраст пациентов. Результаты отсортированы по убыванию количества вакцинаций и уникальных пациентов.",
            "sql_query": "SELECT v.VaccineID, v.Name, v.Type, COUNT(DISTINCT vc.VaccinationID) AS TotalVaccinations, COUNT(DISTINCT p.PatientID) AS UniquePatients, COUNT(DISTINCT CASE WHEN p.Gender = 'Мужской' THEN p.PatientID END) AS MalePatients, COUNT(DISTINCT CASE WHEN p.Gender = 'Женский' THEN p.PatientID END) AS FemalePatients, ROUND(AVG(DATEDIFF(CURRENT_DATE, p.DateOfBirth) / 365), 2) AS AvgPatientAge FROM Vaccines v JOIN Vaccinations vc ON v.VaccineID = vc.VaccineID JOIN Patients p ON vc.PatientID = p.PatientID WHERE vc.VaccinationDate >= '2023-01-01' GROUP BY v.VaccineID, v.Name, v.Type HAVING COUNT(DISTINCT vc.VaccinationID) > 0 ORDER BY TotalVaccinations DESC, UniquePatients DESC;"
        },
        {
            "question": "Проанализировать эффективность лабораторных тестов по медицинским специальностям за период с 2023 по 2024 год. В ответе должны быть представлены: специальность врача, общее количество тестов, количество завершенных тестов, количество уникальных пациентов, средняя стоимость теста, процент завершенных тестов. Результаты отсортированы по проценту завершенных тестов и общему количеству тестов.",
            "sql_query": "SELECT d.Specialty, COUNT(DISTINCT t.TestID) AS TotalTests, COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) AS CompletedTests, COUNT(DISTINCT p.PatientID) AS UniquePatients, ROUND(AVG(t.Price), 2) AS AvgTestPrice, ROUND(COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) * 100.0 / COUNT(DISTINCT t.TestID), 2) AS CompletionRate FROM Doctors d JOIN TestResults r ON d.DoctorID = r.DoctorID JOIN LaboratoryTests t ON r.TestID = t.TestID JOIN Patients p ON r.PatientID = p.PatientID WHERE r.ResultDate BETWEEN '2023-01-01' AND '2024-12-31' GROUP BY d.Specialty HAVING COUNT(DISTINCT t.TestID) > 0 ORDER BY CompletionRate DESC, TotalTests DESC;"
        },
        {
            "question": "Проанализировать взаимосвязь вакцинаций и операций у пациентов за период с 2023 года. В ответе должны быть представлены: ID пациента, имя, фамилия, группа крови, количество вакцинаций, количество операций, дата первой вакцинации, дата последней операции, общая продолжительность лечения. Результаты ограничены 10 записями и отсортированы по убыванию продолжительности лечения и общего количества медицинских процедур.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, p.BloodType, COUNT(DISTINCT v.VaccinationID) AS TotalVaccinations, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, MIN(v.VaccinationDate) AS FirstVaccination, MAX(s.SurgeryDate) AS LastSurgery, DATEDIFF(MAX(s.SurgeryDate), MIN(v.VaccinationDate)) AS TreatmentSpan FROM Patients p JOIN Vaccinations v ON p.PatientID = v.PatientID JOIN Surgeries s ON p.PatientID = s.PatientID WHERE v.VaccinationDate >= '2023-01-01' AND s.SurgeryDate >= '2023-01-01' GROUP BY p.PatientID, p.FirstName, p.LastName, p.BloodType HAVING COUNT(DISTINCT v.VaccinationID) > 0 AND COUNT(DISTINCT s.SurgeryID) > 0 ORDER BY TreatmentSpan DESC, TotalVaccinations + TotalSurgeries DESC LIMIT 10;"
        },
        {
            "question": "Проанализировать эффективность работы врачей по приемам и операциям за период с 2023 года. В ответе должны быть представлены: ID врача, имя, фамилия, специальность, количество приемов, количество операций, средняя продолжительность операций, процент успешных операций. Результаты ограничены 8 записями и отсортированы по проценту успешных операций и количеству операций.",
            "sql_query": "SELECT d.DoctorID, d.FirstName, d.LastName, d.Specialty, COUNT(DISTINCT a.AppointmentID) AS TotalAppointments, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, ROUND(AVG(s.DurationMinutes), 2) AS AvgSurgeryDuration, ROUND(COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) * 100.0 / COUNT(DISTINCT s.SurgeryID), 2) AS SurgerySuccessRate FROM Doctors d JOIN Appointments a ON d.DoctorID = a.DoctorID JOIN Surgeries s ON d.DoctorID = s.DoctorID WHERE a.AppointmentDate >= '2023-01-01' AND s.SurgeryDate >= '2023-01-01' GROUP BY d.DoctorID, d.FirstName, d.LastName, d.Specialty HAVING COUNT(DISTINCT s.SurgeryID) > 0 ORDER BY SurgerySuccessRate DESC, TotalSurgeries DESC LIMIT 8;"
        },
        {
            "question": "Проанализировать ценовую политику лабораторных тестов. В ответе должны быть представлены: ID лаборатории, название, тип лаборатории, общее количество тестов, минимальная стоимость теста, максимальная стоимость теста, средняя стоимость теста, стандартное отклонение стоимости. Результаты отсортированы по убыванию стандартного отклонения стоимости и средней стоимости теста.",
            "sql_query": "SELECT l.LaboratoryID, l.Name, l.Type, COUNT(DISTINCT t.TestID) AS TotalTests, MIN(t.Price) AS MinTestPrice, MAX(t.Price) AS MaxTestPrice, ROUND(AVG(t.Price), 2) AS AvgTestPrice, ROUND(STDDEV(t.Price), 2) AS PriceStandardDeviation FROM Laboratories l JOIN LaboratoryTests t ON l.LaboratoryID = t.LaboratoryID GROUP BY l.LaboratoryID, l.Name, l.Type HAVING COUNT(DISTINCT t.TestID) > 0 ORDER BY PriceStandardDeviation DESC, AvgTestPrice DESC;"
        },
        {
            "question": "Проанализировать сложность медицинской истории пациентов за период с 2023 года. В ответе должны быть представлены: идентификатор пациента, имя, фамилия, группа крови, общее количество медицинских записей, количество выписанных рецептов, количество проведенных вакцинаций, количество выполненных операций, количество проведенных лабораторных тестов, дата первого и последнего визита, общая продолжительность лечения. Результаты отсортированы по суммарному количеству медицинских процедур (записи + рецепты + вакцинации + операции + тесты) и ограничены топ-10 пациентов с более чем одной медицинской записью.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, p.BloodType, COUNT(DISTINCT mr.RecordID) AS TotalRecords, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT v.VaccinationID) AS TotalVaccinations, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT t.TestID) AS TotalTests, MIN(mr.VisitDate) AS FirstVisit, MAX(mr.VisitDate) AS LastVisit, DATEDIFF(MAX(mr.VisitDate), MIN(mr.VisitDate)) AS TreatmentDuration FROM Patients p JOIN MedicalRecords mr ON p.PatientID = mr.PatientID LEFT JOIN Prescriptions pr ON p.PatientID = pr.PatientID LEFT JOIN Vaccinations v ON p.PatientID = v.PatientID LEFT JOIN Surgeries s ON p.PatientID = s.PatientID LEFT JOIN TestResults tr ON p.PatientID = tr.PatientID LEFT JOIN LaboratoryTests t ON tr.TestID = t.TestID WHERE mr.VisitDate >= '2023-01-01' GROUP BY p.PatientID, p.FirstName, p.LastName, p.BloodType HAVING COUNT(DISTINCT mr.RecordID) > 1 ORDER BY TotalRecords + TotalPrescriptions + TotalVaccinations + TotalSurgeries + TotalTests DESC LIMIT 10;"
        },
        {
            "question": "Проанализировать эффективность работы врачей по специальностям за период с 2023 года. В ответе должны быть представлены: специальность врача, общее количество проведенных операций, количество успешных операций, общее количество приемов, количество завершенных приемов, средняя продолжительность операций в минутах, процент успешных операций. Результаты отсортированы по проценту успешных операций и количеству завершенных приемов, показаны только врачи с опытом проведения операций или приемов.",
            "sql_query": "SELECT d.Specialty, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) AS SuccessfulSurgeries, COUNT(DISTINCT a.AppointmentID) AS TotalAppointments, COUNT(DISTINCT CASE WHEN a.Status = 'Завершено' THEN a.AppointmentID END) AS CompletedAppointments, ROUND(AVG(s.DurationMinutes), 2) AS AvgSurgeryDuration, ROUND(COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) * 100.0 / COUNT(DISTINCT s.SurgeryID), 2) AS SurgerySuccessRate FROM Doctors d LEFT JOIN Surgeries s ON d.DoctorID = s.DoctorID LEFT JOIN Appointments a ON d.DoctorID = a.DoctorID WHERE s.SurgeryDate >= '2023-01-01' OR a.AppointmentDate >= '2023-01-01' GROUP BY d.Specialty HAVING COUNT(DISTINCT s.SurgeryID) > 0 OR COUNT(DISTINCT a.AppointmentID) > 0 ORDER BY SurgerySuccessRate DESC, CompletedAppointments DESC;"
        },
        {
            "question": "Проанализировать прогресс лечения пациентов с учетом медикаментозной терапии за период с 2023 года. В ответе должны быть представлены: идентификатор пациента, имя, фамилия, группа крови, общее количество медицинских записей, количество выписанных рецептов, количество различных назначенных лекарственных препаратов, дата первого и последнего визита, общая продолжительность лечения, средняя продолжительность приема лекарств в днях. Результаты отсортированы по продолжительности лечения и количеству рецептов, ограничены топ-10 пациентов с более чем одной медицинской записью.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, p.BloodType, COUNT(DISTINCT mr.RecordID) AS TotalRecords, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT m.MedicationID) AS UniqueMedications, MIN(mr.VisitDate) AS FirstVisit, MAX(mr.VisitDate) AS LastVisit, DATEDIFF(MAX(mr.VisitDate), MIN(mr.VisitDate)) AS TreatmentDuration, ROUND(AVG(DATEDIFF(pr.EndDate, pr.StartDate)), 2) AS AvgMedicationDuration FROM Patients p JOIN MedicalRecords mr ON p.PatientID = mr.PatientID LEFT JOIN Prescriptions pr ON p.PatientID = pr.PatientID LEFT JOIN Medications m ON pr.MedicationID = m.MedicationID WHERE mr.VisitDate >= '2023-01-01' GROUP BY p.PatientID, p.FirstName, p.LastName, p.BloodType HAVING COUNT(DISTINCT mr.RecordID) > 1 ORDER BY TreatmentDuration DESC, TotalPrescriptions DESC LIMIT 10;"
        },
        {
            "question": "Проанализировать эффективность лабораторных тестов по длительности выполнения за период с 2023 года. В ответе должны быть представлены: длительность выполнения теста, общее количество тестов, количество завершенных тестов, количество уникальных пациентов, средняя стоимость теста, процент завершенных тестов. Результаты отсортированы по проценту завершенных тестов и общему количеству тестов, показаны только тесты с активными результатами.",
            "sql_query": "SELECT t.Duration, COUNT(DISTINCT t.TestID) AS TotalTests, COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) AS CompletedTests, COUNT(DISTINCT p.PatientID) AS UniquePatients, ROUND(AVG(t.Price), 2) AS AvgTestPrice, ROUND(COUNT(DISTINCT CASE WHEN r.Status = 'Завершено' THEN r.ResultID END) * 100.0 / COUNT(DISTINCT t.TestID), 2) AS CompletionRate FROM LaboratoryTests t JOIN TestResults r ON t.TestID = r.TestID JOIN Patients p ON r.PatientID = p.PatientID WHERE r.ResultDate >= '2023-01-01' GROUP BY t.Duration HAVING COUNT(DISTINCT t.TestID) > 0 ORDER BY CompletionRate DESC, TotalTests DESC;"
        },
        {
            "question": "Проанализировать результаты операций по демографическим характеристикам пациентов за период с 2023 года. В ответе должны быть представлены: группа крови пациента, пол пациента, общее количество операций, количество успешных операций, средняя продолжительность операций в минутах, средний возраст пациентов, процент успешных операций. Результаты отсортированы по проценту успешных операций и общему количеству операций, показаны только группы с проведенными операциями.",
            "sql_query": "SELECT p.BloodType, p.Gender, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) AS SuccessfulSurgeries, ROUND(AVG(s.DurationMinutes), 2) AS AvgSurgeryDuration, ROUND(AVG(DATEDIFF(CURRENT_DATE, p.DateOfBirth) / 365), 2) AS AvgPatientAge, ROUND(COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) * 100.0 / COUNT(DISTINCT s.SurgeryID), 2) AS SuccessRate FROM Patients p JOIN Surgeries s ON p.PatientID = s.PatientID WHERE s.SurgeryDate >= '2023-01-01' GROUP BY p.BloodType, p.Gender HAVING COUNT(DISTINCT s.SurgeryID) > 0 ORDER BY SuccessRate DESC, TotalSurgeries DESC;"
        },
        {
            "question": "Проанализировать паттерны назначения лекарственных препаратов по возрастным группам пациентов за период с 2023 года. В ответе представлены: возрастная группа (с шагом 10 лет), общее количество выписанных рецептов, количество различных назначенных препаратов, средняя продолжительность курса лечения в днях, дата первого и последнего назначения. Результаты сгруппированы по возрастным группам и отсортированы по количеству рецептов.",
            "sql_query": "SELECT FLOOR(DATEDIFF(CURRENT_DATE, p.DateOfBirth) / 365 / 10) * 10 AS AgeGroup, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT m.MedicationID) AS UniqueMedications, ROUND(AVG(DATEDIFF(pr.EndDate, pr.StartDate)), 2) AS AvgTreatmentDuration, MIN(pr.StartDate) AS FirstPrescription, MAX(pr.EndDate) AS LastPrescription FROM Patients p JOIN Prescriptions pr ON p.PatientID = pr.PatientID JOIN Medications m ON pr.MedicationID = m.MedicationID WHERE pr.StartDate >= '2023-01-01' GROUP BY AgeGroup HAVING COUNT(DISTINCT pr.PrescriptionID) > 0 ORDER BY AgeGroup, TotalPrescriptions DESC;"
        },
        {
            "question": "Проанализировать распределение врачебных приемов по часам суток за период с 2023 года. В ответе представлены: час приема, общее количество проведенных приемов, количество уникальных пациентов, количество врачей, ведущих прием, средняя продолжительность приема в минутах. Результаты сгруппированы по часам суток и отсортированы по времени.",
            "sql_query": "SELECT HOUR(a.AppointmentTime) AS HourOfDay, COUNT(DISTINCT a.AppointmentID) AS TotalAppointments, COUNT(DISTINCT p.PatientID) AS UniquePatients, COUNT(DISTINCT d.DoctorID) AS UniqueDoctors, ROUND(AVG(TIMESTAMPDIFF(MINUTE, a.AppointmentTime, a.AppointmentTime + INTERVAL 30 MINUTE)), 2) AS AvgAppointmentDuration FROM Appointments a JOIN Patients p ON a.PatientID = p.PatientID JOIN Doctors d ON a.DoctorID = d.DoctorID WHERE a.AppointmentDate >= '2023-01-01' GROUP BY HourOfDay HAVING COUNT(DISTINCT a.AppointmentID) > 0 ORDER BY HourOfDay;"
        },
        {
            "question": "Проанализировать частоту назначения лекарственных препаратов по врачебным специальностям за период с 2023 года. В ответе представлены: медицинская специальность, идентификатор препарата, название препарата, общее количество выписанных рецептов, количество пациентов, получивших назначение, средняя продолжительность курса лечения в днях. Результаты сгруппированы по специальности и отсортированы по количеству рецептов.",
            "sql_query": "SELECT d.Specialty, m.MedicationID, m.Name, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT p.PatientID) AS UniquePatients, ROUND(AVG(DATEDIFF(pr.EndDate, pr.StartDate)), 2) AS AvgTreatmentDuration FROM Doctors d JOIN Prescriptions pr ON d.DoctorID = pr.DoctorID JOIN Medications m ON pr.MedicationID = m.MedicationID JOIN Patients p ON pr.PatientID = p.PatientID WHERE pr.StartDate >= '2023-01-01' GROUP BY d.Specialty, m.MedicationID, m.Name HAVING COUNT(DISTINCT pr.PrescriptionID) > 0 ORDER BY d.Specialty, TotalPrescriptions DESC;"
        },
        {
            "question": "Проанализировать распределение хирургических операций по месяцам за период с 2023 года. В ответе представлены: месяц проведения операции, общее количество операций, количество прооперированных пациентов, количество оперирующих хирургов, средняя продолжительность операции в минутах, процент успешных операций. Результаты сгруппированы по месяцам и отсортированы по порядку месяцев.",
            "sql_query": "SELECT MONTH(s.SurgeryDate) AS Month, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT p.PatientID) AS UniquePatients, COUNT(DISTINCT d.DoctorID) AS UniqueDoctors, ROUND(AVG(s.DurationMinutes), 2) AS AvgSurgeryDuration, ROUND(COUNT(DISTINCT CASE WHEN s.Outcome = 'Успешно' THEN s.SurgeryID END) * 100.0 / COUNT(DISTINCT s.SurgeryID), 2) AS SuccessRate FROM Surgeries s JOIN Patients p ON s.PatientID = p.PatientID JOIN Doctors d ON s.DoctorID = d.DoctorID WHERE s.SurgeryDate >= '2023-01-01' GROUP BY Month HAVING COUNT(DISTINCT s.SurgeryID) > 0 ORDER BY Month;"
        },
        {
            "question": "Проанализировать объем лабораторных исследований по дням недели за период с 2023 года. В ответе представлены: день недели, общее количество проведенных тестов, количество пациентов, сдавших анализы, количество различных типов исследований, средняя стоимость одного теста. Результаты сгруппированы по дням недели и отсортированы по порядку дней.",
            "sql_query": "SELECT DAYOFWEEK(r.ResultDate) AS DayOfWeek, COUNT(DISTINCT r.ResultID) AS TotalTests, COUNT(DISTINCT p.PatientID) AS UniquePatients, COUNT(DISTINCT t.TestID) AS UniqueTestTypes, ROUND(AVG(t.Price), 2) AS AvgTestPrice FROM TestResults r JOIN Patients p ON r.PatientID = p.PatientID JOIN LaboratoryTests t ON r.TestID = t.TestID WHERE r.ResultDate >= '2023-01-01' GROUP BY DayOfWeek HAVING COUNT(DISTINCT r.ResultID) > 0 ORDER BY DayOfWeek;"
        },
        {
            "question": "Проанализировать сложность медицинской истории пациентов за период с 2023 года. В ответе представлены: идентификатор пациента, имя, фамилия, общее количество медицинских записей, количество выписанных рецептов, количество проведенных операций, количество вакцинаций, количество лабораторных тестов, интегральный показатель сложности лечения (рассчитывается как сумма: количество рецептов * 2 + количество операций * 3 + количество вакцинаций + количество тестов). Результаты ограничены 15 записями и отсортированы по убыванию показателя сложности.",
            "sql_query": "SELECT p.PatientID, p.FirstName, p.LastName, COUNT(DISTINCT mr.RecordID) AS TotalRecords, COUNT(DISTINCT pr.PrescriptionID) AS TotalPrescriptions, COUNT(DISTINCT s.SurgeryID) AS TotalSurgeries, COUNT(DISTINCT v.VaccinationID) AS TotalVaccinations, COUNT(DISTINCT t.TestID) AS TotalTests, (COUNT(DISTINCT pr.PrescriptionID) * 2 + COUNT(DISTINCT s.SurgeryID) * 3 + COUNT(DISTINCT v.VaccinationID) + COUNT(DISTINCT t.TestID)) AS ComplexityScore FROM Patients p LEFT JOIN MedicalRecords mr ON p.PatientID = mr.PatientID LEFT JOIN Prescriptions pr ON p.PatientID = pr.PatientID LEFT JOIN Surgeries s ON p.PatientID = s.PatientID LEFT JOIN Vaccinations v ON p.PatientID = v.PatientID LEFT JOIN TestResults tr ON p.PatientID = tr.PatientID LEFT JOIN LaboratoryTests t ON tr.TestID = t.TestID WHERE mr.VisitDate >= '2023-01-01' GROUP BY p.PatientID, p.FirstName, p.LastName HAVING ComplexityScore > 0 ORDER BY ComplexityScore DESC LIMIT 15;"
        }
    ]
}
