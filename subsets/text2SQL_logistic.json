{
    "queries": [
        {
            "question": "Какие поставщики имеют более 5 активных продуктов в ассортименте?",
            "sql_query": "SELECT s.Name, COUNT(p.ProductID) AS ProductCount FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = FALSE GROUP BY s.Name HAVING COUNT(p.ProductID) > 5;"
        },
        {
            "question": "Какие сотрудники управляют более чем одним складом одновременно?",
            "sql_query": "SELECT e.FirstName, e.LastName, COUNT(w.WarehouseID) AS ManagedWarehouses FROM Employees e JOIN Warehouses w ON e.EmployeeID = w.ManagerID GROUP BY e.FirstName, e.LastName HAVING COUNT(w.WarehouseID) > 1;"
        },
        {
            "question": "Какие продукты из категории 'Кухонная посуда' имеют среднее количество заказов более 10 единиц?",
            "sql_query": "SELECT p.Name, AVG(od.Quantity) AS AvgQuantity FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID WHERE p.Category = 'Кухонная посуда' GROUP BY p.Name HAVING AVG(od.Quantity) > 10;"
        },
        {
            "question": "Какие сотрудники обработали более 5 заказов через управляемые ими склады?",
            "sql_query": "SELECT e.FirstName, e.LastName, COUNT(o.OrderID) AS OrdersHandled FROM Employees e JOIN Warehouses w ON e.EmployeeID = w.ManagerID JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN OrderDetails od ON i.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID GROUP BY e.FirstName, e.LastName HAVING COUNT(o.OrderID) > 5;"
        },
        {
            "question": "Какие поставщики имеют максимальную цену на свои активные продукты более 200 единиц?",
            "sql_query": "SELECT s.Name, MAX(p.UnitPrice) AS MaxPrice FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID WHERE p.Discontinued = FALSE GROUP BY s.Name HAVING MAX(p.UnitPrice) > 200;"
        },
        {
            "question": "Какие сотрудники обработали более 3 успешных доставок через управляемые ими склады?",
            "sql_query": "SELECT e.FirstName, e.LastName, COUNT(d.DeliveryID) AS DeliveriesHandled FROM Employees e JOIN Warehouses w ON e.EmployeeID = w.ManagerID JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN OrderDetails od ON i.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Shipments s ON o.OrderID = s.OrderID JOIN Deliveries d ON s.ShipmentID = d.ShipmentID WHERE d.Status = 'Доставлено' GROUP BY e.FirstName, e.LastName HAVING COUNT(d.DeliveryID) > 3;"
        },
        {
            "question": "Какие города имеют средний платеж более 1000 единиц по завершенным платежам?",
            "sql_query": "SELECT c.City, AVG(p.Amount) AS AvgPayment FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Payments p ON o.OrderID = p.OrderID WHERE p.Status = 'Завершено' GROUP BY c.City HAVING AVG(p.Amount) > 1000;"
        },
        {
            "question": "Какие города имеют более 5 успешных доставок?",
            "sql_query": "SELECT c.City, COUNT(d.DeliveryID) AS DeliveriesCount FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Shipments s ON o.OrderID = s.OrderID JOIN Deliveries d ON s.ShipmentID = d.ShipmentID WHERE d.Status = 'Доставлено' GROUP BY c.City HAVING COUNT(d.DeliveryID) > 5;"
        },
        {
            "question": "Какие поставщики имеют общую стоимость инвентаря более 10000 единиц?",
            "sql_query": "SELECT s.Name, SUM(p.UnitPrice * i.Quantity) AS TotalInventoryValue FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN Inventory i ON p.ProductID = i.ProductID WHERE p.Discontinued = FALSE GROUP BY s.Name HAVING SUM(p.UnitPrice * i.Quantity) > 10000;"
        },
        {
            "question": "Какие сотрудники имеют средний платеж более 1000 единиц по завершенным платежам?",
            "sql_query": "SELECT e.FirstName, e.LastName, AVG(p.Amount) AS AvgPayment FROM Employees e JOIN Warehouses w ON e.EmployeeID = w.ManagerID JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN OrderDetails od ON i.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Payments p ON o.OrderID = p.OrderID WHERE p.Status = 'Завершено' GROUP BY e.FirstName, e.LastName HAVING AVG(p.Amount) > 1000;"
        },
        {
            "question": "Какие клиенты имеют более 3 успешных доставок?",
            "sql_query": "SELECT c.Name, COUNT(s.ShipmentID) AS ShipmentsCount FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Shipments s ON o.OrderID = s.OrderID WHERE s.Status = 'Доставлено' GROUP BY c.Name HAVING COUNT(s.ShipmentID) > 3;"
        },
        {
            "question": "Какие города имеют более 5 завершенных платежей?",
            "sql_query": "SELECT c.City, COUNT(p.PaymentID) AS PaymentsCount FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Payments p ON o.OrderID = p.OrderID WHERE p.Status = 'Завершено' GROUP BY c.City HAVING COUNT(p.PaymentID) > 5;"
        },
        {
            "question": "Какие сотрудники обработали более 3 успешных доставок?",
            "sql_query": "SELECT e.FirstName, e.LastName, COUNT(s.ShipmentID) AS ShipmentsHandled FROM Employees e JOIN Warehouses w ON e.EmployeeID = w.ManagerID JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN OrderDetails od ON i.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Shipments s ON o.OrderID = s.OrderID WHERE s.Status = 'Доставлено' GROUP BY e.FirstName, e.LastName HAVING COUNT(s.ShipmentID) > 3;"
        },
        {
            "question": "Какие клиенты потратили более 7000 единиц на завершенные платежи?",
            "sql_query": "SELECT c.Name, SUM(p.Amount) AS TotalPayments FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Payments p ON o.OrderID = p.OrderID WHERE p.Status = 'Завершено' GROUP BY c.Name HAVING SUM(p.Amount) > 7000;"
        },
        {
            "question": "Какие города имеют более 8 успешных доставок?.",
            "sql_query": "SELECT c.City, COUNT(d.DeliveryID) AS DeliveriesCount FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Shipments s ON o.OrderID = s.OrderID JOIN Deliveries d ON s.ShipmentID = d.ShipmentID WHERE d.Status = 'Доставлено' GROUP BY c.City HAVING COUNT(d.DeliveryID) > 8;"
        },
        {
            "question": "Какие поставщики имеют общую стоимость инвентаря более 15000 единиц?",
            "sql_query": "SELECT s.Name, SUM(p.UnitPrice * i.Quantity) AS TotalInventoryValue FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN Inventory i ON p.ProductID = i.ProductID WHERE p.Discontinued = FALSE GROUP BY s.Name HAVING SUM(p.UnitPrice * i.Quantity) > 15000;"
        },
        {
            "question": "Какие сотрудники имеют средний платеж более 1500 единиц по завершенным платежам?",
            "sql_query": "SELECT e.FirstName, e.LastName, AVG(p.Amount) AS AvgPayment FROM Employees e JOIN Warehouses w ON e.EmployeeID = w.ManagerID JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN OrderDetails od ON i.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Payments p ON o.OrderID = p.OrderID WHERE p.Status = 'Завершено' GROUP BY e.FirstName, e.LastName HAVING AVG(p.Amount) > 1500;"
        },
        {
            "question": "Какие клиенты имеют более 5 доставок?",
            "sql_query": "SELECT c.Name, COUNT(s.ShipmentID) AS ShipmentsCount FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Shipments s ON o.OrderID = s.OrderID WHERE s.Status = 'Доставлено' GROUP BY c.Name HAVING COUNT(s.ShipmentID) > 5;"
        },
        {
            "question": "Какие продукты имеют высокий уровень возвратов и их поставщики? Покажите топ-5 продуктов с наибольшим количеством возвратов, включая название продукта, категорию, название поставщика, количество возвратов и общее количество возвращенных единиц.",
            "sql_query": "SELECT p.Name, p.Category, s.Name as SupplierName, COUNT(DISTINCT r.ReturnID) as ReturnCount, SUM(r.Quantity) as TotalReturnedQuantity FROM Products p JOIN Suppliers s ON p.SupplierID = s.SupplierID JOIN `Returns` r ON p.ProductID = r.ProductID WHERE r.Status = 'Возврат выполнен' GROUP BY p.Name, p.Category, s.Name HAVING COUNT(DISTINCT r.ReturnID) > 2 ORDER BY ReturnCount DESC LIMIT 5;"
        },
        {
            "question": "Какие маршруты доставки наиболее эффективны с точки зрения использования транспортных средств? Покажите топ-8 маршрутов с наибольшим количеством успешных доставок, включая начальную и конечную точку, расстояние, модель транспортного средства, количество доставок и количество успешных доставок.",
            "sql_query": "SELECT r.StartLocation, r.EndLocation, r.Distance, v.Model, COUNT(DISTINCT d.DeliveryID) as DeliveryCount, SUM(CASE WHEN d.Status = 'Доставлено' THEN 1 ELSE 0 END) as SuccessfulDeliveries FROM Routes r JOIN Vehicles v ON r.ShipperID = v.ShipperID JOIN Deliveries d ON v.VehicleID = d.VehicleID WHERE r.Status = 'Активен' GROUP BY r.StartLocation, r.EndLocation, r.Distance, v.Model HAVING COUNT(DISTINCT d.DeliveryID) > 3 ORDER BY SuccessfulDeliveries DESC LIMIT 8;"
        },
        {
            "question": "Как распределяется инвентарь по категориям продуктов на складах? Покажите топ-6 категорий с наибольшей стоимостью инвентаря, включая название склада, категорию продукта, количество уникальных продуктов, общее количество товаров и стоимость инвентаря.",
            "sql_query": "SELECT w.Name as WarehouseName, p.Category, COUNT(DISTINCT i.ProductID) as UniqueProducts, SUM(i.Quantity) as TotalStock, SUM(i.Quantity * p.UnitPrice) as InventoryValue FROM Warehouses w JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN Products p ON i.ProductID = p.ProductID WHERE p.Discontinued = FALSE GROUP BY w.Name, p.Category HAVING SUM(i.Quantity) > 50 ORDER BY InventoryValue DESC LIMIT 6;"
        },
        {
            "question": "Какие перевозчики имеют высокий уровень успешных доставок? Покажите топ-9 перевозчиков с наибольшим количеством успешных доставок, включая название перевозчика, общее количество отправлений, количество успешных доставок и количество транспортных средств.",
            "sql_query": "SELECT s.Name as ShipperName, COUNT(DISTINCT sh.ShipmentID) as TotalShipments, COUNT(DISTINCT CASE WHEN sh.Status = 'Доставлено' THEN sh.ShipmentID END) as SuccessfulShipments, COUNT(DISTINCT v.VehicleID) as TotalVehicles FROM Shippers s JOIN Shipments sh ON s.ShipperID = sh.ShipperID JOIN Vehicles v ON s.ShipperID = v.ShipperID GROUP BY s.Name HAVING COUNT(DISTINCT sh.ShipmentID) > 3 ORDER BY SuccessfulShipments DESC LIMIT 9;"
        },
        {
            "question": "Какие клиенты имеют сложные паттерны заказов и анализ платежей? Покажите топ-7 клиентов с наибольшими суммами заказов, включая имя клиента, город, общее количество заказов, общую сумму потраченных средств, среднюю стоимость заказа, количество успешных и отмененных платежей.",
            "sql_query": "SELECT c.Name, c.City, COUNT(DISTINCT o.OrderID) as TotalOrders, SUM(p.Amount) as TotalSpent, AVG(p.Amount) as AvgOrderValue, COUNT(DISTINCT CASE WHEN p.Status = 'Завершено' THEN p.PaymentID END) as SuccessfulPayments, COUNT(DISTINCT CASE WHEN p.Status = 'Отменено' THEN p.PaymentID END) as FailedPayments FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN Payments p ON o.OrderID = p.OrderID WHERE o.Status = 'Доставлено' GROUP BY c.Name, c.City HAVING COUNT(DISTINCT o.OrderID) > 2 ORDER BY TotalSpent DESC LIMIT 7;"
        },
        {
            "question": "Какова производительность поставщиков с учетом возвратов продуктов и инвентаря? Покажите топ-4 поставщиков с наибольшим количеством возвратов, включая название поставщика, общее количество продуктов, общее количество инвентаря, количество возвратов, среднюю цену продукта и количество успешно возвращенных единиц.",
            "sql_query": "SELECT s.Name as SupplierName, COUNT(DISTINCT p.ProductID) as TotalProducts, SUM(i.Quantity) as TotalInventory, COUNT(DISTINCT r.ReturnID) as TotalReturns, AVG(p.UnitPrice) as AvgProductPrice, SUM(CASE WHEN r.Status = 'Возврат выполнен' THEN r.Quantity ELSE 0 END) as SuccessfullyReturned FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN Inventory i ON p.ProductID = i.ProductID LEFT JOIN `Returns` r ON p.ProductID = r.ProductID WHERE p.Discontinued = FALSE GROUP BY s.Name HAVING COUNT(DISTINCT p.ProductID) > 1 ORDER BY TotalReturns DESC LIMIT 4;"
        },
        {
            "question": "Какова производительность складов с учетом различных категорий продуктов? Покажите топ-6 складов с наибольшим количеством товаров, включая название склада, количество уникальных продуктов, общее количество товаров, количество товаров категории 'Бытовая техника', количество товаров категории 'Одежда' и среднюю цену продукта.",
            "sql_query": "SELECT w.Name as WarehouseName, COUNT(DISTINCT i.ProductID) as UniqueProducts, SUM(i.Quantity) as TotalStock, COUNT(DISTINCT CASE WHEN p.Category = 'Бытовая техника' THEN p.ProductID END) as ElectronicsCount, COUNT(DISTINCT CASE WHEN p.Category = 'Одежда' THEN p.ProductID END) as ClothingCount, AVG(p.UnitPrice) as AvgProductPrice FROM Warehouses w JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN Products p ON i.ProductID = p.ProductID WHERE p.Discontinued = FALSE GROUP BY w.Name HAVING SUM(i.Quantity) > 30 ORDER BY TotalStock DESC LIMIT 6;"
        },
        {
            "question": "Какова производительность маршрутов доставки с учетом эффективности транспортных средств? Покажите топ-5 маршрутов с наибольшим количеством успешных доставок, включая начальную и конечную точку, общее количество доставок, количество успешных доставок, количество использованных транспортных средств, среднее расстояние маршрута и количество задержанных доставок.",
            "sql_query": "SELECT r.StartLocation, r.EndLocation, COUNT(DISTINCT d.DeliveryID) as TotalDeliveries, COUNT(DISTINCT CASE WHEN d.Status = 'Доставлено' THEN d.DeliveryID END) as SuccessfulDeliveries, COUNT(DISTINCT v.VehicleID) as VehiclesUsed, AVG(r.Distance) as AvgRouteDistance, SUM(CASE WHEN d.Status = 'Задержка' THEN 1 ELSE 0 END) as DelayedDeliveries FROM Routes r JOIN Vehicles v ON r.ShipperID = v.ShipperID JOIN Deliveries d ON v.VehicleID = d.VehicleID WHERE r.Status = 'Активен' GROUP BY r.StartLocation, r.EndLocation HAVING COUNT(DISTINCT d.DeliveryID) > 2 ORDER BY SuccessfulDeliveries DESC LIMIT 5;"
        },
        {
            "question": "Каков комплексный анализ заказов с учетом деталей доставки и платежей? Покажите топ-8 заказов с наибольшей стоимостью, включая номер заказа, имя клиента, количество заказанных продуктов, общее количество единиц, стоимость заказа, количество отправлений, количество платежей и максимальную сумму платежа.",
            "sql_query": "SELECT o.OrderID, c.Name as ClientName, COUNT(DISTINCT od.ProductID) as ProductsOrdered, SUM(od.Quantity) as TotalItems, SUM(od.Quantity * od.UnitPrice) as OrderValue, COUNT(DISTINCT s.ShipmentID) as ShipmentsCount, COUNT(DISTINCT p.PaymentID) as PaymentsCount, MAX(CASE WHEN p.Status = 'Завершено' THEN p.Amount ELSE 0 END) as MaxPayment FROM Orders o JOIN Clients c ON o.ClientID = c.ClientID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Shipments s ON o.OrderID = s.OrderID JOIN Payments p ON o.OrderID = p.OrderID WHERE o.Status = 'Доставлено' GROUP BY o.OrderID, c.Name HAVING COUNT(DISTINCT od.ProductID) > 1 ORDER BY OrderValue DESC LIMIT 8;"
        },
        {
            "question": "Каков комплексный анализ производительности поставщиков с учетом метрик продуктов и платежей? Покажите топ-7 поставщиков с наибольшей выручкой, включая идентификатор и название поставщика, общее количество продуктов, количество активного инвентаря, общее количество заказов, общую выручку, среднюю сумму платежа и количество завершенных платежей.",
            "sql_query": "SELECT s.SupplierID, s.Name as SupplierName, COUNT(DISTINCT p.ProductID) as TotalProducts, SUM(CASE WHEN p.Discontinued = FALSE THEN i.Quantity ELSE 0 END) as ActiveStock, COUNT(DISTINCT o.OrderID) as TotalOrders, SUM(od.Quantity * od.UnitPrice) as TotalRevenue, AVG(pm.Amount) as AvgPaymentAmount, COUNT(DISTINCT CASE WHEN pm.Status = 'Завершено' THEN pm.PaymentID END) as CompletedPayments FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID JOIN Inventory i ON p.ProductID = i.ProductID JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Payments pm ON o.OrderID = pm.OrderID WHERE p.StockQuantity > 0 GROUP BY s.SupplierID, s.Name HAVING COUNT(DISTINCT p.ProductID) > 2 ORDER BY TotalRevenue DESC LIMIT 7;"
        },
        {
            "question": "Каков многомерный анализ производительности складов? Покажите топ-4 склада с наибольшим количеством товаров, включая идентификатор и название склада, город, вместимость, имя менеджера, количество уникальных продуктов, общее количество товаров, количество товаров категории 'Бытовая техника', количество товаров категории 'Кухонная техника', среднюю цену продукта, общее количество отправлений и количество успешных отправлений.",
            "sql_query": "SELECT w.WarehouseID, w.Name as WarehouseName, w.City, w.Capacity, COUNT(DISTINCT i.ProductID) as UniqueProducts, SUM(i.Quantity) as TotalInventory, COUNT(DISTINCT CASE WHEN p.Category = 'Бытовая техника' THEN p.ProductID END) as AppliancesCount, COUNT(DISTINCT CASE WHEN p.Category = 'Кухонная техника' THEN p.ProductID END) as KitchenwareCount, AVG(p.UnitPrice) as AvgProductPrice, COUNT(DISTINCT s.ShipmentID) as TotalShipments, COUNT(DISTINCT CASE WHEN s.Status = 'Доставлено' THEN s.ShipmentID END) as SuccessfulShipments FROM Warehouses w JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN Products p ON i.ProductID = p.ProductID JOIN Shipments s ON w.WarehouseID = s.ShipmentID GROUP BY w.WarehouseID, w.Name, w.City, w.Capacity HAVING SUM(i.Quantity) > 50 ORDER BY TotalInventory DESC LIMIT 4;"
        },
        {
            "question": "Каков продвинутый анализ производительности сотрудников с учетом метрик доставки? Покажите топ-6 сотрудников с наибольшим количеством успешных доставок, включая идентификатор сотрудника, полное имя, должность, количество управляемых складов, общее количество отправлений, количество успешных доставок, количество управляемых транспортных средств, количество контролируемых маршрутов и среднее расстояние маршрута.",
            "sql_query": "SELECT e.EmployeeID, CONCAT(e.FirstName, ' ', e.LastName) as EmployeeName, e.Title, COUNT(DISTINCT w.WarehouseID) as ManagedWarehouses, COUNT(DISTINCT s.ShipmentID) as TotalShipments, COUNT(DISTINCT CASE WHEN s.Status = 'Доставлено' THEN s.ShipmentID END) as SuccessfulDeliveries, COUNT(DISTINCT v.VehicleID) as VehiclesManaged, COUNT(DISTINCT r.RouteID) as RoutesSupervised, AVG(r.Distance) as AvgRouteDistance FROM Employees e JOIN Warehouses w ON e.EmployeeID = w.ManagerID JOIN Shipments s ON w.WarehouseID = s.ShipmentID JOIN Routes r ON s.ShipperID = r.ShipperID JOIN Vehicles v ON r.ShipperID = v.ShipperID WHERE e.Title LIKE '%Менеджер%' OR e.Title LIKE '%Координатор%' GROUP BY e.EmployeeID, e.FirstName, e.LastName, e.Title HAVING COUNT(DISTINCT s.ShipmentID) > 3 ORDER BY SuccessfulDeliveries DESC LIMIT 6;"
        },
        {
            "question": "Каков продвинутый анализ использования и производительности транспортных средств? Покажите топ-3 транспортных средства с наибольшим пройденным расстоянием, включая идентификатор транспортного средства, номерной знак, модель, общее количество доставок, количество успешных доставок, количество пройденных маршрутов, общее пройденное расстояние, количество обработанных отправлений, количество успешных отправлений и среднее расстояние маршрута.",
            "sql_query": "SELECT v.VehicleID, v.LicensePlate, v.Model, COUNT(DISTINCT d.DeliveryID) as TotalDeliveries, COUNT(DISTINCT CASE WHEN d.Status = 'Доставлено' THEN d.DeliveryID END) as CompletedDeliveries, COUNT(DISTINCT r.RouteID) as RoutesCovered, SUM(r.Distance) as TotalDistance, COUNT(DISTINCT s.ShipmentID) as ShipmentsHandled, COUNT(DISTINCT CASE WHEN s.Status = 'Доставлено' THEN s.ShipmentID END) as SuccessfulShipments, AVG(r.Distance) as AvgRouteDistance FROM Vehicles v JOIN Deliveries d ON v.VehicleID = d.VehicleID JOIN Shipments s ON d.ShipmentID = s.ShipmentID JOIN Routes r ON s.ShipperID = r.ShipperID WHERE v.Status = 'В Работе' GROUP BY v.VehicleID, v.LicensePlate, v.Model HAVING COUNT(DISTINCT d.DeliveryID) > 2 ORDER BY TotalDistance DESC LIMIT 3;"
        },
        {
            "question": "Каков продвинутый анализ инвентаря складов с учетом категорий продуктов? Покажите топ-5 складов с наибольшим количеством товаров, включая идентификатор и название склада, категорию продукта, количество уникальных продуктов, общее количество товаров, среднюю цену продукта, количество обработанных заказов и количество обработанных отправлений.",
            "sql_query": "SELECT w.WarehouseID, w.Name as WarehouseName, p.Category, COUNT(DISTINCT i.ProductID) as UniqueProducts, SUM(i.Quantity) as TotalQuantity, AVG(p.UnitPrice) as AvgProductPrice, COUNT(DISTINCT o.OrderID) as OrdersProcessed, COUNT(DISTINCT s.ShipmentID) as ShipmentsHandled FROM Warehouses w JOIN Inventory i ON w.WarehouseID = i.WarehouseID JOIN Products p ON i.ProductID = p.ProductID JOIN Orders o ON w.WarehouseID = o.OrderID JOIN Shipments s ON o.OrderID = s.OrderID GROUP BY w.WarehouseID, w.Name, p.Category HAVING SUM(i.Quantity) > 20 ORDER BY TotalQuantity DESC LIMIT 5;"
        },
        {
            "question": "Каков комплексный анализ выполнения заказов с учетом метрик доставки? Покажите топ-7 заказов с наименьшим временем доставки за период с 1 января 2023 по 30 июня 2023, включая номер заказа, имя клиента, дату заказа, статус заказа, количество различных продуктов, общее количество единиц, стоимость заказа с учетом скидок, дату отправления, дату доставки, количество дней до доставки, название перевозчика, модель транспортного средства, расстояние маршрута и статус платежа.",
            "sql_query": "SELECT o.OrderID, c.Name AS ClientName, o.OrderDate, o.Status AS OrderStatus, COUNT(DISTINCT od.ProductID) AS ProductCount, SUM(od.Quantity) AS TotalItems, SUM(od.Quantity * od.UnitPrice * (1 - od.Discount/100)) AS OrderValue, s.ShipmentDate, d.DeliveryDate, DATEDIFF(d.DeliveryDate, o.OrderDate) AS DaysToDeliver, sh.Name AS ShipperName, v.Model AS VehicleModel, r.Distance AS RouteDistance, p.Status AS PaymentStatus FROM Orders o JOIN Clients c ON o.ClientID = c.ClientID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Shipments s ON o.OrderID = s.OrderID JOIN Deliveries d ON s.ShipmentID = d.ShipmentID JOIN Shippers sh ON s.ShipperID = sh.ShipperID JOIN Vehicles v ON d.VehicleID = v.VehicleID JOIN Routes r ON sh.ShipperID = r.ShipperID JOIN Payments p ON o.OrderID = p.OrderID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-06-30' GROUP BY o.OrderID, c.Name, o.OrderDate, o.Status, s.ShipmentDate, d.DeliveryDate, sh.Name, v.Model, r.Distance, p.Status HAVING SUM(od.Quantity) > 5 ORDER BY DaysToDeliver ASC LIMIT 7;"
        },
        {
            "question": "Каков многоуровневый анализ логистической производительности по регионам? Покажите топ-6 регионов с наибольшей выручкой, включая страну, город, количество клиентов, количество заказов, среднее время доставки, количество складов в городе, общую выручку, количество успешных доставок, количество проблемных доставок и процент успешных доставок.",
            "sql_query": "SELECT c.Country, c.City, COUNT(DISTINCT c.ClientID) AS ClientCount, COUNT(DISTINCT o.OrderID) AS OrderCount, AVG(DATEDIFF(s.DeliveryDate, o.OrderDate)) AS AvgDeliveryTime, (SELECT COUNT(DISTINCT w.WarehouseID) FROM Warehouses w WHERE w.City = c.City) AS WarehouseCount, SUM(od.Quantity * od.UnitPrice * (1 - od.Discount/100)) AS TotalRevenue, COUNT(DISTINCT CASE WHEN d.Status = 'Доставлено' THEN d.DeliveryID END) AS SuccessfulDeliveries, COUNT(DISTINCT CASE WHEN d.Status = 'Задержка' OR d.Status = 'Отменено' THEN d.DeliveryID END) AS ProblemDeliveries, (COUNT(DISTINCT CASE WHEN d.Status = 'Доставлено' THEN d.DeliveryID END) / COUNT(DISTINCT d.DeliveryID) * 100) AS DeliverySuccessRate FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID JOIN OrderDetails od ON o.OrderID = od.OrderID JOIN Shipments s ON o.OrderID = s.OrderID JOIN Deliveries d ON s.ShipmentID = d.ShipmentID GROUP BY c.Country, c.City HAVING OrderCount > 3 ORDER BY TotalRevenue DESC, DeliverySuccessRate DESC LIMIT 6;"
        },
        {
            "question": "Каков комплексный анализ цепочки поставок с многоуровневыми метриками? Покажите топ-5 активных маршрутов с наибольшей стоимостью перевозимых товаров, включая идентификатор маршрута, начальную и конечную точку, расстояние, расчетное время в минутах, количество назначенных транспортных средств, общую вместимость транспортных средств, количество выполненных доставок, количество перевезенных отправлений, количество выполненных заказов, общее количество доставленных единиц, общую стоимость перевезенных товаров и среднее время транзита.",
            "sql_query": "SELECT r.RouteID, r.StartLocation, r.EndLocation, r.Distance, TIME_TO_SEC(r.EstimatedTime)/60 AS EstimatedMinutes, COUNT(DISTINCT v.VehicleID) AS VehiclesAssigned, SUM(v.Capacity) AS TotalVehicleCapacity, COUNT(DISTINCT d.DeliveryID) AS DeliveriesCompleted, COUNT(DISTINCT s.ShipmentID) AS ShipmentsTransported, COUNT(DISTINCT o.OrderID) AS OrdersFulfilled, SUM(od.Quantity) AS TotalItemsDelivered, SUM(od.Quantity * od.UnitPrice * (1 - od.Discount/100)) AS TotalValueTransported, (SELECT AVG(DATEDIFF(d2.DeliveryDate, s2.ShipmentDate)) FROM Deliveries d2 JOIN Shipments s2 ON d2.ShipmentID = s2.ShipmentID JOIN Shippers sh2 ON s2.ShipperID = sh2.ShipperID JOIN Routes r2 ON sh2.ShipperID = r2.ShipperID WHERE r2.RouteID = r.RouteID) AS AvgTransitDays FROM Routes r JOIN Shippers sh ON r.ShipperID = sh.ShipperID JOIN Vehicles v ON sh.ShipperID = v.ShipperID JOIN Deliveries d ON v.VehicleID = d.VehicleID JOIN Shipments s ON d.ShipmentID = s.ShipmentID JOIN Orders o ON s.OrderID = o.OrderID JOIN OrderDetails od ON o.OrderID = od.OrderID WHERE r.Status = 'Активен' GROUP BY r.RouteID, r.StartLocation, r.EndLocation, r.Distance, r.EstimatedTime HAVING DeliveriesCompleted > 2 ORDER BY TotalValueTransported DESC, Distance ASC LIMIT 5;"
        },
        {
            "question": "Какова производительность поставщиков с учетом метрик доставки и статистики продуктов? Покажите топ-7 российских поставщиков с наибольшей чистой выручкой, включая идентификатор и название поставщика, рейтинг поставщика, количество поставляемых продуктов, среднюю цену продукта, общее количество инвентаря, количество заказов с продуктами поставщика, общее количество заказанных единиц, общее количество возвратов, среднее время доставки в днях и чистую выручку с учетом возвратов.",
            "sql_query": "SELECT s.SupplierID, s.Name AS SupplierName, s.Rating AS SupplierRating, COUNT(DISTINCT p.ProductID) AS ProductsSupplied, AVG(p.UnitPrice) AS AvgProductPrice, SUM(i.Quantity) AS TotalInventoryStock, COUNT(DISTINCT o.OrderID) AS OrdersWithSupplierProducts, SUM(od.Quantity) AS TotalItemsOrdered, (SELECT COUNT(DISTINCT r.ReturnID) FROM `Returns` r JOIN Products p2 ON r.ProductID = p2.ProductID WHERE p2.SupplierID = s.SupplierID) AS TotalReturns, (SELECT AVG(DATEDIFF(d.DeliveryDate, sh.ShipmentDate)) FROM Deliveries d JOIN Shipments sh ON d.ShipmentID = sh.ShipmentID JOIN Orders o2 ON sh.OrderID = o2.OrderID JOIN OrderDetails od2 ON o2.OrderID = od2.OrderID JOIN Products p3 ON od2.ProductID = p3.ProductID WHERE p3.SupplierID = s.SupplierID AND d.Status = 'Доставлено') AS AvgDeliveryDays, (SUM(od.Quantity * od.UnitPrice) - (SELECT COALESCE(SUM(r2.Quantity * od3.UnitPrice), 0) FROM `Returns` r2 JOIN OrderDetails od3 ON r2.OrderID = od3.OrderID AND r2.ProductID = od3.ProductID JOIN Products p4 ON od3.ProductID = p4.ProductID WHERE p4.SupplierID = s.SupplierID)) AS NetRevenue FROM Suppliers s JOIN Products p ON s.SupplierID = p.SupplierID LEFT JOIN Inventory i ON p.ProductID = i.ProductID LEFT JOIN OrderDetails od ON p.ProductID = od.ProductID LEFT JOIN Orders o ON od.OrderID = o.OrderID WHERE s.Country = 'Россия' AND p.Discontinued = FALSE GROUP BY s.SupplierID, s.Name, s.Rating HAVING ProductsSupplied >= 3 ORDER BY NetRevenue DESC, SupplierRating DESC LIMIT 7;"
        },
        {
            "question": "Каков анализ покупательского поведения клиентов с учетом сезонных паттернов? Покажите топ-12 клиентов с наибольшими суммами заказов за период с 2022 по 2023 год, сгруппированных по году и кварталу, включая идентификатор клиента, имя клиента, город, год и квартал заказа, количество заказов, общую сумму потраченных средств, среднюю стоимость заказа, разнообразие категорий заказанных продуктов, стоимость самого крупного единичного заказа, среднее время обработки заказа в днях, общее количество возвратов и сумму подтвержденных платежей.",
            "sql_query": "SELECT c.ClientID, c.Name AS ClientName, c.City, YEAR(o.OrderDate) AS OrderYear, QUARTER(o.OrderDate) AS OrderQuarter, COUNT(DISTINCT o.OrderID) AS OrderCount, SUM(o.TotalAmount) AS TotalSpent, (SUM(o.TotalAmount) / COUNT(DISTINCT o.OrderID)) AS AvgOrderValue, (SELECT COUNT(DISTINCT p2.Category) FROM OrderDetails od2 JOIN Products p2 ON od2.ProductID = p2.ProductID JOIN Orders o2 ON od2.OrderID = o2.OrderID WHERE o2.ClientID = c.ClientID) AS CategoryDiversity, (SELECT MAX(od3.Quantity * od3.UnitPrice) FROM OrderDetails od3 JOIN Orders o3 ON od3.OrderID = o3.OrderID WHERE o3.ClientID = c.ClientID) AS LargestSinglePurchase, (SELECT AVG(DATEDIFF(o4.ShippedDate, o4.OrderDate)) FROM Orders o4 WHERE o4.ClientID = c.ClientID AND o4.ShippedDate IS NOT NULL) AS AvgProcessingDays, (SELECT COUNT(DISTINCT r.ReturnID) FROM `Returns` r JOIN Orders o5 ON r.OrderID = o5.OrderID WHERE o5.ClientID = c.ClientID) AS TotalReturns, (SELECT SUM(p.Amount) FROM Payments p JOIN Orders o6 ON p.OrderID = o6.OrderID WHERE o6.ClientID = c.ClientID AND p.Status = 'Завершено') AS ConfirmedPayments FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID WHERE o.OrderDate BETWEEN '2022-01-01' AND '2023-12-31' GROUP BY c.ClientID, c.Name, c.City, OrderYear, OrderQuarter HAVING OrderCount > 2 ORDER BY OrderYear, OrderQuarter, TotalSpent DESC LIMIT 12;"
        },
        {
            "question": "Каков анализ эффективности складов и оборачиваемости инвентаря? Покажите топ-3 склада с наивысшим коэффициентом оборачиваемости инвентаря, включая идентификатор и название склада, город, вместимость, имя менеджера, количество уникальных продуктов, общее количество инвентаря, процент использования вместимости, общее количество отгруженных единиц, количество обработанных отправлений, среднее время выполнения заказа в днях и коэффициент оборачиваемости инвентаря.",
            "sql_query": "SELECT w.WarehouseID, w.Name AS WarehouseName, w.City, w.Capacity, e.FirstName || ' ' || e.LastName AS ManagerName, COUNT(DISTINCT i.ProductID) AS UniqueProducts, SUM(i.Quantity) AS TotalInventory, (SUM(i.Quantity) / w.Capacity * 100) AS CapacityUtilizationPercent, (SELECT SUM(od.Quantity) FROM OrderDetails od JOIN Products p ON od.ProductID = p.ProductID JOIN Inventory i2 ON p.ProductID = i2.ProductID WHERE i2.WarehouseID = w.WarehouseID) AS TotalItemsShipped, (SELECT COUNT(DISTINCT s.ShipmentID) FROM Shipments s JOIN Orders o ON s.OrderID = o.OrderID JOIN OrderDetails od2 ON o.OrderID = od2.OrderID JOIN Products p2 ON od2.ProductID = p2.ProductID JOIN Inventory i3 ON p2.ProductID = i3.ProductID WHERE i3.WarehouseID = w.WarehouseID) AS ShipmentsProcessed, (SELECT AVG(DATEDIFF(s2.ShipmentDate, o2.OrderDate)) FROM Shipments s2 JOIN Orders o2 ON s2.OrderID = o2.OrderID JOIN OrderDetails od3 ON o2.OrderID = od3.OrderID JOIN Products p3 ON od3.ProductID = p3.ProductID JOIN Inventory i4 ON p3.ProductID = i4.ProductID WHERE i4.WarehouseID = w.WarehouseID) AS AvgOrderFulfillmentDays, (SELECT SUM(od4.Quantity * od4.UnitPrice) / SUM(i5.Quantity * p4.UnitPrice) FROM Inventory i5 JOIN Products p4 ON i5.ProductID = p4.ProductID JOIN OrderDetails od4 ON p4.ProductID = od4.ProductID WHERE i5.WarehouseID = w.WarehouseID) AS InventoryTurnoverRatio FROM Warehouses w JOIN Employees e ON w.ManagerID = e.EmployeeID JOIN Inventory i ON w.WarehouseID = i.WarehouseID GROUP BY w.WarehouseID, w.Name, w.City, w.Capacity, ManagerName HAVING UniqueProducts > 5 ORDER BY InventoryTurnoverRatio DESC, CapacityUtilizationPercent DESC LIMIT 3;"
        },
        {
            "question": "Какова производительность автопарка и эффективность доставки? Покажите топ-6 транспортных средств с наивысшим процентом успешных доставок и вместимостью более 1000 единиц, включая идентификатор транспортного средства, номерной знак, модель, вместимость, статус, название перевозчика, общее количество доставок, количество успешных доставок, процент успешных доставок, среднее время доставки в днях, общую стоимость доставленных товаров, общее количество доставленных единиц и количество обслуживаемых маршрутов.",
            "sql_query": "SELECT v.VehicleID, v.LicensePlate, v.Model, v.Capacity, v.Status, sh.Name AS ShipperName, COUNT(DISTINCT d.DeliveryID) AS TotalDeliveries, COUNT(DISTINCT CASE WHEN d.Status = 'Доставлено' THEN d.DeliveryID END) AS CompletedDeliveries, (COUNT(DISTINCT CASE WHEN d.Status = 'Доставлено' THEN d.DeliveryID END) / COUNT(DISTINCT d.DeliveryID) * 100) AS SuccessRate, (SELECT AVG(DATEDIFF(d2.DeliveryDate, s.ShipmentDate)) FROM Deliveries d2 JOIN Shipments s ON d2.ShipmentID = s.ShipmentID WHERE d2.VehicleID = v.VehicleID AND d2.Status = 'Доставлено') AS AvgDeliveryDays, (SELECT SUM(od.Quantity * p.UnitPrice) FROM OrderDetails od JOIN Products p ON od.ProductID = p.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Shipments s2 ON o.OrderID = s2.OrderID JOIN Deliveries d3 ON s2.ShipmentID = d3.ShipmentID WHERE d3.VehicleID = v.VehicleID) AS TotalValueDelivered, (SELECT SUM(od2.Quantity) FROM OrderDetails od2 JOIN Orders o2 ON od2.OrderID = o2.OrderID JOIN Shipments s3 ON o2.OrderID = s3.OrderID JOIN Deliveries d4 ON s3.ShipmentID = d4.ShipmentID WHERE d4.VehicleID = v.VehicleID) AS TotalItemsDelivered, (SELECT COUNT(DISTINCT r.RouteID) FROM Routes r JOIN Shippers sh2 ON r.ShipperID = sh2.ShipperID WHERE sh2.ShipperID = v.ShipperID) AS RoutesServiced FROM Vehicles v JOIN Shippers sh ON v.ShipperID = sh.ShipperID LEFT JOIN Deliveries d ON v.VehicleID = d.VehicleID WHERE v.Capacity > 1000 GROUP BY v.VehicleID, v.LicensePlate, v.Model, v.Capacity, v.Status, sh.Name HAVING TotalDeliveries > 0 ORDER BY SuccessRate DESC, TotalValueDelivered DESC LIMIT 6;"
        },
        {
            "question": "Каков комплексный анализ платежей и возвратов с учетом метрик прибыльности клиентов? Покажите топ-8 клиентов с наибольшей чистой выручкой, зарегистрированных до 2023 года и имеющих более 3 заказов, включая идентификатор клиента, имя клиента, город, страну, количество дней как клиент, общее количество заказов, общую стоимость заказов, сумму подтвержденных платежей, сумму отмененных платежей, общее количество возвратов, стоимость возвращенных товаров, чистую выручку с учетом возвратов и среднее время от заказа до доставки в днях.",
            "sql_query": "SELECT c.ClientID, c.Name AS ClientName, c.City, c.Country, DATEDIFF(CURRENT_DATE, c.RegistrationDate) AS DaysAsCustomer, COUNT(DISTINCT o.OrderID) AS TotalOrders, SUM(o.TotalAmount) AS GrossOrderValue, (SELECT SUM(p.Amount) FROM Payments p JOIN Orders o2 ON p.OrderID = o2.OrderID WHERE o2.ClientID = c.ClientID AND p.Status = 'Завершено') AS ConfirmedPayments, (SELECT SUM(p2.Amount) FROM Payments p2 JOIN Orders o3 ON p2.OrderID = o3.OrderID WHERE o3.ClientID = c.ClientID AND p2.Status = 'Отменено') AS CanceledPayments, (SELECT COUNT(DISTINCT r.ReturnID) FROM `Returns` r JOIN Orders o4 ON r.OrderID = o4.OrderID WHERE o4.ClientID = c.ClientID) AS TotalReturns, (SELECT SUM(r2.Quantity * od.UnitPrice) FROM `Returns` r2 JOIN OrderDetails od ON r2.OrderID = od.OrderID AND r2.ProductID = od.ProductID JOIN Orders o5 ON r2.OrderID = o5.OrderID WHERE o5.ClientID = c.ClientID) AS ReturnValue, (SUM(o.TotalAmount) - (SELECT COALESCE(SUM(r3.Quantity * od2.UnitPrice), 0) FROM `Returns` r3 JOIN OrderDetails od2 ON r3.OrderID = od2.OrderID AND r3.ProductID = od2.ProductID JOIN Orders o6 ON r3.OrderID = o6.OrderID WHERE o6.ClientID = c.ClientID)) AS NetRevenue, (SELECT AVG(DATEDIFF(s.DeliveryDate, o7.OrderDate)) FROM Shipments s JOIN Orders o7 ON s.OrderID = o7.OrderID WHERE o7.ClientID = c.ClientID AND s.Status = 'Доставлено') AS AvgOrderToDeliveryDays FROM Clients c JOIN Orders o ON c.ClientID = o.ClientID WHERE c.RegistrationDate < '2023-01-01' GROUP BY c.ClientID, c.Name, c.City, c.Country, c.RegistrationDate HAVING TotalOrders >= 3 ORDER BY NetRevenue DESC, TotalReturns ASC LIMIT 8;"
        },
        {
            "question": "Какие топ-4 транспортные компании имеют наименьший средний срок задержки доставки за последние 6 месяцев при не менее 5 отправлениях, отсортированные по средней задержке в днях (восходящий порядок)?",
            "sql_query": "SELECT sh.ShipperID, sh.Name, COUNT(s.ShipmentID) AS TotalShipments, ROUND(AVG(DATEDIFF(s.DeliveryDate, s.ShipmentDate)),1) AS AvgDelayDays FROM Shippers sh JOIN Shipments s ON sh.ShipperID = s.ShipperID WHERE s.ShipmentDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY sh.ShipperID, sh.Name HAVING COUNT(s.ShipmentID) >= 5 ORDER BY AvgDelayDays ASC LIMIT 4;"
        },
        {
            "question": "Какие топ-6 продуктов имеют наивысший коэффициент оборачиваемости, вычисляемый как отношение проданных единиц за 2023 год к суммарному складскому запасу, при продаже не менее 100 единиц, отсортированные по коэффициенту оборачиваемости (убывающий порядок)?",
            "sql_query": "SELECT p.ProductID, p.Name, SUM(od.Quantity) AS SoldUnits, SUM(i.Quantity) AS StockUnits, ROUND(SUM(od.Quantity)/NULLIF(SUM(i.Quantity),0),2) AS TurnoverRatio FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID JOIN Inventory i ON p.ProductID = i.ProductID WHERE o.OrderDate BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY p.ProductID, p.Name HAVING SUM(od.Quantity) >= 100 ORDER BY TurnoverRatio DESC LIMIT 6;"
        },
        {
            "question": "Какие топ-5 клиентов по проценту возвращенных товаров за последние 6 месяцев, включая общее количество заказанных единиц, количество возвращенных единиц и процент возвратов, отсортированные по проценту возвратов (убывающий порядок)?",
            "sql_query": "SELECT cl.ClientID, cl.Name, SUM(od.Quantity) AS OrderedUnits, SUM(ret.Quantity) AS ReturnedUnits, ROUND(SUM(ret.Quantity)/NULLIF(SUM(od.Quantity),0)*100,2) AS ReturnRate FROM Clients cl JOIN Orders o ON cl.ClientID = o.ClientID JOIN OrderDetails od ON o.OrderID = od.OrderID LEFT JOIN Returns ret ON o.OrderID = ret.OrderID AND ret.ReturnDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH) GROUP BY cl.ClientID, cl.Name HAVING SUM(od.Quantity) > 0 ORDER BY ReturnRate DESC LIMIT 5;"
        },
        {
            "question": "Какие топ-4 транспортные средства по коэффициенту использования за последний год, вычисляемому как количество доставок к количеству дней между первой и последней доставкой, при не менее 3 доставках, отсортированные по коэффициенту использования (убывающий порядок)?",
            "sql_query": "SELECT v.VehicleID, v.LicensePlate, v.Model, COUNT(d.DeliveryID) AS TotalDeliveries, DATEDIFF(MAX(d.DeliveryDate), MIN(d.DeliveryDate)) AS OperDays, ROUND(COUNT(d.DeliveryID)/NULLIF(DATEDIFF(MAX(d.DeliveryDate), MIN(d.DeliveryDate)),0),2) AS UtilizationRate FROM Vehicles v JOIN Deliveries d ON v.VehicleID = d.VehicleID WHERE d.DeliveryDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY v.VehicleID, v.LicensePlate, v.Model HAVING COUNT(d.DeliveryID) >= 3 ORDER BY UtilizationRate DESC LIMIT 4;"
        },
        {
            "question": "Какие топ-7 маршрутов со статусом 'Активен' или 'Завершен' имеют наибольшую среднюю скорость доставки (км/ч), вычисленную как расстояние, деленное на оценочное время в часах, отсортированные по средней скорости (убывающий порядок)?",
            "sql_query": "SELECT r.RouteID, r.StartLocation, r.EndLocation, r.Distance, ROUND(r.Distance/(TIME_TO_SEC(r.EstimatedTime)/3600),2) AS AvgSpeed FROM Routes r WHERE r.Status IN ('Активен', 'Завершен') GROUP BY r.RouteID, r.StartLocation, r.EndLocation, r.Distance, r.EstimatedTime ORDER BY AvgSpeed DESC LIMIT 7;"
        },
        {
            "question": "Какие топ-5 категорий товаров имеют наивысший уровень возвратов за последние 3 месяца, включая общее количество проданных единиц, вернувшихся единиц и процент возвратов (убывающий порядок)?",
            "sql_query": "SELECT p.Category, SUM(od.Quantity) AS SoldUnits, SUM(ret.Quantity) AS ReturnedUnits, ROUND(SUM(ret.Quantity)/NULLIF(SUM(od.Quantity),0)*100,2) AS ReturnRate FROM Products p JOIN OrderDetails od ON p.ProductID = od.ProductID JOIN Orders o ON od.OrderID = o.OrderID LEFT JOIN Returns ret ON o.OrderID = ret.OrderID AND ret.ReturnDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) WHERE o.OrderDate >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH) GROUP BY p.Category HAVING SUM(od.Quantity) > 0 ORDER BY ReturnRate DESC LIMIT 5;"
        },
        {
            "question": "Какие топ-6 городов клиентов имеют наибольшую среднюю сумму заказа и среднее время доставки (в днях) за последние 12 месяцев при не менее 4 доставленных заказах, отсортированные по средней сумме заказа (убывающий порядок)?",
            "sql_query": "SELECT cl.City, COUNT(o.OrderID) AS DeliveredOrders, ROUND(AVG(o.TotalAmount),2) AS AvgOrderAmount, ROUND(AVG(DATEDIFF(s.DeliveryDate, s.ShipmentDate)),1) AS AvgDeliveryDays FROM Clients cl JOIN Orders o ON cl.ClientID = o.ClientID JOIN Shipments s ON o.OrderID = s.OrderID WHERE o.Status = 'Доставлено' AND s.DeliveryDate >= DATE_SUB(CURDATE(), INTERVAL 12 MONTH) GROUP BY cl.City HAVING COUNT(o.OrderID) >= 4 ORDER BY AvgOrderAmount DESC LIMIT 6;"
        }
    ]
}
